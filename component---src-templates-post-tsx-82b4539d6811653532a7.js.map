{"version":3,"file":"component---src-templates-post-tsx-82b4539d6811653532a7.js","mappings":"yPAwBMA,EAAcC,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,oBAAAC,YAAA,eAAVF,CAAU,sBAW9B,mBAAgBG,GACd,IAAAC,EAAuBD,EAAME,YAArBC,EAAIF,EAAJE,KAAMC,EAAIH,EAAJG,KACRC,EAAOL,EAAMM,KAAKC,eAYxB,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAASC,SAASC,cAAc,UAChCC,EAASF,SAASG,eAAe,sBACrCJ,EAAOK,aAAa,MAAO,iCAC3BL,EAAOK,aAAa,cAAe,aACnCL,EAAOK,aAAa,QAAS,QAC7BL,EAAOK,aAAa,OAAQ,+BAC5BL,EAAOK,aAAa,aAAc,SAClCL,EAAOK,aAAa,QAAS,gBAC7BF,SAAAA,EAAQG,YAAYN,EACtB,IAEEO,EAAAA,cAACC,EAAAA,GAAM,KACJZ,EACCW,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACE,EAAAA,GAAG,CAACC,SAAUd,EAAKe,OAAOC,KAAMC,SAAUjB,EAAMkB,SAAS,IAC1DP,EAAAA,cAACQ,EAAAA,EAAM,CAACC,MAAUpB,EAAKqB,YAAYD,MAAK,MAAME,EAAAA,EAAAA,YAC9CX,EAAAA,cAACY,EAAAA,GAAM,CAACC,OAAQxB,EAAKqB,YAAYG,QAC/Bb,EAAAA,cAACc,EAAAA,KAAI,CAACC,GAAG,KAAIf,EAAAA,cAAA,SAAIW,EAAAA,EAAAA,YACjBX,EAAAA,cAACgB,EAAAA,GAAY,KAAE3B,EAAKqB,YAAYD,OAChCT,EAAAA,cAACiB,EAAAA,GAAO,KACL5B,EAAKqB,YAAYQ,KAAK,MAAU7B,EAAK8B,WAAW,iBAAqB,IACtEnB,EAAAA,cAACc,EAAAA,KAAI,CAACC,GAAE,eAAiBK,IAAU/B,EAAKqB,YAAYW,WACjDhC,EAAKqB,YAAYW,YAIxBrB,EAAAA,cAACsB,EAAAA,GAAO,KACNtB,EAAAA,cAACuB,EAAAA,GAAO,KACNvB,EAAAA,cAACwB,EAAAA,GAAe,MAChBxB,EAAAA,cAACpB,EAAW,CAAC6C,wBAAyB,CAAEC,OAAQrC,EAAKsC,QACpDtC,EAAKqB,YAAYkB,KAChB5B,EAAAA,cAACiB,EAAAA,GAAO,KAAC,UAEN5B,EAAKqB,YAAYkB,KAAKC,KAAI,SAACC,EAAKC,GAAC,OAChC/B,EAAAA,cAACc,EAAAA,KAAI,CAACkB,IAAKD,EAAGhB,GAAE,SAAWK,IAAUU,IACnC9B,EAAAA,cAAA,cAAS8B,GAAa,IAAEzC,EAAKqB,YAAYkB,MAAQG,EAAI1C,EAAKqB,YAAYkB,KAAKK,OAAS,EAAI,KAAH,GAChF,KAGT,KACJjC,EAAAA,cAACkC,EAAAA,GAAe,MAChBlC,EAAAA,cAACmC,EAAAA,GAAQ,CAAChD,KAAMA,EAAMC,KAAMA,IAC5BY,EAAAA,cAAA,OAAKoC,GAAG,0BAIZ,KAGT,C","sources":["webpack://gatsby-starter-typescirpt-power-blog/./src/templates/Post.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { kebabCase } from 'lodash';\nimport {\n  Layout,\n  Wrapper,\n  Header,\n  Subline,\n  SEO,\n  PrevNext,\n  SectionTitle,\n  Content,\n  UpperCommentAds,\n  UpperArticleAds\n} from '../components';\n\n\nimport config from '../../config/SiteConfig';\nimport '../utils/prismjs-theme.css';\nimport PageContext from '../models/PageContext';\nimport Post from '../models/Post';\n\nconst PostContent = styled.div`\n  margin-top: 4rem;\n`;\n\ninterface Props {\n  data: {\n    markdownRemark: Post;\n  };\n  pageContext: PageContext;\n}\n\nexport default (props: Props) => {\n  const { prev, next } = props.pageContext;\n  const post = props.data.markdownRemark;\n  useEffect(() => {\n    let script = document.createElement(\"script\");\n    let anchor = document.getElementById(\"uterances-comments\");\n    script.setAttribute(\"src\", \"https://utteranc.es/client.js\");\n    script.setAttribute(\"crossorigin\", \"anonymous\");\n    script.setAttribute(\"async\", \"true\");\n    script.setAttribute(\"repo\", \"lee95292/lee95292.github.io\");\n    script.setAttribute(\"issue-term\", \"title\");\n    script.setAttribute(\"theme\", \"github-light\");\n    anchor?.appendChild(script);\n  })\n  return (\n    <Layout>\n      {post ? (\n        <>\n          <SEO postPath={post.fields.slug} postNode={post} postSEO={true} />\n          <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`} />\n          <Header banner={post.frontmatter.banner}>\n            <Link to=\"/\"><b>{config.siteTitle}</b></Link>\n            <SectionTitle>{post.frontmatter.title}</SectionTitle>\n            <Subline>\n              {post.frontmatter.date} &mdash; {post.timeToRead} Min Read &mdash; In{' '}\n              <Link to={`/categories/${kebabCase(post.frontmatter.category)}`}>\n                {post.frontmatter.category}\n              </Link>\n            </Subline>\n          </Header>\n          <Wrapper>\n            <Content>\n              <UpperArticleAds />\n              <PostContent dangerouslySetInnerHTML={{ __html: post.html }} />\n              {post.frontmatter.tags ? (\n                <Subline>\n                  Tags: &#160;\n                  {post.frontmatter.tags.map((tag, i) => (\n                    <Link key={i} to={`/tags/${kebabCase(tag)}`}>\n                      <strong>{tag}</strong> {post.frontmatter.tags && i < post.frontmatter.tags.length - 1 ? `, ` : ``}\n                    </Link>\n                  ))}\n                </Subline>\n              ) : null}\n              <UpperCommentAds />\n              <PrevNext prev={prev} next={next} />\n              <div id=\"uterances-comments\"></div>\n            </Content>\n          </Wrapper>\n        </>\n      ) : null}\n    </Layout>\n  );\n};\n\nexport const postQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MM.DD.YYYY\")\n        category\n        tags\n        banner\n      }\n      timeToRead\n    }\n  }\n`;\n"],"names":["PostContent","styled","displayName","componentId","props","_props$pageContext","pageContext","prev","next","post","data","markdownRemark","useEffect","script","document","createElement","anchor","getElementById","setAttribute","appendChild","React","Layout","SEO","postPath","fields","slug","postNode","postSEO","Helmet","title","frontmatter","config","Header","banner","Link","to","SectionTitle","Subline","date","timeToRead","_kebabCase","category","Wrapper","Content","UpperArticleAds","dangerouslySetInnerHTML","__html","html","tags","map","tag","i","key","length","UpperCommentAds","PrevNext","id"],"sourceRoot":""}