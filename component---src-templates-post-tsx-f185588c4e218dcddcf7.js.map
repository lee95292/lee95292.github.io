{"version":3,"sources":["webpack:///./src/templates/Post.tsx"],"names":["PostContent","styled","div","props","pathContext","prev","next","post","data","markdownRemark","useEffect","script","document","createElement","anchor","getElementById","setAttribute","appendChild","console","log","postPath","fields","slug","postNode","postSEO","title","frontmatter","config","siteTitle","banner","to","date","timeToRead","category","dangerouslySetInnerHTML","__html","html","tags","map","tag","i","key","length","id","postQuery"],"mappings":"8QAoBMA,G,UAAcC,IAAOC,IAAV,oEAAGD,CAAH,uBAYF,mBAACE,GAAiB,MACRA,EAAMC,YAArBC,EADuB,EACvBA,KAAMC,EADiB,EACjBA,KACRC,EAAOJ,EAAMK,KAAKC,eAaxB,OAZAC,qBAAU,WACN,IAAIC,EAASC,SAASC,cAAc,UAChCC,EAASF,SAASG,eAAe,sBACrCJ,EAAOK,aAAa,MAAO,iCAC3BL,EAAOK,aAAa,cAAc,aAClCL,EAAOK,aAAa,QAAS,QAC7BL,EAAOK,aAAa,OAAQ,+BAC5BL,EAAOK,aAAa,aAAc,SAClCL,EAAOK,aAAc,QAAS,gBAC9BF,WAAQG,YAAYN,GACpBO,QAAQC,IAAIL,MAGd,kBAAC,IAAD,KACGP,EACC,oCACE,kBAAC,IAAD,CAAKa,SAAUb,EAAKc,OAAOC,KAAMC,SAAUhB,EAAMiB,SAAS,IAC1D,kBAAC,IAAD,CAAQC,MAAUlB,EAAKmB,YAAYD,MAAtB,MAAiCE,IAAOC,YACrD,kBAAC,IAAD,CAAQC,OAAQtB,EAAKmB,YAAYG,QAC/B,kBAAC,OAAD,CAAMC,GAAG,KAAI,2BAAIH,IAAOC,YACxB,kBAAC,IAAD,KAAerB,EAAKmB,YAAYD,OAChC,kBAAC,IAAD,KACGlB,EAAKmB,YAAYK,KADpB,MACmCxB,EAAKyB,WADxC,iBACwE,IACtE,kBAAC,OAAD,CAAMF,GAAE,eAAiB,IAAUvB,EAAKmB,YAAYO,WACjD1B,EAAKmB,YAAYO,YAIxB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAACjC,EAAD,CAAakC,wBAAyB,CAAEC,OAAQ5B,EAAK6B,QACpD7B,EAAKmB,YAAYW,KAChB,kBAAC,IAAD,eAEG9B,EAAKmB,YAAYW,KAAKC,KAAI,SAACC,EAAKC,GAAN,OACzB,kBAAC,OAAD,CAAMC,IAAKD,EAAGV,GAAE,SAAW,IAAUS,IACnC,gCAASA,GADX,IAC0BC,EAAIjC,EAAKmB,YAAYW,KAAKK,OAAS,EAAnC,aAI5B,KACJ,kBAAC,IAAD,CAAUrC,KAAMA,EAAMC,KAAMA,IAC5B,yBAAKqC,GAAG,0BAIZ,OAKH,IAAMC,EAAY","file":"component---src-templates-post-tsx-f185588c4e218dcddcf7.js","sourcesContent":["import React, {useEffect} from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { kebabCase } from 'lodash';\nimport {\n  Layout,\n  Wrapper,\n  Header,\n  Subline,\n  SEO,\n  PrevNext,\n  SectionTitle,\n  Content,\n} from '../components';\nimport config from '../../config/SiteConfig';\nimport '../utils/prismjs-theme.css';\nimport PathContext from '../models/PathContext';\nimport Post from '../models/Post';\n\nconst PostContent = styled.div`\n  margin-top: 4rem;\n`;\n\n\ninterface Props {\n  data: {\n    markdownRemark: Post;\n  };\n  pathContext: PathContext;\n}\n\nexport default (props: Props) => {\n  const { prev, next } = props.pathContext;\n  const post = props.data.markdownRemark;\n  useEffect(() => {\n      let script = document.createElement(\"script\");\n      let anchor = document.getElementById(\"uterances-comments\");\n      script.setAttribute(\"src\", \"https://utteranc.es/client.js\");\n      script.setAttribute(\"crossorigin\",\"anonymous\");\n      script.setAttribute(\"async\", \"true\");\n      script.setAttribute(\"repo\", \"lee95292/lee95292.github.io\");\n      script.setAttribute(\"issue-term\", \"title\");\n      script.setAttribute( \"theme\", \"github-light\");\n      anchor?.appendChild(script);\n      console.log(anchor)\n  })\n  return (\n    <Layout>\n      {post ? (\n        <>\n          <SEO postPath={post.fields.slug} postNode={post} postSEO={true} />\n          <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`} />\n          <Header banner={post.frontmatter.banner}>\n            <Link to=\"/\"><b>{config.siteTitle}</b></Link>\n            <SectionTitle>{post.frontmatter.title}</SectionTitle>\n            <Subline>\n              {post.frontmatter.date} &mdash; {post.timeToRead} Min Read &mdash; In{' '}\n              <Link to={`/categories/${kebabCase(post.frontmatter.category)}`}>\n                {post.frontmatter.category}\n              </Link>\n            </Subline>\n          </Header>\n          <Wrapper>\n            <Content>\n              <PostContent dangerouslySetInnerHTML={{ __html: post.html }} />\n              {post.frontmatter.tags ? (\n                <Subline>\n                  Tags: &#160;\n                  {post.frontmatter.tags.map((tag, i) => (\n                    <Link key={i} to={`/tags/${kebabCase(tag)}`}>\n                      <strong>{tag}</strong> {i < post.frontmatter.tags.length - 1 ? `, ` : ``}\n                    </Link>\n                  ))}\n                </Subline>\n              ) : null}\n              <PrevNext prev={prev} next={next} />\n              <div id=\"uterances-comments\"></div>\n            </Content>\n          </Wrapper>\n        </>\n      ) : null}\n    </Layout>\n  );\n};\n\nexport const postQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"DD.MM.YYYY\")\n        category\n        tags\n        banner\n      }\n      timeToRead\n    }\n  }\n`;\n"],"sourceRoot":""}