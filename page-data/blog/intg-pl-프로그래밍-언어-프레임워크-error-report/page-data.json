{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/intg-pl-프로그래밍-언어-프레임워크-error-report/","result":{"data":{"markdownRemark":{"html":"<p>에러 리포트 하나로 정리하기 : INTG 프로젝트</p>\n<h3 id=\"목차\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EC%B0%A8\" aria-label=\"목차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목차</h3>\n<hr>\n<ul>\n<li><a href=\"#js\">Javascript</a></li>\n<li><a href=\"#eclipse\">Eclipse_Setting</a></li>\n<li><a href=\"#spring\">Spring</a></li>\n<li><a href=\"#maven\">Maven</a></li>\n<li><a href=\"#java\">Java</a></li>\n<li><a href=\"#git\">Git</a></li>\n<li><a href=\"#python\">python</a></li>\n<li><a href=\"#blog\">Jekyll/Blog</a></li>\n</ul>\n<p><br><br><br></p>\n<h1><a name=\"js\">Javascript</a></h1>\r\n---\r\n<br>\n<p><strong>E001</strong></p>\n<hr>\n<p>에러 내용 - js파일이 html파일에 extern 형식으로 들어가 있을때,  getElementsBy... 에서는 작동하지만, querySelectorAll는 작동하지 않는다.</p>\n<p>즉, 특정한 자바스크립트 코드가 작동하지 않는다.</p>\n<p>해결 방법 : script의 로딩하는 태그를 html문서의 맨 뒤로 넣어보자!</p>\n<br>\n<ul>\n<li>추측) Dom tree가 만들어지기 전에 쿼리셀렉터를 작동시키면 동작하지 않는다. <del>괜히 쿼리셀렉터가 반환하는 Node에 문제가 있는줄 알았다.</del></li>\n</ul>\n <h1><a name=\"eclipse\">Eclipse_Setting</a></h1>\r\n ---\r\n <br>\n<p>이클립스의 경우 수정사항이 제대로 바뀌지 않았을 때가 있다. 이럴 땐,</p>\n<p>project > clean을 수행해주자.  잘못된, 꼬인 설정들을 정리해준다. <a href=\"https://huelet.tistory.com/entry/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4-%ED%81%B4%EB%A6%B0clean%EA%B8%B0%EB%8A%A5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Eclipse_clean기능</a></p>\n<p>이클립스에서 톰캣을 사용하는 경우에도 분명 실행되어야 하는 코드가 에러를 발생시킬 때,</p>\n<p>구동 서버에서 프로젝트를 삭제하고 다시 실행시키자. (servers > project 우클릭, remove)</p>\n<table>\n<thead>\n<tr>\n<th><strong>E001</strong> ,Dynamic Web project</th>\n</tr>\n</thead>\n</table>\n<p>에러내용 - The superclass \"javax.servlet.http.HttpServlet\" was not found on the Java Build Path</p>\n<p>빌드패스에서 서블릿클래스가 없어졌다!</p>\n<p>이럴 땐, Project > properties > Project Facet 에서, Runtime 탭에 들어간다.</p>\n<p>WAS, 서버 Runtime을 잘 설정해준다. (J2EE, Apache 서버에 체크해줌)</p>\n<ul>\n<li>추측) 서블릿관련 클래스들은, 아파치서버에 있거나, J2EE라는 WAS에 존재하는 듯 하다. (너무 당연한 추측이다.)</li>\n</ul>\n<p><br><br></p>\n<p><strong>E002</strong> Eclipse 서버구동 타임아웃 에러</p>\n<hr>\n<p>\"Starting Tomcat v*.0 Server at localhost' has encountered a problem.\r\nServer Tomcat v*.0 Server at localhost was unable to start within 45 seconds. If the server requires more time, try increasing the timeout in the server editor.</p>\n<ul>\n<li>\n<p>아파치-톰캣 서버를 런타임으로 설정하면, 기본 타임아웃 세팅이 45초로 지정되어있음.</p>\n</li>\n<li>\n<p>시작하는데 45초까진 안걸렸는데 오류를 출력하고 서버시작 실패</p>\n</li>\n</ul>\n<p>해결 - 서버탭 의 해당서버 우클릭 > open > 서버 설정창 내에서, timeout 탭 > strat timeout 시간을 늘려준다.</p>\n<p><strong>E003</strong> Server Tomcat vX.X Server at localhost failed to start 에러</p>\n<hr>\n<blockquote>\n<p>Server Tomcat v*.* Server at localhost failed to start</p>\n</blockquote>\n<p>대화상자에는 저렇게만 표시되고 아무런 오류메시지가 없음</p>\n<p>해결방법</p>\n<ol>\n<li>JRE 설정</li>\n<li>유일한 URL Mapping 사용</li>\n<li>tomcat 자체 실행확인</li>\n<li>Project-Java Build Path 의 Server Library[tomcat 버전] 설치</li>\n</ol>\n<h1><a name=\"spring\">Spring</a></h1>\r\n---\r\n<br>\r\n<h1><a name=\"maven\">Maven</a></h1>\r\n---\n<p><strong>E001</strong> java.lang.ClassNotFoundException : org.springframework.web.servlet.DispatcherServlet</p>\n<p>pom.xml에 의존성 추가 후, Maven Library 탭에서도 (org.springframework.web.servlet.DispatcherServlet)의 존재가 확인되지만, 런타임에서 해당 클래스 로딩 오류 발생!</p>\n<p>해결 방법   <a href=\"https://crunchify.com/how-to-fix-java-lang-classnotfoundexception-org-springframework-web-servlet-dispatcherservlet-exception-spring-mvc-tomcat-and-404-error/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크</a></p>\n<ul>\n<li>project 우클릭 > properties</li>\n<li>Deployment Assembly 탭</li>\n<li>add.. 버튼</li>\n<li>Java BuildPath Entries 선택</li>\n<li>maven dependency 추가 후 적용</li>\n</ul>\n<br>\n<p><strong>E002</strong> Maven Unknown</p>\n<p>git에서 spring 프로젝트를 clone했는데 pom.xml에서 에러발생.</p>\n<p>에러로그를 확인 : Unknown..... 구글링 결과</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maven-jar-plugin.version</span><span class=\"token punctuation\">></span></span>3.1.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maven-jar-plugin.version</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>properties context에 위 문구를 추가해주면 에러가 지워진다.</p>\n<h1><a name=\"Java\">Java</a></h1>\r\n---\n<p><strong>E001</strong> Description\tResource\tPath\tLocation\tType\r\nJava compiler level does not match the version of the installed Java project facet.\tMySchool\t\tUnknown\tFaceted Project Problem (Java Version Mismatch)</p>\n<p>해결방법</p>\n<p>project > properties > project facet에서의 자바 버전과,</p>\n<p>project > properties > java compiler 에서의 자바 버전을 동일하게 설정해주자.</p>\n<br>\n<h1><a name=\"git\">Git</a></h1>\r\n---\r\n<br>\n<h1><a name=\"python\">Python</a></h1>\r\n---\r\n<br>\n<h1><a name=\"blog\">Jekyll/Blog</a></h1>\r\n---\r\n<br>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">lib/bundler/runtime.rb:319:in `check_for_activated_spec!': \r\nYou have already activated addressable 2.5.2, \r\nbut your Gemfile requires addressable 2.4.0. Prepending `bundle exec` \r\nto your command may solve this.</code></pre></div>\n<p>테마 변경을 위해, 해당테마에서 jekyll build 수행 시 위와 같은 에러 발생.</p>\n<p>prepending bundle exec, 즉, 수행구문 앞에 bundle exec 붙여주면 해결됨</p>\n<p><strong>해결방법</strong></p>\n<blockquote>\n<p>bundle exec jekyll build</p>\n</blockquote>\n<blockquote>\n<p>bundle exec jekyll serve</p>\n</blockquote>","fields":{"slug":"intg-pl-프로그래밍-언어-프레임워크-error-report"},"frontmatter":{"title":"[INTG, PL] 프로그래밍 언어, 프레임워크 Error Report","date":"03.04.2019","category":"intg","tags":null,"banner":null},"timeToRead":2}},"pageContext":{"slug":"intg-pl-프로그래밍-언어-프레임워크-error-report","prev":{"excerpt":"SQL 하나로 정리하기 : INTG 프로젝트 목차 select create  //(https://sqlzoo.net/wiki/CREATE_and_DROP_Reference)  레퍼런스 SQLzoo :sql 예제 연습사이트 TCPschool : sql을 비롯한 여러가지 프로그래밍 언어 정리된 사이트  001 SELECT basics 1번 : 독일의 인구 찾기  2번 IN 사용 :(스웨덴 ,노르웨이, 덴마크)의  이름, 인구 출력…","html":"<p>SQL 하나로 정리하기 : INTG 프로젝트</p>\n<h3 id=\"목차\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EC%B0%A8\" aria-label=\"목차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목차</h3>\n<hr>\n<ul>\n<li><a href=\"#select\">select</a></li>\n<li><a href=\"#create\">create</a>  //(<a href=\"https://sqlzoo.net/wiki/CREATE_and_DROP_Reference\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://sqlzoo.net/wiki/CREATE_and_DROP_Reference</a>)</li>\n</ul>\n<p><br><br></p>\n<h3 id=\"레퍼런스\" style=\"position:relative;\"><a href=\"#%EB%A0%88%ED%8D%BC%EB%9F%B0%EC%8A%A4\" aria-label=\"레퍼런스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레퍼런스</h3>\n<hr>\n<ul>\n<li><a href=\"https://sqlzoo.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SQLzoo</a> :sql 예제 연습사이트</li>\n<li><a href=\"http://tcpschool.com/mysql/intro\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TCPschool</a> : sql을 비롯한 여러가지 프로그래밍 언어 정리된 사이트</li>\n</ul>\n<p><br><br><br></p>\n<h1><a name=\"select\">select문</a></h1>\r\n---\n<h1 id=\"001-select-basics\" style=\"position:relative;\"><a href=\"#001-select-basics\" aria-label=\"001 select basics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>001 SELECT basics</h1>\n<hr>\n<p>1번 : 독일의 인구 찾기</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> population <span class=\"token keyword\">FROM</span> world\r\n  <span class=\"token keyword\">WHERE</span> name<span class=\"token operator\">=</span><span class=\"token string\">'Germany'</span></code></pre></div>\n<p><br><br></p>\n<p>2번 IN 사용 :(스웨덴 ,노르웨이, 덴마크)의  이름, 인구 출력</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name<span class=\"token punctuation\">,</span>population <span class=\"token keyword\">FROM</span> world \r\n  <span class=\"token keyword\">WHERE</span> name <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Sweden'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Norway'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Denmark'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><br><br></p>\n<p>3번 BETWEEN ~ AND 사용 - 인구가 20만~25만 사이 국가 이름,영토 출력</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name<span class=\"token punctuation\">,</span>area <span class=\"token keyword\">FROM</span> world \r\n  <span class=\"token keyword\">WHERE</span> area <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">200000</span> <span class=\"token operator\">AND</span> <span class=\"token number\">250000</span></code></pre></div>\n<p><br><br></p>\n<h1 id=\"002-select-name\" style=\"position:relative;\"><a href=\"#002-select-name\" aria-label=\"002 select name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>002 SELECT name</h1>\n<hr>\n<p><br><br></p>\n<blockquote>\n<p>pattern matching strings</p>\n</blockquote>\n<p>1번  LIKE, multicharacter wildcard(%)사용</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name <span class=\"token keyword\">FROM</span> world\r\n  <span class=\"token keyword\">WHERE</span> name <span class=\"token operator\">LIKE</span> <span class=\"token string\">'Y%'</span> <span class=\"token comment\">-- Y로 시작하는 이름</span></code></pre></div>\n<p><br><br></p>\n<p>7번 LIKE,wildcard(%) 응용</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name <span class=\"token keyword\">FROM</span> world \r\n  <span class=\"token keyword\">where</span> name <span class=\"token operator\">LIKE</span> <span class=\"token string\">'%a%a%a%'</span>  <span class=\"token comment\">-- a가 세번이상 들어가는 국가</span></code></pre></div>\n<p><br><br></p>\n<p>8번 LIKE,single character wildcard(%) 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name <span class=\"token keyword\">FROM</span> world \r\n  <span class=\"token keyword\">where</span> name <span class=\"token operator\">LIKE</span> <span class=\"token string\">'_t'</span> <span class=\"token comment\">-- 두 번째 글자가 t</span></code></pre></div>\n<p><br><br></p>\n<p>12번 LIKE, CONCAT 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name <span class=\"token keyword\">FROM</span> world \r\n  <span class=\"token keyword\">WHERE</span> capital <span class=\"token operator\">LIKE</span> concat<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span><span class=\"token string\">' City'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">-- Mexico - Mexico City 같은 관계를 가진 수도 출력</span></code></pre></div>\n<p><br><br></p>\n<p>15번 꽤 어려운 문제 - 수도가 국가이름의 확정인 경우, 국가이름과 확장된부분 출력</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name<span class=\"token punctuation\">,</span><span class=\"token keyword\">REPLACE</span><span class=\"token punctuation\">(</span>capital<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> extension <span class=\"token keyword\">FROM</span> world\r\n <span class=\"token keyword\">WHERE</span> capital <span class=\"token operator\">LIKE</span> concat<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span><span class=\"token string\">' %'</span><span class=\"token punctuation\">)</span> \r\n   <span class=\"token operator\">OR</span> capital <span class=\"token operator\">LIKE</span> concat<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span><span class=\"token string\">'-%'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h1><a name=\"create\">create문</a></h1>\n<hr>\n<p><br><br></p>\n<h3 id=\"테이블-생성-제약조건\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%83%9D%EC%84%B1-%EC%A0%9C%EC%95%BD%EC%A1%B0%EA%B1%B4\" aria-label=\"테이블 생성 제약조건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테이블 생성 제약조건</h3>\n<hr>\n<ol>\n<li>\n<p>NOT NULL : 해당 필드는 NULL 값을 저장할 수 없게 됩니다. INSERT 구문에서 해당 영역을 생략할 시, 기본값이 삽입됩니다.</p>\n</li>\n<li>\n<p>UNIQUE : 해당 필드는 서로 다른 값을 가져야만 합니다.</p>\n</li>\n<li>\n<p>PRIMARY KEY : 해당 필드가 NOT NULL과 UNIQUE 제약 조건의 특징을 모두 가지게 됩니다.</p>\n</li>\n<li>\n<p>FOREIGN KEY : 하나의 테이블을 다른 테이블에 의존하게 만듭니다.</p>\n</li>\n<li>\n<p>DEFAULT : 해당 필드의 기본값을 설정합니다.</p>\n</li>\n</ol>","id":"0c982466-4314-5c01-b79d-b9fd1a7252fa","fields":{"slug":"intg-sql-sql-cheet-sheet-구문-예제-및-문법-정리"},"frontmatter":{"date":"2019-03-04","title":"[INTG, SQL] SQL Cheet Sheet 구문 예제 및 문법 정리","category":"intg","tags":null,"banner":null},"timeToRead":1},"next":{"excerpt":"javascript 배열 선언 : new Array()를 통해서 가능하지만, 보통 a = [] 처럼 간단히 선언 모든 데이터타입이 들어갈 수 있다. (객체, 함수, null 등등 ) javascript 배열의 유용한 메서드들 push - a.push(10); //a=[10], 배열에 순차적으로 원소 삽입,pop도 있음 indexof - a.indexof(10);  // =0, 특정원소가 존재하는 인덱스 반환. concat - a=a.concat…","html":"<h3 id=\"javascript-배열\" style=\"position:relative;\"><a href=\"#javascript-%EB%B0%B0%EC%97%B4\" aria-label=\"javascript 배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>javascript 배열</h3>\n<hr>\n<ul>\n<li>\n<p>선언 : new Array()를 통해서 가능하지만, 보통 a = [] 처럼 간단히 선언</p>\n</li>\n<li>\n<p>모든 데이터타입이 들어갈 수 있다. (객체, 함수, null 등등 )</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">sa<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\na<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 101 출력</span></code></pre></div>\n<h3 id=\"javascript-배열의-유용한-메서드들\" style=\"position:relative;\"><a href=\"#javascript-%EB%B0%B0%EC%97%B4%EC%9D%98-%EC%9C%A0%EC%9A%A9%ED%95%9C-%EB%A9%94%EC%84%9C%EB%93%9C%EB%93%A4\" aria-label=\"javascript 배열의 유용한 메서드들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>javascript 배열의 유용한 메서드들</h3>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>push - a.push(10); //a=[10], 배열에 순차적으로 원소 삽입,pop도 있음</p>\n</li>\n<li>\n<p>indexof - a.indexof(10);  // =0, 특정원소가 존재하는 인덱스 반환.</p>\n</li>\n<li>\n<p>concat - a=a.concat(1,2,3) //a=[1,2,3,10] 배열에 원소 이어붙임, (이어붙인 배열을 반환).</p>\n</li>\n<li>\n<p>join - a=a.join() // =\"1,2,3,10\" 배열을 문자열로 합친 후 반환.</p>\n</li>\n</ul>\n<blockquote>\n<p>join,concat같은 경우, 실행시 배열의 내용이 직접 바뀌지 않고, 수행된 값을 반환하는 작업만을 함에 유의하자.</p>\n</blockquote>\n<p><strong>배열탐색</strong></p>\n<ul>\n<li>\n<p>foreach(function(v,i)) : v,i를 각각 value, index에 파싱하여 function에 해당하는 내용 루프돌며 실행한다.</p>\n</li>\n<li>\n<p>map(function(v,i)) :  function의 리턴값들의 배열을 리턴합니다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascirpt\"><pre class=\"language-javascirpt\"><code class=\"language-javascirpt\">var newArr = [&quot;apple&quot;,&quot;tomato&quot;].map(function(value, index) {\r\n   return index + &quot;번째 과일은 &quot; + value + &quot;입니다&quot;;\r\n});\r\nconsole.log(newArr)     //문자열 배열로 리턴</code></pre></div>\n<h3 id=\"javascript-객체\" style=\"position:relative;\"><a href=\"#javascript-%EA%B0%9D%EC%B2%B4\" aria-label=\"javascript 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>javascript 객체</h3>\n<hr>\n<ul>\n<li>\n<p>key, value로 이루어진 js의 대표적인  자료구조 .(온점)을 통해 접근.</p>\n</li>\n<li>\n<p>,(콤마)를 통해 속성을 구분, :(콜론) 을 통해 키/벨류를 바인딩.</p>\n</li>\n<li>\n<p>for-in 문을 사용하여 순회.</p>\n</li>\n<li>\n<p>Object.keys() - 오브젝트의 키로 이루어진 배열 반환</p>\n</li>\n</ul>\n<blockquote>\n<p>Object.keys()로도 객체 순회 가능</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string-property property\">'a'</span><span class=\"token operator\">:</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'b'</span><span class=\"token operator\">:</span><span class=\"token string\">\"myName\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>객체의 속성 추가는 접근방법과 같다.</p>\n</li>\n<li>\n<p>속성 제거에는 delete 키워드를 통해 가능하다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">obj<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"mleek\"</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//name 속성 생성</span>\r\n\r\n<span class=\"token keyword\">delete</span> obj<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>        <span class=\"token comment\">//name속성 제거</span></code></pre></div>\n<br>\n<p><strong>실습 1.</strong></p>\n<hr>\n<p><a href=\"https://gist.github.com/nigayo/ade2c3f74417fc202c8097214c965f27\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크</a> 에서, 숫자타입의 키값들만 출력하기.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">findTypeKeys</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token punctuation\">,</span>type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>key <span class=\"token keyword\">in</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token string\">\"object\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token function\">findTypeKeys</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token function\">findTypeKeys</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span><span class=\"token string\">\"number\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre></div>\n<br>\n<p><strong>실습 2.</strong></p>\n<hr>\n<p><a href=\"https://gist.github.com/nigayo/a9a118977f82780441db664d6785efe3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크</a> 에서, \"type\"키 값이 \"sk\"인것의 name 출력하기</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">findPropAttr</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>key <span class=\"token keyword\">in</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token string\">\"object\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token function\">findPropAttr</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">==</span><span class=\"token string\">\"type\"</span><span class=\"token operator\">&amp;&amp;</span>v<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">\"sk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"dom-node-조작하기-dom-api\" style=\"position:relative;\"><a href=\"#dom-node-%EC%A1%B0%EC%9E%91%ED%95%98%EA%B8%B0-dom-api\" aria-label=\"dom node 조작하기 dom api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM Node 조작하기 (DOM API)</h3>\n<hr>\n<p><a href=\"https://www.w3schools.com/jsref/dom_obj_document.asp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Document노드_API</a></p>\n<p><a href=\"https://www.w3schools.com/jsref/dom_obj_all.asp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Elements노드_API</a></p>\n<p>DOM 엘리먼트 속성</p>\n<ul>\n<li>tagName : 엘리먼트 태그명 변환</li>\n<li>textContent</li>\n</ul>\n<h3 id=\"dom-api로-node-조작-실습\" style=\"position:relative;\"><a href=\"#dom-api%EB%A1%9C-node-%EC%A1%B0%EC%9E%91-%EC%8B%A4%EC%8A%B5\" aria-label=\"dom api로 node 조작 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM API로 Node 조작 실습</h3>\n<hr>\n<p>실습 1.\r\n지금 나온 DOM API를 사용해서, strawberry 아래에 새로운 과일을 하나 더 추가하시오.</p>\n<p>추가 된 이후에는 다시 삭제하시오.</p>\n<img src=\"/assets/img/boostcourse/pr01.JPG\">\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> list  <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">var</span> addNode<span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> textNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pineapple'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\naddNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>textNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>addNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  list<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>addNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre></div>\n<p>노드 생성 후, setTimeout 메서드를 통해 1초 후 지우는 동작 수행</p>\n<hr>\n<p>실습2 &#x26; 실습 3</p>\n<p>insertBefore메서드를 사용해서, orange와  banana 사이에 새로운 과일을 추가하시오.</p>\n<p>실습2를 insertAdjacentHTML메서드를 사용해서, orange와 banana 사이에 새로운 과일을 추가하시오.</p>\n<img src=\"/assets/img/boostcourse/pr023.JPG\">\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> fruitNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> fruitText <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">'water mellon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nfruitNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>fruitText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>fruitNode<span class=\"token punctuation\">,</span>list<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nfruitNode<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">'afterend'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'orange'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>참고링크\r\n<a href=\"https://developer.mozilla.org/ko/docs/Web/API/Node/insertBefore\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">insertBefore_Docuemnt</a></p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Element/insertAdjacentHTML\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">insertAdjacentHTML_Document</a></p>\n<hr>\n<p>실습4</p>\n<p>apple을 grape 와 strawberry 사이로 옮기시오.</p>\n<img src=\"/assets/img/boostcourse/pr04.JPG\">\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> grp <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span>grp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<p>실습5</p>\n<p>class 가 'red'인 노드만 삭제하시오.</p>\n<img src=\"/assets/img/boostcourse/pr05.JPG\">\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> list<span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">var</span> rm <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul>li.red'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nrm<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  list<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<p>실습6</p>\n<p>section 태그의 자손 중에 blue라는 클래스를 가지고 있는 노드가 있다면, 그 하위에 있는 h2 노드를 삭제하시오.</p>\n<img src=\"/assets/img/boostcourse/pr06.JPG\">\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> sec <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'section'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nsec<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">var</span> blueNode <span class=\"token operator\">=</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.blue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>blueNode<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>blueNode<span class=\"token punctuation\">.</span>length<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n    v<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      v<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","id":"d4b0e3db-0a99-5e3e-89c0-22a70e199cfc","fields":{"slug":"boost-course-pj-3-front-end-강의-정리-1"},"frontmatter":{"date":"2019-03-26","title":"[BoostCourse] PJ3 FrontEnd 강의 정리 -1","category":"boostcourse","tags":null,"banner":null},"timeToRead":2}}},"staticQueryHashes":[],"slicesMap":{}}