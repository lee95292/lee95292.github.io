{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/boost-course-pj-1-백엔드-강의-정리/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"dynamic-web-project-프로젝트-hello-world-작성하기\" style=\"position:relative;\"><a href=\"#dynamic-web-project-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-hello-world-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"dynamic web project 프로젝트 hello world 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dynamic Web Project 프로젝트 Hello world 작성하기</h1>\n<hr>\n<br>\r\n(프로젝트 생성)\r\n> File > new > Other  > Dynamic WebProject 선택\n<blockquote>\n<p>프로젝트 이름 지정 및 Target Runtime 지정 (WAS:톰캣 설치디렉터리 지정)</p>\n</blockquote>\n<br>\n<h3 id=\"hellow-servlet-작성\" style=\"position:relative;\"><a href=\"#hellow-servlet-%EC%9E%91%EC%84%B1\" aria-label=\"hellow servlet 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hellow Servlet 작성</h3>\n<hr>\n<p>1.project에서 new > servlet 으로 서블릿 생성.</p>\n<p>doGet메서드에 다음과 같이 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> \r\n<span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token comment\">// TODO Auto-generated method stub</span>\r\n\t\tresponse<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/html;charset=UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                 <span class=\"token comment\">//response 데이터의 meta정보 지정</span>\r\n\r\n\t\t<span class=\"token class-name\">PrintWriter</span> out <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\r\n\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;h1>한글 테스트, hello! servlet&lt;/h1>&lt;br>\"</span>\r\n\t\t\t<span class=\"token operator\">+</span><span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&lt;br>\"</span><span class=\"token operator\">+</span><span class=\"token class-name\">LocalTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\r\n\t<span class=\"token punctuation\">}</span></code></pre></div>\n<p>//관련이미지 추가\r\n<br><br></p>\n<h1 id=\"자바-웹-어플리케이션과-서블릿에-관해서\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94-%EC%9B%B9-%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EA%B3%BC-%EC%84%9C%EB%B8%94%EB%A6%BF%EC%97%90-%EA%B4%80%ED%95%B4%EC%84%9C\" aria-label=\"자바 웹 어플리케이션과 서블릿에 관해서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바 웹 어플리케이션과 서블릿에 관해서..</h1>\n<hr>\n<p><br><br></p>\n<h3 id=\"--자바-웹-어플리케이션\" style=\"position:relative;\"><a href=\"#--%EC%9E%90%EB%B0%94-%EC%9B%B9-%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98\" aria-label=\"  자바 웹 어플리케이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 자바 웹 어플리케이션</h3>\n<hr>\n<br>\r\n* 자바 웹 어플리케이션이란, WAS에 배치(desploy)되어 동작하는 애플리케이션이다.\n<ul>\n<li>\n<p>자바 웹 어플리케이션에는 HTML, CSS, Image, Java Class, Setting 등등을 저장한 파이들이 포함된다.</p>\n</li>\n<li>\n<p>특히, 톰캣에서는 <span class=\"bBorder\"><strong>web.xml</strong></span> 파일이 <span class=\"bBorder\"><strong>배치 기술자</strong></span> 라고 불리며, 중요한 설정들이 저장된다.</p>\n</li>\n<li>\n<p>Servlet3.0 미만에서는 필수적으로 존재해야 하지만, 3.0 이후 버전에서는 <strong>어노테이션</strong>을 사용한다.</p>\n</li>\n</ul>\n<p>(but Spring에서는 다른 설정들을 저장하기 위해 사용한다.)</p>\n<br>\r\n#### - 서블릿\r\n---\r\n<br>\r\n* 자바 웹 어플리케이션 내에서, 동적인 처리를하는 프로그램의 역할.\n<ul>\n<li>\n<p>WAS 내에서 동작하며, HttpServlet클래스를 상속받는 JAVA 클래스.</p>\n</li>\n<li>\n<p>JSP가 <span class=\"bBorder\">View</span> 역할을 맡는다면, 서블릿은 <span class=\"bBorder\">Controller</span> 역할</p>\n</li>\n</ul>\n<br>\r\n#### - 서블릿의 라이프사이클\r\n---\r\n* 클라이언트가 서버에게 요청.\n<ul>\n<li>URL을 받아, URL Mapping에 해당하는 서블릿 존재여부 검증.</li>\n</ul>\n<h5 id=\"여기서의-검증이란-서블릿이-메모리에-올라가있는지-판단하는-것-서블릿은-하나의-객체만이-메모리에-올라가기-때문에-서버-구동-이후-init-과정이-한-번만-실행됨\" style=\"position:relative;\"><a href=\"#%EC%97%AC%EA%B8%B0%EC%84%9C%EC%9D%98-%EA%B2%80%EC%A6%9D%EC%9D%B4%EB%9E%80-%EC%84%9C%EB%B8%94%EB%A6%BF%EC%9D%B4-%EB%A9%94%EB%AA%A8%EB%A6%AC%EC%97%90-%EC%98%AC%EB%9D%BC%EA%B0%80%EC%9E%88%EB%8A%94%EC%A7%80-%ED%8C%90%EB%8B%A8%ED%95%98%EB%8A%94-%EA%B2%83-%EC%84%9C%EB%B8%94%EB%A6%BF%EC%9D%80-%ED%95%98%EB%82%98%EC%9D%98-%EA%B0%9D%EC%B2%B4%EB%A7%8C%EC%9D%B4-%EB%A9%94%EB%AA%A8%EB%A6%AC%EC%97%90-%EC%98%AC%EB%9D%BC%EA%B0%80%EA%B8%B0-%EB%95%8C%EB%AC%B8%EC%97%90-%EC%84%9C%EB%B2%84-%EA%B5%AC%EB%8F%99-%EC%9D%B4%ED%9B%84-init-%EA%B3%BC%EC%A0%95%EC%9D%B4-%ED%95%9C-%EB%B2%88%EB%A7%8C-%EC%8B%A4%ED%96%89%EB%90%A8\" aria-label=\"여기서의 검증이란 서블릿이 메모리에 올라가있는지 판단하는 것 서블릿은 하나의 객체만이 메모리에 올라가기 때문에 서버 구동 이후 init 과정이 한 번만 실행됨 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(여기서의 검증이란, 서블릿이 메모리에 올라가있는지 판단하는 것. 서블릿은 하나의 객체만이 메모리에 올라가기 때문에, 서버 구동 이후 Init 과정이 한 번만 실행됨)</h5>\n<ul>\n<li>\n<p>검증 후, 서블릿이 생성되지 않았다면, init 과정을 수행하고, service 과정 수행</p>\n</li>\n<li>\n<p>생성되어있는 경우, 바로 service 과정 수행.</p>\n</li>\n<li>\n<p><strong>서버를 종료</strong>시키는 경우 destroy 과정 수행.</p>\n</li>\n<li>\n<p>또는, 서블릿이 <strong>수정된</strong> 경우, 메모리에서 servlet을 제거해야 하므로, destroy 과정 수행.</p>\n</li>\n</ul>\n<p><br><br></p>\n<h4 id=\"--서블릿의-구현\" style=\"position:relative;\"><a href=\"#--%EC%84%9C%EB%B8%94%EB%A6%BF%EC%9D%98-%EA%B5%AC%ED%98%84\" aria-label=\"  서블릿의 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 서블릿의 구현</h4>\n<hr>\n<br>\n<p>서블릿은 HttpServlet클래스를 상속받는다.</p>\n<p>이후 필요에 따라 메서드를 오버라이딩을 통해 구현한다.</p>\n<p>이와 같은 디자인패턴을 <a href=\"https://terms.naver.com/entry.nhn?docId=3532974&#x26;cid=58528&#x26;categoryId=58528\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">템플릿 메서드 패턴</a> 이라고 한다.</p>\n<p><br><br></p>\n<h4 id=\"request-response-객체-이해하기\" style=\"position:relative;\"><a href=\"#request-response-%EA%B0%9D%EC%B2%B4-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" aria-label=\"request response 객체 이해하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Request, Response 객체 이해하기</h4>\n<hr>\n<p><em>서블릿의 동작..</em></p>\n<p>WAS는 브라우저로부터 요청을 받으면, HttpServletRequest객체를 생성합니다. 이후 이 객체에게 요청에 관한 정보들을 전부 저장해줍니다.</p>\n<p><em>HttpServletRequest</em></p>\n<ul>\n<li>http프로토콜의 요청정보를 서블릿에게 전달하기 위한 목적</li>\n<li>헤더정보 / 파라미터 / 쿠키 / URI / URL 등의 정보를 읽어들이는 메서드를 가지고 있다.</li>\n<li>Body의 Stream을 읽어들이는 메서드를 가지고 있다. (이해가 잘 안돼서, 질문글 남김)</li>\n</ul>\n<p><em>HttpServletResponse</em></p>\n<ul>\n<li>응답을 보내기 위해 해당 객체를 생성합니다.</li>\n<li>서블릿은 해당 객체를 사용해, content type 이나, 응답코드, 응답 메시지들을 전송해줍니다.</li>\n</ul>\n<p><br><br><br></p>\n<h4 id=\"--요청-정보의-종류들-알아내기\" style=\"position:relative;\"><a href=\"#--%EC%9A%94%EC%B2%AD-%EC%A0%95%EB%B3%B4%EC%9D%98-%EC%A2%85%EB%A5%98%EB%93%A4-%EC%95%8C%EC%95%84%EB%82%B4%EA%B8%B0\" aria-label=\"  요청 정보의 종류들 알아내기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 요청 정보의 종류들 알아내기</h4>\n<hr>\n<br>\r\n```java\r\nprotected void doGet(HttpServletRequest request, HttpServletResponse response) \r\n\t\tthrows ServletException, IOException {\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\tresponse.setContentType(\"text/html;charset=UTF-8\");\r\n\tPrintWriter out = response.getWriter();\r\n\t\t\t\r\n\tEnumeration&lt;String> headers =  request.getHeaderNames();\r\n\t\r\n\twhile(headers.hasMoreElements())\r\n\t{\r\n\t\tString headerName =headers.nextElement();\r\n\t\tString headerValue = request.getHeader(headerName);\r\n\t\tout.print(headerName+\" : \"+headerValue+\"&lt;br>\");\r\n\t}\r\n\tout.close();\r\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\r\nHttpServletRequest 객체에 있는 헤더정보를 모두 출력해주는 코드입니다.\r\n\r\n헤더란, HTTP 프로토콜 메시지의 맨 앞에서, 클라이언트의 정보 또는 메시지의 형태를 알려주는 역할을 하는 HTTP 메시지의 구성요소.\r\n&lt;br>&lt;br>&lt;br>\r\n\r\n#### - 요청 정보의 파라미터들을 알아내기\r\n---\r\n&lt;br>\r\n\r\n```java\r\nprotected void doGet(HttpServletRequest request, HttpServletResponse response) \r\n\t\tthrows ServletException, IOException {\r\n\r\n\t\tresponse.setContentType(\"text/html;charset=UTF-8\");\r\n\t\tPrintWriter out = response.getWriter();\r\n\r\n\t\tout.print(\"______________Parameter 정보_______________&lt;br>\");\r\n\t\t\r\n\t\tEnumeration&lt;String> paramNames = request.getParameterNames();\r\n\t\t\r\n\t\twhile(paramNames.hasMoreElements())\r\n\t\t{\r\n\t\t\tString paramName = paramNames.nextElement();\r\n\t\t\tString paramValue = request.getParameter(paramName);\r\n\t\t\tout.println(paramName+\" : \"+paramValue+\"&lt;br>\");\r\n\t\t}\r\n\t\t\r\n\r\n\t\tout.close();\r\n\t}</code></pre></div>\n<p>HttpServletRequest 객체에 있는 파라미터정보를 모두 출력해주는 코드입니다.</p>\n<p>이 떄, get을 통해 전달되는 파라미터는, 위 사진처럼 URL을 통해 전달할 수도 있으며, html의 form 태그를 통해서도 전달가능.</p>\n<p><br><br></p>\n<hr>\n<br>\r\n**-끝-**","fields":{"slug":"boost-course-pj-1-백엔드-강의-정리"},"frontmatter":{"title":"[BoostCourse] PJ1. 백엔드 강의 정리","date":"28.12.2018","category":"boostcourse","tags":null,"banner":null},"timeToRead":2}},"pageContext":{"slug":"boost-course-pj-1-백엔드-강의-정리","prev":{"excerpt":"CSS 1227 수강내용  선언방법 선언방법에는, 태그 속성으로 지정해주는 inline방법, style 태그 내에 지정해주는 internal 방법, 외부 파일을 link 태그로 연결해주어 지정하는 external방법이 있습니다. 선언방법 간 , 우선순위 는 다음과 같습니다. inline > (internal = external…","html":"<h1 id=\"css-1227-수강내용\" style=\"position:relative;\"><a href=\"#css-1227-%EC%88%98%EA%B0%95%EB%82%B4%EC%9A%A9\" aria-label=\"css 1227 수강내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS 1227 수강내용</h1>\n<hr>\n<p><br><br></p>\n<h3 id=\"선언방법\" style=\"position:relative;\"><a href=\"#%EC%84%A0%EC%96%B8%EB%B0%A9%EB%B2%95\" aria-label=\"선언방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>선언방법</h3>\n<hr>\n<p>선언방법에는,</p>\n<ul>\n<li>\n<p>태그 속성으로 지정해주는 <strong>inline</strong>방법,</p>\n</li>\n<li>\n<p>style 태그 내에 지정해주는 <strong>internal</strong> 방법,</p>\n</li>\n<li>\n<p>외부 파일을 link 태그로 연결해주어 지정하는 <strong>external</strong>방법이 있습니다.</p>\n</li>\n</ul>\n<p>선언방법 간 , <strong>우선순위</strong> 는 다음과 같습니다.</p>\n<p><strong>inline > (internal = external)</strong></p>\n<p>인라인 코드가 가장 높은 우선순위를 갖고,  그렇지 않은 경우 나중에 선언된 코드가 높은 우선순위를 갖습니다.\r\n<br><br></p>\n<h3 id=\"상속과-우선순위-결정\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D%EA%B3%BC-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84-%EA%B2%B0%EC%A0%95\" aria-label=\"상속과 우선순위 결정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속과 우선순위 결정</h3>\n<hr>\n<ol>\n<li>\n<p>상위 태그에서 적용한 스타일은 하위에서도 반영(상속).</p>\n</li>\n<li>\n<p>but, Box-Model이라 불리는 속성들(width, height, margin, padding, border)은, 배치관련 속성이므로 상속되지 않음.</p>\n</li>\n<li>\n<p>id > class > 엘리먼트(태그) 순서로 우선순위를 가짐.</p>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#a{\r\n color : red;\r\n}\r\n\r\n.b{\r\n color : blue;\r\n}\r\n\r\ndiv{\r\n color : green;\r\n}</code></pre></div>\n<p>위와 같은 경우, **<div class=\"b\" id=\"a\"> color</div>**의 색상은 <strong>red</strong>로 결정됨. 이러한 성질을 Cascading, 캐스캐이이딩 이라 부른다.</p>\n<ol start=\"4\">\n<li>선언 방식에 따라, 표현이 구체적인 선택자가 적용된다. 만약 선택자가 같을 경우, 나중에 선언한 것이 적용된다.</li>\n</ol>\n<p>body>span (0)</p>\n<p>span(x)</p>\n<h3 id=\"color-속성-지정\" style=\"position:relative;\"><a href=\"#color-%EC%86%8D%EC%84%B1-%EC%A7%80%EC%A0%95\" aria-label=\"color 속성 지정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>color 속성 지정</h3>\n<hr>\n<ol>\n<li>색상의 이름으로 지정</li>\n</ol>\n<blockquote>\n<p>color : red</p>\n</blockquote>\n<p>(또는 magenta, green,orange, cyan, black, white 등등,,)</p>\n<ol start=\"2\">\n<li>16진수로 RGB 조정, 가장 많이 사용되는 방법</li>\n</ol>\n<blockquote>\n<p>color : #ffa024</p>\n</blockquote>\n<ol start=\"3\">\n<li>rgba를 소괄호로 지정</li>\n</ol>\n<blockquote>\n<p>color : rgb(255, 0, 0, 0.5)</p>\n</blockquote>\n<p><br><br></p>\n<h3 id=\"폰트\" style=\"position:relative;\"><a href=\"#%ED%8F%B0%ED%8A%B8\" aria-label=\"폰트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>폰트</h3>\n<hr>\n<br>\r\n>font-size : 16px\n<blockquote>\n<p>font-size :2em</p>\n</blockquote>\n<p><strong>em</strong>은 상대적인 값, 상속받은 픽셀의 2배를 뜻함</p>\n<br>\n<blockquote>\n<p>font-family : monospace, sans-serif, Gulim</p>\n</blockquote>\n<p>코마(,)를 기준으로 순서대로 브라우저가 지원하는 폰트를 적용.</p>\n<p><br><br></p>\n<h3 id=\"css의-레이아웃-속성들\" style=\"position:relative;\"><a href=\"#css%EC%9D%98-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%86%8D%EC%84%B1%EB%93%A4\" aria-label=\"css의 레이아웃 속성들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS의 레이아웃 속성들</h3>\n<hr>\n<p>CSS가 엘리먼트의 효과적인 배치를 위해 제공하는 속성들</p>\n<ol>\n<li>display 속성 : block, inline, inline-block</li>\n</ol>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">>block : 벽돌처럼, **세로로 쌓이는** 속성. 대부분의 엘리먼트들이 block으로 설정되어 있다.\r\n\r\n>inlline : 엘리먼트가 **옆으로 흐르도록** 설정하는 속성. a, strong ,u 태그 등등.. 몇가지 안된다.</code></pre></div>\n<ol start=\"2\">\n<li>position 속성 : static, absolute, relative, fixed</li>\n</ol>\n<hr>\n<p>엘리먼트가 기본적인 틀을 벗어난 배치를 제공하기 위해 존재.</p>\n<ul>\n<li>static</li>\n</ul>\n<blockquote>\n<p>기본값</p>\n</blockquote>\n<ul>\n<li>absolute</li>\n</ul>\n<blockquote>\n<p><strong>static이 아닌 기준 엘리먼트로부터 일정한 거리 떨어진 만큼 위치시킴</strong></p>\n</blockquote>\n<ul>\n<li>relative</li>\n</ul>\n<blockquote>\n<p>원래 있어야하는 위치를 기준으로 일정한 거리 떨어진 만큼 위치시킴</p>\n</blockquote>\n<ul>\n<li>fixed</li>\n</ul>\n<blockquote>\n<p>viewport를 기준으로 엘리먼트 위치시킴. 따라다니는 광고같은 것.</p>\n</blockquote>\n<h2 id=\"3float-속성--left-right-속성\" style=\"position:relative;\"><a href=\"#3float-%EC%86%8D%EC%84%B1--left-right-%EC%86%8D%EC%84%B1\" aria-label=\"3float 속성  left right 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.float 속성 : left, right 속성</h2>\n<p><strong>다른 레이어</strong>에 존재하는 느낌. 2단, 3단 컬럼 배치를 할 수 있다.</p>\n<hr>\n<h3 id=\"float\" style=\"position:relative;\"><a href=\"#float\" aria-label=\"float permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>float</h3>\n<p>부모 엘리먼트의 속성에 <span class=\"bBorder\">overflow : auto</span> 를 지정하여 float 설정된 엘리먼트를 자식으로 인식시킨다.</p>","id":"051dba39-ddaf-53b7-bdad-438ff99f04de","fields":{"slug":"boost-course-pj-1-프론트엔드-강의-정리"},"frontmatter":{"date":"2018-12-27","title":"[BoostCourse] PJ1. 프론트엔드 강의 정리","category":"boostcourse","tags":null,"banner":null},"timeToRead":1},"next":{"excerpt":"Git 사용법을 정리하는 시간을 갖겠습니다. 기초적인 내용만을 정리하도록 하겠습니다. 참고 및 연습 링크 지옥에서 온 Git - egoing님 생활코딩Youtube Git 연습용 웹페이지 - git 버전관리 상태를 시각적으로 보여줍니다. Starting a project & configuration git init : 로컬 디렉터리에 깃 저장소를 생성 git clone [git path…","html":"<p>Git 사용법을 정리하는 시간을 갖겠습니다.</p>\n<p>기초적인 내용만을 정리하도록 하겠습니다.</p>\n<h4 id=\"참고-및-연습-링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EB%B0%8F-%EC%97%B0%EC%8A%B5-%EB%A7%81%ED%81%AC\" aria-label=\"참고 및 연습 링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 및 연습 링크</h4>\n<hr>\n<ul>\n<li>\n<p><a href=\"https://www.youtube.com/watch?v=hFJZwOfme6w&#x26;list=PLuHgQVnccGMA8iwZwrGyNXCGy2LAAsTXk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">지옥에서 온 Git</a> - egoing님 생활코딩Youtube</p>\n</li>\n<li>\n<p><a href=\"https://learngitbranching.js.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Git 연습용 웹페이지</a> - git 버전관리 상태를 시각적으로 보여줍니다.</p>\n</li>\n</ul>\n<h1 id=\"starting-a-project--configuration\" style=\"position:relative;\"><a href=\"#starting-a-project--configuration\" aria-label=\"starting a project  configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Starting a project &#x26; configuration</h1>\n<hr>\n<br>\r\n*starting a project*\n<ul>\n<li>\n<p>git init : 로컬 디렉터리에 깃 저장소를 생성</p>\n</li>\n<li>\n<p>git clone [git path]: 원격 저장소에 존재하는 깃허브 프로젝트를 가져옴 (복사)</p>\n</li>\n</ul>\n<p><br><br><br></p>\n<p><em>configuration</em></p>\n<p>유저 이름과 이메일 설정</p>\n<ul>\n<li>\n<p>git config --global user.name [myName]</p>\n</li>\n<li>\n<p>git config --global user.email [myEmail]</p>\n</li>\n</ul>\n<p><br><br><br></p>\n<h1 id=\"git-을-통한-버전관리\" style=\"position:relative;\"><a href=\"#git-%EC%9D%84-%ED%86%B5%ED%95%9C-%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC\" aria-label=\"git 을 통한 버전관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git 을 통한 버전관리</h1>\n<hr>\n<br>\n<ul>\n<li>\n<p>git status : commit 대기 상태의 stage area의 파일들을 출력</p>\n</li>\n<li>\n<p>git add fileName : git stage area에 관리할 파일 또는 디렉토리 등록</p>\n</li>\n<li>\n<p>git commit -m \"commit message\" : 현재 stage area의 파일들(add된 파일들)을 프로젝트 버전으로 적용시킨다.</p>\n</li>\n</ul>\n<h1 id=\"원격-저장소-생성-및-사용하기\" style=\"position:relative;\"><a href=\"#%EC%9B%90%EA%B2%A9-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"원격 저장소 생성 및 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원격 저장소 생성 및 사용하기</h1>\n<hr>\n<blockquote>\n<p>원격 저장소(Remote Repository)란? 로컬 저장소(Local Repository)와 대비되는 개념으로, 협업을 위해 인터넷 상에 위치한 저장소를 의미한다.</p>\n</blockquote>\n<ul>\n<li>git remote add origin [Path] : 해당 경로에 존재하는 원격 저장소를 origin이라는 이름으로 설정.</li>\n</ul>\n<blockquote>\n<p>git remote -v 명령으로, 추가된 저장소 위치 확인 가능</p>\n</blockquote>\n<ul>\n<li>\n<p>git stage에 소스코드를 등록하는 방법은, 로컬 저장소의 방법과 같다.</p>\n</li>\n<li>\n<p>git push origin master : master 브랜치로 git stage에 커밋된 소스코드들을 원격 저장소에 저장한다.</p>\n</li>\n</ul>\n<blockquote>\n<p>master branch의 upstream</p>\n</blockquote>","id":"2f87ac13-c9ae-51e5-8967-9fede02f9aa7","fields":{"slug":"git-명령어-예제-정리"},"frontmatter":{"date":"2018-12-30","title":"Git 명령어 예제 정리","category":"git","tags":null,"banner":null},"timeToRead":1}}},"staticQueryHashes":[],"slicesMap":{}}