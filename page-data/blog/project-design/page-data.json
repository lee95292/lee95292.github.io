{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/project-design/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"project-beta-화면-및-구현설계\" style=\"position:relative;\"><a href=\"#project-beta-%ED%99%94%EB%A9%B4-%EB%B0%8F-%EA%B5%AC%ED%98%84%EC%84%A4%EA%B3%84\" aria-label=\"project beta 화면 및 구현설계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project Beta 화면 및 구현설계</h1>\n<h2 id=\"기능개요\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%8A%A5%EA%B0%9C%EC%9A%94\" aria-label=\"기능개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기능개요</h2>\n<blockquote>\n<p>키워드 등록을 통한 타겟 알림 시스템 (ElasticSearch 활용)</p>\n</blockquote>\n<blockquote>\n<p>등록한 키워드와 관심분야 설정을 통한 문서 추천 시스템 ( <a href=\"https://yeomko.tistory.com/6?category=805638\">Collaborative Filtering</a>활용 )</p>\n</blockquote>\n<hr>\n<h3 id=\"1-키워드-등록을-통한-타겟-알림-시스템\" style=\"position:relative;\"><a href=\"#1-%ED%82%A4%EC%9B%8C%EB%93%9C-%EB%93%B1%EB%A1%9D%EC%9D%84-%ED%86%B5%ED%95%9C-%ED%83%80%EA%B2%9F-%EC%95%8C%EB%A6%BC-%EC%8B%9C%EC%8A%A4%ED%85%9C\" aria-label=\"1 키워드 등록을 통한 타겟 알림 시스템 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 키워드 등록을 통한 타겟 알림 시스템</h3>\n<p>크롤링 시나리오</p>\n<ul>\n<li>크롤링할 호스트에 대한 설정파일 참조</li>\n<li>graph,linked list 형식으로 링크 관계 저장 / 리스트에 존재하는 문서 크롤링\n<ul>\n<li>1 Search Process : 그래프 refresh를 통해 새로운 문서가 있는지 판별</li>\n<li>2-1. 새로운 문서가 있다면 문서의 메타정보를 그래프에 저장</li>\n<li>2-2. 문서의 Topic판별, 단어 추출 등, Elastic에 저장하기 위한 구성 설정</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Elastic 쿼리 전송</li>\n</ul>\n<p>키워드 등록 시나리오</p>\n<ul>\n<li>여러개의 호스트에 여러개의 키워드 등록 가능하도록 설정\n<ul>\n<li>Create: 여러개의 키워드를 한번에 요청한경우 어근 추출을 통해 압축 (만들기,만들어 ->만들다)</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"project-design"},"frontmatter":{"title":"ProjectDesign","date":"01.15.2020","category":null,"tags":null,"banner":null},"timeToRead":1}},"pageContext":{"slug":"project-design","prev":{"excerpt":"본 포스팅은, VSCode extension development docs를 학습하며 작성했습니다. git과 Node.js를 사전 설치 후에 진행해주시기 바랍니다. 1. 프로젝트 생성 npm을 통해 위 두 개 모듈을 설치합니다. yo (yoman) -코드 스캐폴딩 도구 : 프로젝트 뼈대를 생성해주는 도구 generator-code - vsocde ext…","html":"<p>본 포스팅은, <a href=\"https://code.visualstudio.com/api\">VSCode extension development docs</a>를 학습하며 작성했습니다.</p>\n<ul>\n<li>git과 Node.js를 사전 설치 후에 진행해주시기 바랍니다.</li>\n</ul>\n<h2 id=\"1-프로젝트-생성\" style=\"position:relative;\"><a href=\"#1-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"1 프로젝트 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 프로젝트 생성</h2>\n<div class=\"gatsby-highlight\" data-language=\"cmd\"><pre class=\"language-cmd\"><code class=\"language-cmd\">npm install -g yo generator-code</code></pre></div>\n<p>npm을 통해 위 두 개 모듈을 설치합니다.</p>\n<ul>\n<li>yo (yoman) -코드 스캐폴딩 도구 : 프로젝트 뼈대를 생성해주는 도구</li>\n<li>generator-code - vsocde ext 뼈대 코드</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yo code</code></pre></div>\n<p>설치한 모듈을 통해 프로젝트 뼈대를 생성하고 커멘드라인에 정보를 알맞게 제공합니다 ( 프로젝트 이름 등등,,)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">code ./[project_name]</code></pre></div>\n<p>F5버튼을 눌러 빌드하면, <strong>Extension Development Host</strong>가 동작합니다.</p>\n<p>확장도구 테스팅 환경이라 보시면 될 듯 합니다.</p>\n<ul>\n<li>개발환경에서 소스코드 저장 후, <strong>Extension Development Host</strong>에서 리로드(Ctrl + R)하면 변경사항이 저장됩니다.</li>\n</ul>\n<h2 id=\"2-extension-세부정보\" style=\"position:relative;\"><a href=\"#2-extension-%EC%84%B8%EB%B6%80%EC%A0%95%EB%B3%B4\" aria-label=\"2 extension 세부정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Extension 세부정보</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.\n├── .vscode\n│   ├── launch.json     // Config for launching and debugging the extension\n│   └── tasks.json      // Config for build task that compiles TypeScript\n├── .gitignore          // Ignore build output and node_modules\n├── README.md           // Readable description of your extension's functionality\n├── src\n│   └── extension.ts    // Extension source code\n├── package.json        // Extension manifest\n├── tsconfig.json</code></pre></div>\n<p>yoman으로 뼈대를 생성하면 코드 구조는 위와 유사합니다.</p>\n<p>이 때 ,확장 프로그램의 세부정보(Manifest)는 package.json에 위치합니다.</p>\n<ul>\n<li><strong>name,publisher</strong> 는 프로젝트의 유니크한 아이디를 구성하는데 사용합니다.</li>\n<li>main은 extension 실행의 entry point를 가르킵니다. (프로젝트의 시작점)</li>\n</ul>","id":"58fa9ff1-3982-5123-b75d-d50805128eca","fields":{"slug":"vscode-vscode-확장-프로그램-환경-구성"},"frontmatter":{"date":"2019-12-25","title":"[vscode] vscode 확장 프로그램 환경 구성","category":"howto","tags":null,"banner":null},"timeToRead":1},"next":{"excerpt":"Heritrix 오픈소스 웹 크롤러를 사용해보고 방법을 정리하려합니다. 자세한 사용법은 github 위키에 잘 나와있지만, 기본적인 부분,헷갈릴만한 부분이나 자주 사용할만한 옵션들을 소개해보도록 하겠습니다. 설치 -설치 끝 설치는 매우 간단하지만, 설정이 꽤 귀찮고 모호한 부분이 있습니다. spring xml properties를 사용해서 직접 설정합니다. 일단 기본 설정으로 크롤링 진행 -a 옵션으로 계정을 설정하고, -b…","html":"<blockquote>\n<p>Heritrix 오픈소스 웹 크롤러를 사용해보고 방법을 정리하려합니다.</p>\n</blockquote>\n<blockquote>\n<p>자세한 사용법은 <a href=\"https://github.com/internetarchive/heritrix3/wiki/\">github 위키</a>에 잘 나와있지만, 기본적인 부분,헷갈릴만한 부분이나 자주 사용할만한 옵션들을 소개해보도록 하겠습니다.</p>\n</blockquote>\n<h3 id=\"설치\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-label=\"설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> http://builds.archive.org/maven2/org/archive/heritrix/heritrix/3.4.0-SNAPSHOT/heritrix-3.4.0-20190828.200101-25-dist.tar.gz\n\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xzf</span> heritrix-3.4.0-20190828.200101-25-dist.tar.gz</code></pre></div>\n<p>-설치 끝</p>\n<p>설치는 매우 간단하지만,</p>\n<p>설정이 꽤 귀찮고 모호한 부분이 있습니다. spring xml properties를 사용해서 직접 설정합니다.</p>\n<h3 id=\"일단-기본-설정으로-크롤링-진행\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%8B%A8-%EA%B8%B0%EB%B3%B8-%EC%84%A4%EC%A0%95%EC%9C%BC%EB%A1%9C-%ED%81%AC%EB%A1%A4%EB%A7%81-%EC%A7%84%ED%96%89\" aria-label=\"일단 기본 설정으로 크롤링 진행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일단 기본 설정으로 크롤링 진행</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> Heritrix/bin\n\n./heritrix <span class=\"token parameter variable\">-a</span> admin:amdin <span class=\"token parameter variable\">-b</span> /\n</code></pre></div>\n<ul>\n<li>-a 옵션으로 계정을 설정하고, -b옵션을 통해 접근권한을 설정합니다.</li>\n<li>-b옵션 없이 실행하는 경우, localhost에서만 사용 가능하고,</li>\n<li>-b / 로 옵션을 주는경우, 어디서든 계정으로 엑세스할수 있습니다.</li>\n<li>-p 옵션으로 포트를 지정할 수 있습니다.(기본 : 8443)</li>\n</ul>\n<p>(b옵션을 못찾고 포트포워딩하느라 시간을 많이 썼습니다...)</p>\n<h3 id=\"크롤링-수행\" style=\"position:relative;\"><a href=\"#%ED%81%AC%EB%A1%A4%EB%A7%81-%EC%88%98%ED%96%89\" aria-label=\"크롤링 수행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>크롤링 수행</h3>\n<p>Create job으로 job(크롤링 작업 단위) 생성합니다.</p>\n<p>생성하면 Hritrix_home/jobs/[job_name]/crawler-beans.cxml 파일 생깁니다.</p>\n<p>웹페이지에서 해당 파일을 수정할 수도 있지만, 저같은경우 에러가 떠서 직접 수정했습니다.</p>\n<p>기본설정</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">#1\nmetadata.operatorContactUrl=http://lee95292.github.io\n\n...\n\n#2\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>longerOverrides<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.springframework.beans.factory.config.PropertyOverrideConfigurer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>properties<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>props</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prop</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>seeds.textSource.value<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n# URLS HERE\nhttp://lee95292.github.io\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prop</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>props</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>즉, metadata.operatorContactUrl을 지정하고 #URLs Here 표시된 곳 밑에 URL을 추가해주면 됩니다.</p>\n<p>operatorContactUrl에 대해서는 자세한 설명이 나와있지는 않네요..</p>\n<p>저장 한 후, jobs 페이지에서 크롤링을 수행합니다.</p>\n<p>build > launch 후 기다리시면 크롤링 작업이 완료됩니다.</p>\n<p>pause를 통해 중지<br>\nterminate를 통해 중단<br>\nteardown을 통해 종료할 수 있습니다.</p>\n<h3 id=\"옵션\" style=\"position:relative;\"><a href=\"#%EC%98%B5%EC%85%98\" aria-label=\"옵션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>옵션</h3>\n<p>crawler-beans.cxml에서 설정가능한 옵션들입니다.</p>\n<p><strong>TransclusionDecideRule을</strong> 삭제하시면 narrow crawling을 수행합니다.</p>\n<blockquote>\n<blockquote>\n<p>seed host로 등록한 이외의 호스트를 크롤링하지 않습니다.</p>\n</blockquote>\n</blockquote>\n<h3 id=\"postprocess\" style=\"position:relative;\"><a href=\"#postprocess\" aria-label=\"postprocess permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PostProcess</h3>\n<p>크롤링 결과물을 처리하는 방법입니다.. 유튜브에서 <a href=\"https://www.youtube.com/watch?v=MAHWPeBVNpI&#x26;t=447s\">참고</a>했습니다.</p>\n<p>pip install warctools<br>\n(pip3)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> hanzo <span class=\"token keyword\">import</span> warctools\n\nwarcStream<span class=\"token operator\">=</span>warctools<span class=\"token punctuation\">.</span>WarcRecored<span class=\"token punctuation\">.</span>open_archive<span class=\"token punctuation\">(</span><span class=\"token string\">\"WEB-20200121115637651-00000-20607~ip-172-31-35-42.ap-northeast-2.compute.internal~8443.warc.gz\"</span><span class=\"token punctuation\">)</span>\n\ni<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> record <span class=\"token keyword\">in</span> warcStream<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"********\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"warc record #\"</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">1000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    i<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">></span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span></code></pre></div>","id":"27997629-5655-59cb-a29e-8c89eb356ca3","fields":{"slug":"heritrix-오픈소스-웹-크롤러-사용하기"},"frontmatter":{"date":"2020-01-21","title":"heritrix 오픈소스 웹 크롤러 사용하기","category":"opensource","tags":null,"banner":null},"timeToRead":1}}},"staticQueryHashes":[],"slicesMap":{}}