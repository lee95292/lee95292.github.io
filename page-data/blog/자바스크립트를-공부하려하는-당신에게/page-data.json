{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/자바스크립트를-공부하려하는-당신에게","result":{"data":{"markdownRemark":{"html":"<p>저는 학교에서 Python, C/C++, Java를 다루는 수업을 수강하고, 문법을 익혔고,<br>\nJava와 C로는 여러 토이프로젝트를 해보면서 나름 프로그래밍 언어를 배우고 사용하는데 익숙해져 있어서 내심 프로그래밍 언어는 거기서 거기지~ 라는 생각을 해왔습니다.</p>\n<p>자바스크립트를 배우면서 그 오만한 생각은 와장창 깨져버렸습니다...</p>\n<p>이 글에서는 제가 자바스크립트를 공부하며, 사용하며 어떤게 어려웠는지,<br>\n그럼에도 계속 자바스크립트를 공부하는 이유, 제가 생각하는 자바스크립트의 매력을 소개해보려 합니다!</p>\n<hr>\n<h2 id=\"사용한-라이브러리-reactjs\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-reactjs\" aria-label=\"사용한 라이브러리 reactjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용한 라이브러리 :React.js</h2>\n<p>제일 처음으로 저는 웹 프론트 페이지를 만들기 위해 Reactjs 라이브러리를 공부했습니다.<br>\n이전까지 HTML/CSS/JQuery로 페이지를 구성했는데, 이때는 HTML문서에 Javascript를 끼워넣는 느낌이어서 코딩을 한다는 느낌이 들지는 않았고, 제대로된 페이지를 만들어 본 경험은 없었습니다.</p>\n<p>조금 더 제대로된 다이나믹한 웹 페이지를 만들기 위해 Jquery를 더 공부할까 고민했습니다.<br>\n그러던 도중 주변에서 React가 정말 쉽고 간편하다는 이야기를 듣고 React를 시작하게 되었습니다.</p>\n<p>결론부터 말씀드리자면,<strong>React는 간편하지만 절대 쉽지는 않습니다</strong>.<br>\n위에서 말씀드렸듯, 저는 프로그래밍 언어 학습을 몇차례 학습하고, 각 언어들이 가지는 공통점과 차이점을 비교하면서 학습하는 것에 익숙해져 있었는데요, React에서 다루는 중점적인 개념은 여타 프로그래밍 언어와 상당히 차이가 있었습니다!</p>\n<img src=\"/assets/img/jslib-intro/react-lifecycle.png\">\n<span style=\"text-align:center\">그림: React 컴포넌트의 생명주기</span>\n<p>대표적인 예시로,<strong>state와 property를 다루는 일, 컴포넌트의 생명주기, 모듈화, 컴포넌트, 훅</strong> 등이 그것입니다.</p>\n<p>React에서는 컴포넌트의 렌더링이 Property와 State라고 불리는 리액트 컴포넌트의 특수 변수의 변경에 따라 일어나는데,<br>\n이런 개념을 멀리서 보면 객체지향의 상속과 비슷하다 생각할 수도 있지만 전혀 다른 개념이며, 이와 비슷하게 리액트가 사용하는 생소한 개념에 익숙해지는 것에 생각보다 시간이 많이 걸렸습니다...</p>\n<p>이렇듯, \"쉽다\"는것이 (최소한 저에게) 리액트의 장점이 아닙니다.<br>\n그럼에도 불구하고, 저는 이제 페이지를 구현할 때 React만을 사용합니다.<br>\n리액트는 컴포넌트를 재사용하기에 정말 편리합니다.<br>\n물론 HTML/CSS코드도 하면 재활용할 수 있지만 이는 말그대로 재활용이고, 상황에 맞게 코드를 수정해주어야 합니다.</p>\n<p>컴포넌트를 재사용한다는 것은, 기존 HTML/CSS/JS로 작성된 소스코드를 마치 <strong>함수 호출하듯 편리하게 사용</strong>하는것을 의미합니다.<br>\n저에게는 이것이 React를 배우는 데 걸리는 어떤 어려움도 커버할 수 있을만한 큰 장점이라고 생각합니다.</p>\n<p>프론트엔드 코드를 객체지향적으로 다루는 것 또한 저에게 장점으로 다가왔습니다.</p>\n<h2 id=\"사용한-라이브러리-nodejs\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-nodejs\" aria-label=\"사용한 라이브러리 nodejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용한 라이브러리 :Node.js</h2>\n<hr>\n<p>저는 여태 서버 프로그램을 작성하기 위해 Spring framework의 Spring boot를 사용했습니다.<br>\n스프링 부트를 사용하면서 딱히 불만이나 단점에 대해 생각해본 적이 없고, 오히려 SpringFramework는 국내에서 주도적으로 사용되는 만큼 문서가 풍부하고 한국 내 커뮤니티도 활발해 버그를 해결하는 것이 어렵지 않았습니다.</p>\n<p>그러던 어느날 저는 어떤 계기로 Nodejs의 express 라이브러리를 이용해 서버 프로그램을 작성해보았고, 스프링을 사용할때와 상당히 다른 느낌을 받았습니다.<br>\n짧은 기간 사용했지만, 그 느낌을 공유해볼까 합니다.</p>\n<p>스프링같은 경우, 엔터프라이즈급 서버 프로그램을 위한 **\"프레임워크\"**이기 때문에,<br>\n시작부터 어떤 틀 위에서 시작하고, 여러가지 설정을 거쳐 프로젝트를 시작합니다. 누군가는 이 과정이 너무 복잡하고 쓸데없다고 말하지만, 저는 절대 그렇게 생각하지 않습니다.<br>\n프로젝트를 시작함과 동시에 많은 부분을 프레임워크로부터 보장받는 것이기에, 프레임워크를 사용하는것과 Node같은 라이브러리 패키지를 사용하는 것과의 장단점을 비교하는 것은 의미가 없다고 생각합니다.</p>\n<blockquote>\n<p>Springboot: 46.1k stars, 662contributers<br>\nnodejs : 68.3k stars, 2657contributers</p>\n</blockquote>\n<p>다만 Node.js 런타임 뿐만 아니라 Javascript 라이브러리 전반적으로 커뮤니티 활성화 정도가 매우 높다고 느꼈습니다.<br>\n위는 Nodejs와 Spring project의 컨트리뷰터 수입니다. 물론 Node는 Spring과 비교될 격이 아니고, OpenJRE나 OpenJDK와 비교해야 옳지만, jre,jdk는 상용 버전인 oracle의 비중이 더 높기에 최대한 커뮤니티 활정정도를 비교할만한 지표로 생각했습니다.</p>\n<p>커뮤니티 활성 정도를 보며 한편으론 다른 재단이나 커뮤니티에 비해 유저들이 참여해 생성해낸 프로젝트가 큰 영향력을 갖는 것이 신기했습니다.</p>\n<p>Spring같은 경우 pivotal이라는 회사에서 spring 관련 프로젝트를 시작하고 키워나가는 방식입니다. 어찌보면 pivotal이 시작한 프로젝트가 무조건 메인 프로젝트이므로 유저에게 선택권이 줄어들 수 있다고 생각할 수 있습니다.<br>\n(스프링은 스프링 자체의 설계 방식이 있기에 어쩔 수 없습니다. 저는 잘 모르지만 이 방식이 갖는 장점 또한 있을 것입니다.)</p>\n<p>반면 Nodejs의 경우 인증이라는 커다란 부분을 담당하는 패키지 Passport.js는 개인이 설립한 프로젝트임에도 유저들에게 그 편리성과 효용성을 입증받아 가장 많이 사용되는 패키지로 선택되었습니다. 이런 적자생존 방식으로 생태계가 유지되는 것이 매우 어렵지만, 그만큼 유저에게 많은 편리함을 주고있다고 생각했습니다.</p>\n<h3 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h3>\n<p>나름 장단점을 설명한다고 글을 썼지만, 너무 장점 위주로 설명한 것 같습니다...<br>\n생태계가 활발하고 자주 변화한다고 좋은 것만은 아니라고 생각합니다. 유저는 변화한 내용을 계속 학습하는 것에 비용이 많이 발생할 수도 있고, 새로운 보안 취약점이 발생하거나 기반 패키지가 업데이트 된 경우 상위 패키지와 호환성이 떨어질 수도 있습니다.</p>\n<p>마지막 부분, nodejs의 특징을 조금 더 잘 설명하기 위해 제가 경험한 Spring framework와 비교하며 작성했지만, 위에 말씀드렸 듯 모든것에는 장단점이 있으니, 프로젝트에 사용할 기술스택을 잘 선택하셨으면 합니다!</p>","fields":{"slug":"자바스크립트를-공부하려하는-당신에게"},"frontmatter":{"title":"자바스크립트를 공부하려하는 당신에게","date":"15.03.2020","category":"web","tags":null,"banner":null},"timeToRead":3}},"pageContext":{"slug":"자바스크립트를-공부하려하는-당신에게","prev":{"excerpt":"글또 4기 다짐글 : 근거있는 변화와 계획! 글또를 하게 된 계기 나는 아래의 목적을 가지고 글을 썼지만, 글을 쓰는것에 대한 동기부여가 희미해졌다. 버그리포트를 열심히 써서 나중에 똑같은 에러가 터졌을때 참고하자 >> 검색해서 보는게 빠르고 정확했다. 자기PR…","html":"<p>글또 4기 다짐글 : 근거있는 변화와 계획!</p>\n<h1 id=\"글또를-하게-된-계기\" style=\"position:relative;\"><a href=\"#%EA%B8%80%EB%98%90%EB%A5%BC-%ED%95%98%EA%B2%8C-%EB%90%9C-%EA%B3%84%EA%B8%B0\" aria-label=\"글또를 하게 된 계기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>글또를 하게 된 계기</h1>\n<p>나는 아래의 목적을 가지고 글을 썼지만, 글을 쓰는것에 대한 동기부여가 희미해졌다.</p>\n<ul>\n<li>\n<p>버그리포트를 열심히 써서 나중에 똑같은 에러가 터졌을때 참고하자 >> 검색해서 보는게 빠르고 정확했다.</p>\n</li>\n<li>\n<p>자기PR: 나의 꾸준함을 글쓰기로 보여주자 >> 나는 별로 꾸준하지도 성실하지도 않았다.</p>\n</li>\n<li>\n<p>공부하자: 글을 쓰면서 지식을 내면화하고 정리하자. >> 이게 그나마 글을 쓸만한 동기였다.</p>\n<p>(글을 쓰는 과정에서 내가 알고있다고 생각한 지식에 의문을 품었고, 질문에 대한 답을 찾아나가면서 많이 배웠다.)</p>\n<p>하지만 공부하려고 글을 쓰는것은 초중고 12년 공부습관에 반하는 행동이었고, 내 생각을 읽기 쉽게 정리하는것도 생각보다 너무 힘들었다.</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"여전히-글쓰는것은-힘들고-귀찮지만-생각과-상황이-조금-바뀌었다\" style=\"position:relative;\"><a href=\"#%EC%97%AC%EC%A0%84%ED%9E%88-%EA%B8%80%EC%93%B0%EB%8A%94%EA%B2%83%EC%9D%80-%ED%9E%98%EB%93%A4%EA%B3%A0-%EA%B7%80%EC%B0%AE%EC%A7%80%EB%A7%8C-%EC%83%9D%EA%B0%81%EA%B3%BC-%EC%83%81%ED%99%A9%EC%9D%B4-%EC%A1%B0%EA%B8%88-%EB%B0%94%EB%80%8C%EC%97%88%EB%8B%A4\" aria-label=\"여전히 글쓰는것은 힘들고 귀찮지만 생각과 상황이 조금 바뀌었다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>여전히 글쓰는것은 힘들고 귀찮지만, 생각과 상황이 조금 바뀌었다.</h2>\n<ul>\n<li>\n<p>우선 개발자 글쓰기모임 글또라는 활동을 알게되었다.</p>\n<p>글쓰는 또라이가 세상을 바꾼다. 이름이 멋있기도 했고, 개발자분들이 <strong>글쓰고 피드백, 커뮤니케이션</strong>하는 모습이 너무 부럽고 빛났다.<br>\n(예치금을 두고 글을 쓴다는 약간의 강제성을 얻기 위해 지원하기도 했다.)</p>\n</li>\n<li>\n<p>글을 쓰는것이 힘든것이 아니라는것을 깨달았다.</p>\n<p>글을 쓰는 것 자체로도 어렵지만, 글을 쓰기 위해 지식을 정리하고,확장하고, 내가 가진 질문에 대한 답을 채우는 것을 힘들어했고, 그것이 글쓰기를 멀리하게 된 이유였다.</p>\n<p>필요한 지식만 검색해서 얻고 땡. 이게 왜 이렇게 되는지는 시간있을때만 찾아보고 아니면 애써 무시했었다.\n얻은 지식을 정리하고 확장하는 일을 게을리 하면 그것은 지식의 파편으로 남아서 곧 죽은 지식이 된다.</p>\n<p>이제는 내가 글쓰기에서 어떤 과정을 힘들어했는지 알게됐고, 극복해보려고 한다.</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"그래서-이제-어떤-글을-쓸까\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%9D%B4%EC%A0%9C-%EC%96%B4%EB%96%A4-%EA%B8%80%EC%9D%84-%EC%93%B8%EA%B9%8C\" aria-label=\"그래서 이제 어떤 글을 쓸까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그래서 이제 어떤 글을 쓸까?</h2>\n<p>나는 개발/인프라 분야에서 흥미 분야가 광범위한 편이다.<br>\n(지식영역이 넓은건 아닌데, 뭔가를 알게되면 다 재미있어보이고 한번쯤 해보고싶다.)</p>\n<p>그래서 지금 쓰고싶은 글을 나열하고, 나중에 골라서 쓰면 어떨까 싶다.</p>\n<p>다루고싶은 내용</p>\n<ul>\n<li>\n<p>로버트 C 마틴 - Clean Architecture<br>\nClean code를 너무 인상깊게 봐서 아키텍쳐편도 샀다. 아마 2~4주차 사이에 독후감으로 쓸 것 같다.</p>\n</li>\n<li>\n<p>정보처리기사 - 운영체제파트<br>\n나는 운영체제 연구실에서 운영체제와 많이 무관한 가상화파트를 다룬다.\n하지만 면접만 보면 운영체제에 대한 질문이 빠지지 않고 나오기에 정리해야할 필요성을 느꼈다.</p>\n</li>\n<li>\n<p>관심은 있지만 사용경험이 적은 오픈소스 소프트웨어들<br>\nElasticSearch, openstack, Kafka, Zepplin - 컨트리뷰션을 목표로 공부하고 분석하고 사용해보고싶다.</p>\n</li>\n</ul>\n<p>사실 이전에도 포스팅 스택은 항상 차있었지만, 글을 쓰기 전에 흥미가 다른곳으로 돌아간 경우가 많다.</p>\n<p>하지만! 이번엔 능동적인 글쓰기를 목표로, (다루고싶은 내용)에 적힌 글을 쓸 것이다.</p>","id":"a57a8113-c607-59fd-aaea-6b833028442f","fields":{"slug":"글또-4-기-시작-다짐글"},"frontmatter":{"date":"2020-02-29","title":"글또 4기 시작, 다짐글","category":"etc","tags":null,"banner":null},"timeToRead":2},"next":{"excerpt":"이번 포스팅에서는 젠킨스를 사용하며 만난 403에러의 원인과 해결과정을 풀어서 설명하겠습니다. \"No valid crumb was included in the request\" (만약 빠른 해결을 원하신다면, jenkins global security settings > csrf disable을 체크하면 됩니다.) Intro CSRF란? 사이트 간 요청 위조(또는 크로스 사이트 요청 위조, 영어: Cross-site request forgery…","html":"<p>이번 포스팅에서는 젠킨스를 사용하며 만난 403에러의 원인과 해결과정을 풀어서 설명하겠습니다.</p>\n<img src=\"/assets/img/git_jenkins_403/Inkedjenkinserror_LI.jpg\" />\n<p>\"No valid crumb was included in the request\"</p>\n<p>(만약 빠른 해결을 원하신다면, jenkins global security settings > csrf disable을 체크하면 됩니다.)</p>\n<h1 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h1>\n<h3 id=\"csrf란\" style=\"position:relative;\"><a href=\"#csrf%EB%9E%80\" aria-label=\"csrf란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSRF란?</h3>\n<p>사이트 간 요청 위조(또는 크로스 사이트 요청 위조, 영어: Cross-site request forgery, CSRF, XSRF)는 웹사이트 취약점 공격의 하나로, 사용자가 자신의 의지와는 무관하게 공격자가 의도한 행위(수정, 삭제, 등록 등)를 특정 웹사이트에 요청하게 하는 공격을 말합니다.<br>\n<a href=\"https://ko.wikipedia.org/wiki/%EC%82%AC%EC%9D%B4%ED%8A%B8_%EA%B0%84_%EC%9A%94%EC%B2%AD_%EC%9C%84%EC%A1%B0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">출처</a></p>\n<hr>\n<h3 id=\"jenkins란\" style=\"position:relative;\"><a href=\"#jenkins%EB%9E%80\" aria-label=\"jenkins란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins란?</h3>\n<p>개발에 이은 지속적인 통합과 배포를 담당하는 도구입니다.<br>\n젠킨스는 Java언어 베이스로 만들어진 CI/CD 도구로, 1400개가 넘는 다양한 플러그인을 지원하기때문에 배포 시 테스트 자동화, 취약점 점검 등 서비스를 배포/운영하는 개발자 및 인프라 관련 업무에서 많은 편리함을 주는 도구입니다.</p>\n<p>비슷하게 지속적 통합을 제공하는 도구로는 travisCI,circleCI등이 있습니다.</p>\n<img src=\"/assets/img/git_jenkins_403/jenkins-workflow.png\" />\n<p>(jenkins-workflow, <a href=\"http://oraclefusiontechnologies.blogspot.com/2014/04/continuous-integration-with-jenkins.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">위키백과</a>)</p>\n<h1 id=\"오류-상황\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%A5%98-%EC%83%81%ED%99%A9\" aria-label=\"오류 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오류 상황</h1>\n<p>소스코드의 업데이트를 확인하기 위해 Github의 Webhook이나 다른 연동 도구를 통해서 젠킨스와 연결해야합니다.<br>\n이 과정에서 아래와 같은 에러문구를 확인했고, 어떤 이유에서 github가 <strong>jenkins의 요청을 거부</strong>했다는 것을 알 수 있었습니다.</p>\n<img src=\"/assets/img/git_jenkins_403/Inkedjenkinserror_LI.jpg\" />\n<p>에러메시지 : No valid crumb was included in the request — 요청에 유효한 Crumb가 존재하지 않는다.</p>\n<p>에러메시지에는 crumb라는 특이한 단어가 등장합니다. 직역하면 빵부스러기, 구글에 검색해도 특별한 내용이 나오진 않습니다만, <strong>Jenkins crumb</strong>라고 검색하니 jenkins의 보안관련 문서들이 보였습니다.</p>\n<p style=\"font-size:1.2rem; font-weight:700;\">crumb란, Jenkins에서 github등 소스코드 리포지토리의 데이터를 가져올 때 요청의 주체가 자신임을 확인하도록 하는 IP+salt로 이루어진 쿠키입니다. </p>\n<p>즉, crumb를 요청헤더에 쿠키로 추가하므로써 CSRF 공격을 방지할 수 있는것이죠!</p>\n<p>반대로 Jenkins의 CSRF 보안 설정을 켜놓으면 <strong>어떤 문제</strong>로 인해 crumb의 유효성이 사라졌을 때 403에러와 함께 일을 진행하지 못하는 사태가 발생합니다. 참고로 젠킨스는 2.0부터 CSRF protection이 기본 보안설정입니다.<br>\n(하지만 위에서도 말씀드렸듯, CSRF 보안 설정을 체크헤제하면 에러는 말끔히 사라집니다.)</p>\n<h1 id=\"문제-분석-및-해결\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EB%B6%84%EC%84%9D-%EB%B0%8F-%ED%95%B4%EA%B2%B0\" aria-label=\"문제 분석 및 해결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 분석 및 해결</h1>\n<p>위에서 이야기한 <strong>어떤 문제</strong>를 찾는건 시간이 꽤 걸렸습니다...<br>\ncrumb에 대해 잘 모를 때 github의 설정문제라고 생각하고 자꾸 삽질을 했는데요,<br>\nhas no valid crumb 에러가 발생하는 이유는 대부분 프록시 설정 문제입니다.</p>\n<p>crumb는 IP+salt의 조합이라고 설명했는데요, \"has no valid crumb\"라는 에러메시지를 통해 제가 Jenkins를 서비스하는 과정에서 요청 IP가 변경되는 과정이 있는지 생각해봐야합니다.<br>\n대부분 젠킨스 서버와 프록시가 있거나 캐싱 서버가 있어 IP주소가 변경되는 경우가 많습니다. 이때문에 Crumb가 유효성을 상실하게 됩니다.</p>\n<p>문제를 찾고 이부분을 어떻게 해결할까 하다가 Jenkins Crumb정책 관련한 소스코드를 보면서 답을 찾았습니다.</p>\n<p>Jenkins의 소스코드입니다.\n<a href=\"https://github.com/jenkinsci/jenkins/blob/master/core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jenkins DefaultCrumbIssuer.java</a></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DefaultCrumbIssuer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CrumbIssuer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token annotation punctuation\">@DataBoundConstructor</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DefaultCrumbIssuer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> excludeClientIPFromCrumb<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>excludeClientIPFromCrumb <span class=\"token operator\">=</span> excludeClientIPFromCrumb<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">initializeMessageDigest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n     <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">synchronized</span> <span class=\"token class-name\">String</span> <span class=\"token function\">issueCrumb</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> salt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isExcludeClientIPFromCrumb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            buffer<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">getClientIP</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getClientIP</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> req<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span> defaultAddress <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getRemoteAddr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> forwarded <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token constant\">X_FORWARDED_FOR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>forwarded <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hopList <span class=\"token operator\">=</span> forwarded<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hopList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> hopList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> defaultAddress<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>XFF란? X-forwarded-for의 약자로, 지금 상황처럼 프록시나 다른 중간 서버로 인해 IP가 변경될 때, Origin IP를 식별하는 표준 헤더입니다.\n<a href=\"https://ko.wikipedia.org/wiki/XFF\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">위키백과</a></p>\n<hr>\n<p>getClientIP메서드에서 XFF헤더가 있는 경우 hopList를 통해 중간에 거쳐갈 IP주소 리스트를 리턴하도록 작성되었습니다.</p>\n<p>즉, 젠킨스 설정을 통해 문제를 해결할 수 있는것이죠!</p>\n<hr>\n<p><strong>excludeClientIPFromCrumb</strong>변수는 위의 issueCrumb메서드에서 <strong>false일 때</strong> getClientIp메서드를 통해 XFF헤더를 적용합니다.</p>\n<p>즉, DefaultCrumbIssuer의 생성자로 false를 지정하게 되면 XFF가 지정되고, 프록시로 인한 IP변조 문제가 해결되는것이죠.</p>\n<p>이제부터는 해결과정입니다.</p>\n<p>젠킨스 그루비 설정파일을 지정하기 위해 젠킨스 홈에서 설정파일 만들어줍니다.<br>\n(default: /var/lib/jenkins/init.goovy.d/myconf.groovy)</p>\n<div class=\"gatsby-highlight\" data-language=\"groovy\"><pre class=\"language-groovy\"><code class=\"language-groovy\"><span class=\"token keyword\">import</span> hudson<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>csrf<span class=\"token punctuation\">.</span>DefaultCrumbIssuer\n<span class=\"token keyword\">import</span> jenkins<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>Jenkins\n\n<span class=\"token comment\">// 중단모드일 경우 시행하면 안됨</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Jenkins<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span><span class=\"token function\">isQuietingDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">//CSRF 설정이 있는 경우</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Jenkins<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span><span class=\"token function\">getCrumbIssuer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">def</span> instance <span class=\"token operator\">=</span> Jenkins<span class=\"token punctuation\">.</span>instance\n\t\t<span class=\"token comment\">// DefaultCrumbIssuer(false) : XFF헤더 정의</span>\n    instance<span class=\"token punctuation\">.</span><span class=\"token function\">setCrumbIssuer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultCrumbIssuer</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    instance<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    println <span class=\"token string\">'excludeClientIPfromCrumb set: false'</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t  println <span class=\"token string\">'Nothing changed'</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이후 젠킨스를 재시작합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">service</span> jenkins restart</code></pre></div>\n<p>CSRF와 프록시 설정으로 인해 발생하는 403에러에 대한 해결과정이었습니다!</p>","id":"0cda66d0-4f9d-5e0a-bb76-b9b5724258f6","fields":{"slug":"jenkins-403-no-valid-crumb-에러-리포트"},"frontmatter":{"date":"2020-04-12","title":"[jenkins 403, no valid crumb] 에러 리포트","category":"jenkins","tags":null,"banner":null},"timeToRead":3}}},"staticQueryHashes":["3824141623"]}