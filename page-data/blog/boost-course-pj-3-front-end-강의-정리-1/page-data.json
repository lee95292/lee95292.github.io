{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/boost-course-pj-3-front-end-강의-정리-1","result":{"data":{"markdownRemark":{"html":"<h3 id=\"javascript-배열\" style=\"position:relative;\"><a href=\"#javascript-%EB%B0%B0%EC%97%B4\" aria-label=\"javascript 배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>javascript 배열</h3>\n<hr>\n<ul>\n<li>선언 : new Array()를 통해서 가능하지만, 보통 a = [] 처럼 간단히 선언</li>\n<li>모든 데이터타입이 들어갈 수 있다. (객체, 함수, null 등등 )</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">sa<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 101 출력</span></code></pre></div>\n<h3 id=\"javascript-배열의-유용한-메서드들\" style=\"position:relative;\"><a href=\"#javascript-%EB%B0%B0%EC%97%B4%EC%9D%98-%EC%9C%A0%EC%9A%A9%ED%95%9C-%EB%A9%94%EC%84%9C%EB%93%9C%EB%93%A4\" aria-label=\"javascript 배열의 유용한 메서드들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>javascript 배열의 유용한 메서드들</h3>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>push - a.push(10); //a=[10], 배열에 순차적으로 원소 삽입,pop도 있음</li>\n<li>indexof - a.indexof(10);  // =0, 특정원소가 존재하는 인덱스 반환. </li>\n<li>concat - a=a.concat(1,2,3) //a=[1,2,3,10] 배열에 원소 이어붙임, (이어붙인 배열을 반환).</li>\n<li>join - a=a.join() // =\"1,2,3,10\" 배열을 문자열로 합친 후 반환.</li>\n</ul>\n<blockquote>\n<p>join,concat같은 경우, 실행시 배열의 내용이 직접 바뀌지 않고, 수행된 값을 반환하는 작업만을 함에 유의하자.</p>\n</blockquote>\n<p><strong>배열탐색</strong></p>\n<ul>\n<li>foreach(function(v,i)) : v,i를 각각 value, index에 파싱하여 function에 해당하는 내용 루프돌며 실행한다.</li>\n<li>map(function(v,i)) :  function의 리턴값들의 배열을 리턴합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascirpt\"><pre class=\"language-javascirpt\"><code class=\"language-javascirpt\">var newArr = [&quot;apple&quot;,&quot;tomato&quot;].map(function(value, index) {\n   return index + &quot;번째 과일은 &quot; + value + &quot;입니다&quot;;\n});\nconsole.log(newArr)     //문자열 배열로 리턴</code></pre></div>\n<h3 id=\"javascript-객체\" style=\"position:relative;\"><a href=\"#javascript-%EA%B0%9D%EC%B2%B4\" aria-label=\"javascript 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>javascript 객체</h3>\n<hr>\n<ul>\n<li>key, value로 이루어진 js의 대표적인  자료구조 .(온점)을 통해 접근.</li>\n<li>,(콤마)를 통해 속성을 구분, :(콜론) 을 통해 키/벨류를 바인딩.</li>\n<li>for-in 문을 사용하여 순회.</li>\n<li>Object.keys() - 오브젝트의 키로 이루어진 배열 반환 </li>\n</ul>\n<blockquote>\n<p>Object.keys()로도 객체 순회 가능</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'a'</span><span class=\"token operator\">:</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token operator\">:</span><span class=\"token string\">\"myName\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>객체의 속성 추가는 접근방법과 같다.</li>\n<li>속성 제거에는 delete 키워드를 통해 가능하다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">obj<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"mleek\"</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//name 속성 생성</span>\n\n<span class=\"token keyword\">delete</span> obj<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>        <span class=\"token comment\">//name속성 제거</span></code></pre></div>\n<br>\n<p><strong>실습 1.</strong></p>\n<hr>\n<p><a href=\"https://gist.github.com/nigayo/ade2c3f74417fc202c8097214c965f27\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크</a> 에서, 숫자타입의 키값들만 출력하기.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">findTypeKeys</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token punctuation\">,</span>type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>key <span class=\"token keyword\">in</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token string\">\"object\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">findTypeKeys</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">findTypeKeys</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span><span class=\"token string\">\"number\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><strong>실습 2.</strong></p>\n<hr>\n<p><a href=\"https://gist.github.com/nigayo/a9a118977f82780441db664d6785efe3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크</a> 에서, \"type\"키 값이 \"sk\"인것의 name 출력하기 </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">findPropAttr</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>key <span class=\"token keyword\">in</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token string\">\"object\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">findPropAttr</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">==</span><span class=\"token string\">\"type\"</span><span class=\"token operator\">&amp;&amp;</span>v<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">\"sk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"dom-node-조작하기-dom-api\" style=\"position:relative;\"><a href=\"#dom-node-%EC%A1%B0%EC%9E%91%ED%95%98%EA%B8%B0-dom-api\" aria-label=\"dom node 조작하기 dom api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM Node 조작하기 (DOM API)</h3>\n<hr>\n<p><a href=\"https://www.w3schools.com/jsref/dom_obj_document.asp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Document노드_API</a></p>\n<p><a href=\"https://www.w3schools.com/jsref/dom_obj_all.asp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Elements노드_API</a></p>\n<p>DOM 엘리먼트 속성</p>\n<ul>\n<li>tagName : 엘리먼트 태그명 변환</li>\n<li>textContent</li>\n</ul>\n<h3 id=\"dom-api로-node-조작-실습\" style=\"position:relative;\"><a href=\"#dom-api%EB%A1%9C-node-%EC%A1%B0%EC%9E%91-%EC%8B%A4%EC%8A%B5\" aria-label=\"dom api로 node 조작 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM API로 Node 조작 실습</h3>\n<hr>\n<p> 실습 1.\n지금 나온 DOM API를 사용해서, strawberry 아래에 새로운 과일을 하나 더 추가하시오.</p>\n<p>추가 된 이후에는 다시 삭제하시오.</p>\n<img src=\"/assets/img/boostcourse/pr01.JPG\">\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> list  <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> addNode<span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> textNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pineapple'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\naddNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>textNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>addNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  list<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>addNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>노드 생성 후, setTimeout 메서드를 통해 1초 후 지우는 동작 수행</p>\n<hr>\n<p>실습2 &#x26; 실습 3</p>\n<p>insertBefore메서드를 사용해서, orange와  banana 사이에 새로운 과일을 추가하시오.</p>\n<p>실습2를 insertAdjacentHTML메서드를 사용해서, orange와 banana 사이에 새로운 과일을 추가하시오.</p>\n<img src=\"/assets/img/boostcourse/pr023.JPG\">\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> fruitNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> fruitText <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">'water mellon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfruitNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>fruitText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>fruitNode<span class=\"token punctuation\">,</span>list<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nfruitNode<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">'afterend'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'orange'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>참고링크\n<a href=\"https://developer.mozilla.org/ko/docs/Web/API/Node/insertBefore\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">insertBefore_Docuemnt</a></p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Element/insertAdjacentHTML\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">insertAdjacentHTML_Document</a></p>\n<hr>\n<p>실습4</p>\n<p>apple을 grape 와 strawberry 사이로 옮기시오.</p>\n<img src=\"/assets/img/boostcourse/pr04.JPG\">\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> grp <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlist<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span>grp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<p>실습5</p>\n<p>class 가 'red'인 노드만 삭제하시오.</p>\n<img src=\"/assets/img/boostcourse/pr05.JPG\">\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> list<span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> rm <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul>li.red'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrm<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  list<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<p>실습6</p>\n<p>section 태그의 자손 중에 blue라는 클래스를 가지고 있는 노드가 있다면, 그 하위에 있는 h2 노드를 삭제하시오.</p>\n<img src=\"/assets/img/boostcourse/pr06.JPG\">\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> sec <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'section'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nsec<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> blueNode <span class=\"token operator\">=</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.blue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>blueNode<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>blueNode<span class=\"token punctuation\">.</span>length<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    v<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      v<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","fields":{"slug":"boost-course-pj-3-front-end-강의-정리-1"},"frontmatter":{"title":"[BoostCourse] PJ3 FrontEnd 강의 정리 -1","date":"26.03.2019","category":"boostcourse","tags":null,"banner":null},"timeToRead":4}},"pageContext":{"slug":"boost-course-pj-3-front-end-강의-정리-1","prev":{"excerpt":"SQL 하나로 정리하기 : INTG 프로젝트 목차 select create  //(https://sqlzoo.net/wiki/CREATEandDROP_Reference)  레퍼런스 SQLzoo :sql 예제 연습사이트 TCPschool : sql을 비롯한 여러가지 프로그래밍 언어 정리된 사이트  select문 001 SELECT basics 1번 : 독일의 인구 찾기  2번 IN 사용 :(스웨덴 ,노르웨이, 덴마크)의  이름, 인구 출력…","html":"<p>SQL 하나로 정리하기 : INTG 프로젝트</p>\n<h3 id=\"목차\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EC%B0%A8\" aria-label=\"목차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목차</h3>\n<hr>\n<ul>\n<li><a href=\"#select\">select</a></li>\n<li><a href=\"#create\">create</a>  //(<a href=\"https://sqlzoo.net/wiki/CREATE_and_DROP_Reference\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://sqlzoo.net/wiki/CREATE<em>and</em>DROP_Reference</a>)</li>\n</ul>\n<p><br><br></p>\n<h3 id=\"레퍼런스\" style=\"position:relative;\"><a href=\"#%EB%A0%88%ED%8D%BC%EB%9F%B0%EC%8A%A4\" aria-label=\"레퍼런스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레퍼런스</h3>\n<hr>\n<ul>\n<li><a href=\"https://sqlzoo.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SQLzoo</a> :sql 예제 연습사이트</li>\n<li><a href=\"http://tcpschool.com/mysql/intro\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TCPschool</a> : sql을 비롯한 여러가지 프로그래밍 언어 정리된 사이트</li>\n</ul>\n<p><br><br><br></p>\n<h2 id=\"h1a-nameselectselect문ah1\" style=\"position:relative;\"><a href=\"#h1a-nameselectselect%EB%AC%B8ah1\" aria-label=\"h1a nameselectselect문ah1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><h1><a name=\"select\">select문</a></h1></h2>\n<h1 id=\"001-select-basics\" style=\"position:relative;\"><a href=\"#001-select-basics\" aria-label=\"001 select basics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>001 SELECT basics</h1>\n<hr>\n<p>1번 : 독일의 인구 찾기</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> population <span class=\"token keyword\">FROM</span> world\n  <span class=\"token keyword\">WHERE</span> name<span class=\"token operator\">=</span><span class=\"token string\">'Germany'</span></code></pre></div>\n<p><br><br></p>\n<p>2번 IN 사용 :(스웨덴 ,노르웨이, 덴마크)의  이름, 인구 출력</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name<span class=\"token punctuation\">,</span>population <span class=\"token keyword\">FROM</span> world \n  <span class=\"token keyword\">WHERE</span> name <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Sweden'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Norway'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Denmark'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><br><br></p>\n<p>3번 BETWEEN ~ AND 사용 - 인구가 20만~25만 사이 국가 이름,영토 출력</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name<span class=\"token punctuation\">,</span>area <span class=\"token keyword\">FROM</span> world \n  <span class=\"token keyword\">WHERE</span> area <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">200000</span> <span class=\"token operator\">AND</span> <span class=\"token number\">250000</span></code></pre></div>\n<p><br><br></p>\n<h1 id=\"002-select-name\" style=\"position:relative;\"><a href=\"#002-select-name\" aria-label=\"002 select name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>002 SELECT name</h1>\n<hr>\n<p><br><br></p>\n<blockquote>\n<p>pattern matching strings</p>\n</blockquote>\n<p>1번  LIKE, multicharacter wildcard(%)사용 </p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name <span class=\"token keyword\">FROM</span> world\n  <span class=\"token keyword\">WHERE</span> name <span class=\"token operator\">LIKE</span> <span class=\"token string\">'Y%'</span> <span class=\"token comment\">-- Y로 시작하는 이름</span></code></pre></div>\n<p><br><br></p>\n<p>7번 LIKE,wildcard(%) 응용</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name <span class=\"token keyword\">FROM</span> world \n  <span class=\"token keyword\">where</span> name <span class=\"token operator\">LIKE</span> <span class=\"token string\">'%a%a%a%'</span>  <span class=\"token comment\">-- a가 세번이상 들어가는 국가</span></code></pre></div>\n<p><br><br></p>\n<p>8번 LIKE,single character wildcard(%) 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name <span class=\"token keyword\">FROM</span> world \n  <span class=\"token keyword\">where</span> name <span class=\"token operator\">LIKE</span> <span class=\"token string\">'_t'</span> <span class=\"token comment\">-- 두 번째 글자가 t</span></code></pre></div>\n<p><br><br></p>\n<p>12번 LIKE, CONCAT 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name <span class=\"token keyword\">FROM</span> world \n  <span class=\"token keyword\">WHERE</span> capital <span class=\"token operator\">LIKE</span> concat<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span><span class=\"token string\">' City'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">-- Mexico - Mexico City 같은 관계를 가진 수도 출력</span></code></pre></div>\n<p><br><br></p>\n<p>15번 꽤 어려운 문제 - 수도가 국가이름의 확정인 경우, 국가이름과 확장된부분 출력</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name<span class=\"token punctuation\">,</span><span class=\"token keyword\">REPLACE</span><span class=\"token punctuation\">(</span>capital<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> extension <span class=\"token keyword\">FROM</span> world\n <span class=\"token keyword\">WHERE</span> capital <span class=\"token operator\">LIKE</span> concat<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span><span class=\"token string\">' %'</span><span class=\"token punctuation\">)</span> \n   <span class=\"token operator\">OR</span> capital <span class=\"token operator\">LIKE</span> concat<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span><span class=\"token string\">'-%'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h1><a name=\"create\">create문</a></h1>\n<hr>\n<p><br><br></p>\n<h3 id=\"테이블-생성-제약조건\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%83%9D%EC%84%B1-%EC%A0%9C%EC%95%BD%EC%A1%B0%EA%B1%B4\" aria-label=\"테이블 생성 제약조건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테이블 생성 제약조건</h3>\n<hr>\n<ol>\n<li>NOT NULL : 해당 필드는 NULL 값을 저장할 수 없게 됩니다. INSERT 구문에서 해당 영역을 생략할 시, 기본값이 삽입됩니다.</li>\n<li>UNIQUE : 해당 필드는 서로 다른 값을 가져야만 합니다.</li>\n<li>PRIMARY KEY : 해당 필드가 NOT NULL과 UNIQUE 제약 조건의 특징을 모두 가지게 됩니다.</li>\n<li>FOREIGN KEY : 하나의 테이블을 다른 테이블에 의존하게 만듭니다.</li>\n<li>DEFAULT : 해당 필드의 기본값을 설정합니다.</li>\n</ol>","id":"cc624af1-7f03-5c75-bd36-9d77f4365108","fields":{"slug":"intg-sql-sql-cheet-sheet-구문-예제-및-문법-정리"},"frontmatter":{"date":"2019-03-04","title":"[INTG, SQL] SQL Cheet Sheet 구문 예제 및 문법 정리","category":"intg","tags":null,"banner":null},"timeToRead":2},"next":{"excerpt":"CSS와 Javascript에서의 Animation Animation? 반복적인 움직임의 처리! 간단하고 규칙적인 움직임은 CSS3의 transition, transform 속성으로 처리 가능하며, javascript보다 좋은 성능을 보장함. javascript Animation 복잡하고 정밀한 애니메이션을 표현하기 위해 주로 사용 setInterval, setTimeout, requestAnimationFrame, Animations API…","html":"<h3 id=\"css와-javascript에서의-animation\" style=\"position:relative;\"><a href=\"#css%EC%99%80-javascript%EC%97%90%EC%84%9C%EC%9D%98-animation\" aria-label=\"css와 javascript에서의 animation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS와 Javascript에서의 Animation</h3>\n<hr>\n<ul>\n<li>Animation?</li>\n</ul>\n<p>반복적인 움직임의 처리! 간단하고 규칙적인 움직임은 CSS3의 transition, transform 속성으로 처리 가능하며, javascript보다 좋은 성능을 보장함.</p>\n<ul>\n<li>javascript Animation</li>\n</ul>\n<p>복잡하고 정밀한 애니메이션을 표현하기 위해 주로 사용</p>\n<ul>\n<li>setInterval, setTimeout, requestAnimationFrame, Animations API 등을 활용할 수 있음</li>\n</ul>\n<p>하지만, setInterval같은 경우 애니메이션 구현에 사용되지 않음.\n<img src=\"/assets/img/boostcourse/setinterval.png\">\n위 그림에서 설명하는 \"지연문제\" 때문인데, 부스트코스에서는 이를 \"제 때 일어나야 할 이벤트 콜백이 지연/사라지는 현상\"이라고 설명했음.</p>\n<p>자세한 설명은 <a href=\"https://javascript.info/settimeout-setinterval\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Javascript<em>Event</em>Scheduling</a>에서 확인.</p>\n<h3 id=\"javascript의-requestanimationframe\" style=\"position:relative;\"><a href=\"#javascript%EC%9D%98-requestanimationframe\" aria-label=\"javascript의 requestanimationframe permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Javascript의 requestAnimationFrame</h3>\n<hr>\n<p>위 상황처럼, setTimeout,setInterval은 애니매이션을 위해 최적화되지 않음. animation 주기가 16.6ms 미만으로 내려갈 경우, 불필요한 frame이 생기기 때문임.</p>\n<p>이에 대한 대안으로 <strong>requestAnimationFrame</strong>이 탄생함.\n사용법은 setTimeout과 크게 다르지 않은듯.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n        <span class=\"token selector\">.mynode</span><span class=\"token punctuation\">{</span>\n            <span class=\"token property\">position</span><span class=\"token punctuation\">:</span>relative<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mynode<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        testyest\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> node <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.mynode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nnode<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left<span class=\"token operator\">=</span><span class=\"token string\">\"0px\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>count<span class=\"token operator\">></span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    \n    count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    node<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left<span class=\"token operator\">=</span>count<span class=\"token operator\">+</span><span class=\"token string\">\"px\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>run<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>run<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"css3-transition\" style=\"position:relative;\"><a href=\"#css3-transition\" aria-label=\"css3 transition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS3 transition</h3>\n<p>GPU 가속을 이용하는 CSS 속성들을 사용하면\nJavascript로 구현하는 것보다 더 빠르다고 알려짐!</p>\n<ul>\n<li>transform:translateXX();</li>\n<li>transform:scale();</li>\n<li>transform: rotate();</li>\n<li>opacity</li>\n</ul>\n<p>transition 으로 변화시킬 속성과 변화 시간을 지정할 수 있음</p>\n<p>transition [property] [duration] [timing-function] [delay]</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">transform</span> <span class=\"token punctuation\">:</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">transition</span> <span class=\"token punctuation\">:</span> transform 2s</code></pre></div>","id":"fe47437f-d59c-5cb2-a332-0611f71e2fcc","fields":{"slug":"boost-course-pj-3-front-end-강의-정리-2"},"frontmatter":{"date":"2019-07-04","title":"[BoostCourse] PJ3 FrontEnd 강의 정리 -2","category":"boostcourse","tags":null,"banner":null},"timeToRead":1}}},"staticQueryHashes":["3824141623"]}