{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/kaggle-커널분석-notebook-마무리-house-price-prediction-3","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p><a href=\"https://www.kaggle.com/apapiu/regularized-linear-models\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Kaggle house price prediction example kernel</a> 필사</p>\n</blockquote>\n<h1 id=\"캐글-house-price-prediction-정규화-모델-예제커널-필사\" style=\"position:relative;\"><a href=\"#%EC%BA%90%EA%B8%80-house-price-prediction-%EC%A0%95%EA%B7%9C%ED%99%94-%EB%AA%A8%EB%8D%B8-%EC%98%88%EC%A0%9C%EC%BB%A4%EB%84%90-%ED%95%84%EC%82%AC\" aria-label=\"캐글 house price prediction 정규화 모델 예제커널 필사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캐글 House price prediction 정규화 모델 예제커널 필사.</h1>\n<h2 id=\"선형-모델-구성하기\" style=\"position:relative;\"><a href=\"#%EC%84%A0%ED%98%95-%EB%AA%A8%EB%8D%B8-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"선형 모델 구성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>선형 모델 구성하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns\n<span class=\"token keyword\">import</span> matplotlib\n\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">from</span> scipy<span class=\"token punctuation\">.</span>stats <span class=\"token keyword\">import</span> skew\n<span class=\"token keyword\">from</span> scipy<span class=\"token punctuation\">.</span>stats<span class=\"token punctuation\">.</span>stats <span class=\"token keyword\">import</span> pearsonr\n\n<span class=\"token operator\">%</span>config InlineBackend<span class=\"token punctuation\">.</span>figure_formaat <span class=\"token operator\">=</span><span class=\"token string\">'retina'</span>\n<span class=\"token operator\">%</span>matplotlib inline</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">train <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'../data/train.csv'</span><span class=\"token punctuation\">)</span>\ntest <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'../data/test.csv'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">train<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ntest<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}\n\n.dataframe td {\n    padding:0;\n}</code></pre></div>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotFrontage</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>Alley</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>...</th>\n      <th>ScreenPorch</th>\n      <th>PoolArea</th>\n      <th>PoolQC</th>\n      <th>Fence</th>\n      <th>MiscFeature</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1461</td>\n      <td>20</td>\n      <td>RH</td>\n      <td>80.0</td>\n      <td>11622</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>120</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>MnPrv</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2010</td>\n      <td>WD</td>\n      <td>Normal</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1462</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>81.0</td>\n      <td>14267</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Gar2</td>\n      <td>12500</td>\n      <td>6</td>\n      <td>2010</td>\n      <td>WD</td>\n      <td>Normal</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1463</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>74.0</td>\n      <td>13830</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>MnPrv</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>3</td>\n      <td>2010</td>\n      <td>WD</td>\n      <td>Normal</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1464</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>78.0</td>\n      <td>9978</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2010</td>\n      <td>WD</td>\n      <td>Normal</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1465</td>\n      <td>120</td>\n      <td>RL</td>\n      <td>43.0</td>\n      <td>5005</td>\n      <td>Pave</td>\n      <td>NaN</td>\n      <td>IR1</td>\n      <td>HLS</td>\n      <td>AllPub</td>\n      <td>...</td>\n      <td>144</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2010</td>\n      <td>WD</td>\n      <td>Normal</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 80 columns</p>\n</div>\n<p>train데이터 뿐만아니라 test데이터에도 일괄적으로 전처리(정규화 및 인코딩)을 적용하기 위해 데이터를 합쳐준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">all_data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>train<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MSSubClass'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'SaleCondition'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> test<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MSSubClass'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'SaleCondition'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">matplotlib<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'figure.figsize'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">12.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.0</span><span class=\"token punctuation\">)</span>\n\nprices <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">:</span>train<span class=\"token punctuation\">[</span><span class=\"token string\">\"SalePrice\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"log(price+1)\"</span><span class=\"token punctuation\">:</span>np<span class=\"token punctuation\">.</span>log1p<span class=\"token punctuation\">(</span>train<span class=\"token punctuation\">[</span><span class=\"token string\">\"SalePrice\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nprices<span class=\"token punctuation\">.</span>hist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">array([[&lt;AxesSubplot:title={&#39;center&#39;:&#39;price&#39;}&gt;,\n        &lt;AxesSubplot:title={&#39;center&#39;:&#39;log(price+1)&#39;}&gt;]], dtype=object)</code></pre></div>\n<p><img src=\"/assets/211013/output_6_1.png\" alt=\"png\"></p>\n<p>위에서 로그 변환을 통해 SalePrice를 정규화했다.\n여기서는 수치형 변수들을 타겟팅해 왜도가 높은 변수들에 대한 정규화를 일괄적으로 수행한다.</p>\n<ul>\n<li>Series(or DF).apply 함수를 통해 각 컬럼에 대한 왜도를 매칭시킨다.</li>\n<li>왜도가 0.75이상인 변수들의 인덱스를 구한다.</li>\n<li>위에서 구한 인덱스들에 대해 log(p+1)변환을 적용해 정규화시킨다.</li>\n<li>저자는 따로 설명하지 않았지만, 행에 음수값이 있다면 양수로 변환하는 과정이 필요할듯 하다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">train<span class=\"token punctuation\">[</span><span class=\"token string\">\"SalePrice\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>log1p<span class=\"token punctuation\">(</span>train<span class=\"token punctuation\">[</span><span class=\"token string\">\"SalePrice\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nnumeric_feats <span class=\"token operator\">=</span> all_data<span class=\"token punctuation\">.</span>dtypes<span class=\"token punctuation\">[</span>all_data<span class=\"token punctuation\">.</span>dtypes <span class=\"token operator\">!=</span><span class=\"token string\">\"object\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index\n\nskewed_feats <span class=\"token operator\">=</span> train<span class=\"token punctuation\">[</span>numeric_feats<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span>skew<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nskewed_feats <span class=\"token operator\">=</span> skewed_feats<span class=\"token punctuation\">[</span>skewed_feats <span class=\"token operator\">></span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">]</span>\nskewed_feats <span class=\"token operator\">=</span> skewed_feats<span class=\"token punctuation\">.</span>index\n\nall_data<span class=\"token punctuation\">[</span>skewed_feats<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>log1p<span class=\"token punctuation\">(</span>all_data<span class=\"token punctuation\">[</span>skewed_feats<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">MSSubClass       1.406210\nLotFrontage      2.160866\nLotArea         12.195142\nOverallQual      0.216721\nOverallCond      0.692355\nYearBuilt       -0.612831\nYearRemodAdd    -0.503044\nMasVnrArea       2.666326\nBsmtFinSF1       1.683771\nBsmtFinSF2       4.250888\ndtype: float64</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">all_data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>get_dummies<span class=\"token punctuation\">(</span>all_data<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">all_data <span class=\"token operator\">=</span> all_data<span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>all_data<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">X_train <span class=\"token operator\">=</span> all_data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>train<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\nX_test <span class=\"token operator\">=</span> all_data<span class=\"token punctuation\">[</span>train<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\ny<span class=\"token operator\">=</span> train<span class=\"token punctuation\">.</span>SalePrice</code></pre></div>\n<h2 id=\"models\" style=\"position:relative;\"><a href=\"#models\" aria-label=\"models permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Models</h2>\n<p>sklearn 모듈에서 정규화된 모듈을 사용해보자. l1,l2 모두 사용해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>linear_model <span class=\"token keyword\">import</span> Ridge<span class=\"token punctuation\">,</span> RidgeCV<span class=\"token punctuation\">,</span> ElasticNet<span class=\"token punctuation\">,</span> LassoCV<span class=\"token punctuation\">,</span> LassoLarsCV\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> cross_val_score\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">rmse_cv</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    rmse<span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>cross_val_score<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> X_train<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> scoring<span class=\"token operator\">=</span><span class=\"token string\">\"neg_mean_squared_error\"</span><span class=\"token punctuation\">,</span> cv <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> rmse</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">model_ridge<span class=\"token operator\">=</span> Ridge<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">alphas <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">]</span>\ncv_ridge <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>rmse_cv<span class=\"token punctuation\">(</span>Ridge<span class=\"token punctuation\">(</span>alpha<span class=\"token operator\">=</span>alpha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> alpha <span class=\"token keyword\">in</span> alphas<span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">cv_ridge <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>cv_ridge<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span>alphas<span class=\"token punctuation\">)</span>\ncv_ridge<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">\"Validation _ just do it\"</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"alpha\"</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"rsme\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Text(0, 0.5, &#39;rsme&#39;)</code></pre></div>\n<p><img src=\"/assets/211013/output_16_1.png\" alt=\"png\"></p>\n<p>정규화모델의 특징은 U자 형태로 나타나는데, 모델은 알파값이 너무 클 때 정규화가 너무 강하게 일어나 데이터의 복잡성을 따라가지 못한다. 반대로 알파값이 너무 작으면 데이터에 오버피팅된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">cv_ridge<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0.12733734668670754</code></pre></div>\n<p>릿지 회귀에서 rmsle 0.127을 얻었다.</p>\n<p>라쏘 모델도 테스트해보자. 구현된 LassoCV를 통해 위의 방법과 조금 다른 방법으로 최적 alpha값에 접근할것이다. 모종의 이유로 릿지회귀와는 정 반대의 순서로 알파를 구성한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">model_lasso <span class=\"token operator\">=</span> LassoCV<span class=\"token punctuation\">(</span>alphas<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.001</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0005</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>X_train<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">rmse_cv<span class=\"token punctuation\">(</span>model_lasso<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0.12256735885048131</code></pre></div>\n<p>라쏘 모델이 조금 더 나은 예측값을 가지므로, 테스트 케이스에도 그대로 사용할것이다. 라쏘의 좋은점은, 특징선택을 해준다는 점이다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">coef <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>model_lasso<span class=\"token punctuation\">.</span>coef_<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span> X_train<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Lasso picked  \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>coef <span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>  <span class=\"token string\">\"variables and eliminated the other \"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>coef<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\" variables\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Lasso picked  110variables and eliminated the other 178 variables</code></pre></div>\n<p>여기서 고른 특징들이 반드시 옳은 특징들은 아니다. 특히 공선성을 갖는 경우가 있어, 부트스트랩 샘플들에 대한 라쏘 모델을 몇번 실행시키고 이 결과가 얼마나 안정적인지 직접 살펴야 한다</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">imp_coef <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>coef<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> coef<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">matplotlib<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'figure.figsize'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">8.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.0</span><span class=\"token punctuation\">)</span>\nimp_coef<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"barh\"</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Coefficients in the Lasso Model\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Text(0.5, 1.0, &#39;Coefficients in the Lasso Model&#39;)</code></pre></div>\n<p><img src=\"/assets/211013/output_28_1.png\" alt=\"png\"></p>\n<p>양의 상관성을 갖는 가장 중요한 특징은 지상면적을 뜻하는 GrLivArea이다. 확실히 개연성이 있지만, 음의 상관성을 갖는 특징중 일부로는 불균형적인 범주형 변수에서 비롯된 것 일수도 있다.</p>\n<p>Random forest에서 얻은 특징 중요도와는 달리 이는 실제 모델 계수이다. 따라서 예측된 가격이 왜 그렇게 되었는지 정확히 말할 수 있다. 따라서 로그변환된 타겟,숫자형 변수에 대한 실질적인 크기 예측이 조금 힘들다는 점이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">matplotlib<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'figure.figsize'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">6.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.0</span><span class=\"token punctuation\">)</span>\n\npreds <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"preds\"</span><span class=\"token punctuation\">:</span> model_lasso<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>X_train<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">:</span>y<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\npreds<span class=\"token punctuation\">[</span><span class=\"token string\">\"residuals\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> preds<span class=\"token punctuation\">[</span><span class=\"token string\">\"true\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> preds<span class=\"token punctuation\">[</span><span class=\"token string\">\"preds\"</span><span class=\"token punctuation\">]</span>\npreds<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span> <span class=\"token string\">\"preds\"</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">\"residuals\"</span><span class=\"token punctuation\">,</span> kind<span class=\"token operator\">=</span><span class=\"token string\">\"scatter\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;AxesSubplot:xlabel=&#39;preds&#39;, ylabel=&#39;residuals&#39;&gt;</code></pre></div>\n<p><img src=\"/assets/211013/output_30_1.png\" alt=\"png\"></p>\n<h2 id=\"xgboost-모델-추가하기\" style=\"position:relative;\"><a href=\"#xgboost-%EB%AA%A8%EB%8D%B8-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"xgboost 모델 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>XGBoost 모델 추가하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> xgboost <span class=\"token keyword\">as</span> xgb</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">dtrain <span class=\"token operator\">=</span> xgb<span class=\"token punctuation\">.</span>DMatrix<span class=\"token punctuation\">(</span>X_train<span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> y<span class=\"token punctuation\">)</span>\ndtest <span class=\"token operator\">=</span> xgb<span class=\"token punctuation\">.</span>DMatrix<span class=\"token punctuation\">(</span>X_test<span class=\"token punctuation\">)</span>\n\nparams <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"max_depth\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"eta\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">}</span>\nmodel <span class=\"token operator\">=</span> xgb<span class=\"token punctuation\">.</span>cv<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> dtrain<span class=\"token punctuation\">,</span>  num_boost_round<span class=\"token operator\">=</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> early_stopping_rounds<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">model<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"test-rmse-mean\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"train-rmse-mean\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;AxesSubplot:&gt;</code></pre></div>\n<p><img src=\"/assets/211013/output_34_1.png\" alt=\"png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">model_xgb <span class=\"token operator\">=</span> xgb<span class=\"token punctuation\">.</span>XGBRegressor<span class=\"token punctuation\">(</span>n_estimators<span class=\"token operator\">=</span><span class=\"token number\">360</span><span class=\"token punctuation\">,</span> max_depth<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> learning_rate<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#the params were tuned using xgb.cv</span>\nmodel_xgb<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>X_train<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">XGBRegressor(base_score=0.5, booster=&#39;gbtree&#39;, colsample_bylevel=1,\n             colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,\n             importance_type=&#39;gain&#39;, interaction_constraints=&#39;&#39;,\n             learning_rate=0.1, max_delta_step=0, max_depth=2,\n             min_child_weight=1, missing=nan, monotone_constraints=&#39;()&#39;,\n             n_estimators=360, n_jobs=4, num_parallel_tree=1, random_state=0,\n             reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1,\n             tree_method=&#39;exact&#39;, validate_parameters=1, verbosity=None)</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">xgb_preds <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>expm1<span class=\"token punctuation\">(</span>model_xgb<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>X_test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlasso_preds <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>expm1<span class=\"token punctuation\">(</span>model_lasso<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>X_test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">predictions<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span> <span class=\"token string\">\"xgb\"</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token string\">\"lasso\"</span><span class=\"token punctuation\">,</span> kind <span class=\"token operator\">=</span> <span class=\"token string\">\"scatter\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;AxesSubplot:xlabel=&#39;xgb&#39;, ylabel=&#39;lasso&#39;&gt;</code></pre></div>\n<p><img src=\"/assets/211013/output_37_1.png\" alt=\"png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> math\nmath<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">3.1622776601683795</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"></code></pre></div>\n<h3 id=\"후일담\" style=\"position:relative;\"><a href=\"#%ED%9B%84%EC%9D%BC%EB%8B%B4\" aria-label=\"후일담 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>후일담.</h3>\n<hr>\n<p>House price prediction 커널분석은 예정과는 다르게 3번째 포스팅에서 마무리한다.</p>\n<ul>\n<li>1.<a href=\"https://www.kaggle.com/learn/intermediate-machine-learning\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Intermediate machine learning</a>으로 공부했고</li>\n<li>\n<ol start=\"2\">\n<li>기본 커널을 작성했는데 오류가 발산했다!</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>내 베이스라인이 처음부터 끝까지 다 잘못됐을거라 생각하고 처음부터 다시 공부하자 생각, <a href=\"https://www.kaggle.com/serigne/stacked-regressions-top-4-on-leaderboard\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">훌륭한 커널을 발견!(링크)</a> 필사를 시작했다.</li>\n</ol>\n</li>\n</ul>\n<hr>\n<ul>\n<li>참조커널 필사를 하던 중, 전체 과정이 나랑 크게 다른게 없는데 스코어가 정상수치임을 확인,</li>\n<li>평가지표를 다시 확인해봤다.</li>\n</ul>\n<p><img src=\"/assets/211013/hpp_metric.PNG\" alt=\"metric\"></p>\n<ul>\n<li>나는 RMSE만 읽고 모델검증을 했는데, 자세히 읽어보면 예측 집값의 \"로그\"값과 실제집값의 \"로그\"값으로 RMSE를 한다는 내용...</li>\n<li>다시 확인한 평가지표를 내 기본 커널에 적용하니 놀랍게도 정상적인 스코어가 나왔다!.. (public score: 0.12958 / learderboard rank: 1244/4483)</li>\n</ul>\n<p><img src=\"/assets/211013/score.PNG\" alt=\"leaderboard\"></p>","fields":{"slug":"kaggle-커널분석-notebook-마무리-house-price-prediction-3"},"frontmatter":{"title":"[Kaggle 커널분석 notebook 마무리] House price prediction -3","date":"13.10.2021","category":"datascience","tags":["datascience","machinelearning"],"banner":"/assets/bg/2.jpg"},"timeToRead":8}},"pageContext":{"slug":"kaggle-커널분석-notebook-마무리-house-price-prediction-3","prev":{"excerpt":"kaggle house price prediction EDA 필사. 1. 무엇을 해야할까? 아래의 값을 엑셀 스프레드시트에 저장하자. Variable: 변수명 Type: 변수의 타입값, 컬럼의 값들이 수치를 나타내는 'numerical'타입과, 범주형 변수를 나타내는 'categorial' 값 두개만 들어갈 수 있음 Segment: 변수의 구분값. building, space, location값이 들어갈 수 있음 Expectation…","html":"<p><a href=\"https://www.kaggle.com/pmarcelino/comprehensive-data-exploration-with-python\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">kaggle house price prediction EDA</a> 필사.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">from</span> scipy<span class=\"token punctuation\">.</span>stats <span class=\"token keyword\">import</span> norm\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> StandardScaler\n<span class=\"token keyword\">from</span> scipy <span class=\"token keyword\">import</span> stats\n<span class=\"token keyword\">import</span> warnings\nwarnings<span class=\"token punctuation\">.</span>filterwarnings<span class=\"token punctuation\">(</span><span class=\"token string\">'ignore'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">%</span>matplotlib inline</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'../data/train.csv'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">.</span>columns</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Index([&#39;Id&#39;, &#39;MSSubClass&#39;, &#39;MSZoning&#39;, &#39;LotFrontage&#39;, &#39;LotArea&#39;, &#39;Street&#39;,\n       &#39;Alley&#39;, &#39;LotShape&#39;, &#39;LandContour&#39;, &#39;Utilities&#39;, &#39;LotConfig&#39;,\n       &#39;LandSlope&#39;, &#39;Neighborhood&#39;, &#39;Condition1&#39;, &#39;Condition2&#39;, &#39;BldgType&#39;,\n       &#39;HouseStyle&#39;, &#39;OverallQual&#39;, &#39;OverallCond&#39;, &#39;YearBuilt&#39;, &#39;YearRemodAdd&#39;,\n       &#39;RoofStyle&#39;, &#39;RoofMatl&#39;, &#39;Exterior1st&#39;, &#39;Exterior2nd&#39;, &#39;MasVnrType&#39;,\n       &#39;MasVnrArea&#39;, &#39;ExterQual&#39;, &#39;ExterCond&#39;, &#39;Foundation&#39;, &#39;BsmtQual&#39;,\n       &#39;BsmtCond&#39;, &#39;BsmtExposure&#39;, &#39;BsmtFinType1&#39;, &#39;BsmtFinSF1&#39;,\n       &#39;BsmtFinType2&#39;, &#39;BsmtFinSF2&#39;, &#39;BsmtUnfSF&#39;, &#39;TotalBsmtSF&#39;, &#39;Heating&#39;,\n       &#39;HeatingQC&#39;, &#39;CentralAir&#39;, &#39;Electrical&#39;, &#39;1stFlrSF&#39;, &#39;2ndFlrSF&#39;,\n       &#39;LowQualFinSF&#39;, &#39;GrLivArea&#39;, &#39;BsmtFullBath&#39;, &#39;BsmtHalfBath&#39;, &#39;FullBath&#39;,\n       &#39;HalfBath&#39;, &#39;BedroomAbvGr&#39;, &#39;KitchenAbvGr&#39;, &#39;KitchenQual&#39;,\n       &#39;TotRmsAbvGrd&#39;, &#39;Functional&#39;, &#39;Fireplaces&#39;, &#39;FireplaceQu&#39;, &#39;GarageType&#39;,\n       &#39;GarageYrBlt&#39;, &#39;GarageFinish&#39;, &#39;GarageCars&#39;, &#39;GarageArea&#39;, &#39;GarageQual&#39;,\n       &#39;GarageCond&#39;, &#39;PavedDrive&#39;, &#39;WoodDeckSF&#39;, &#39;OpenPorchSF&#39;,\n       &#39;EnclosedPorch&#39;, &#39;3SsnPorch&#39;, &#39;ScreenPorch&#39;, &#39;PoolArea&#39;, &#39;PoolQC&#39;,\n       &#39;Fence&#39;, &#39;MiscFeature&#39;, &#39;MiscVal&#39;, &#39;MoSold&#39;, &#39;YrSold&#39;, &#39;SaleType&#39;,\n       &#39;SaleCondition&#39;, &#39;SalePrice&#39;],\n      dtype=&#39;object&#39;)</code></pre></div>\n<h1 id=\"1-무엇을-해야할까\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B4%EC%97%87%EC%9D%84-%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C\" aria-label=\"1 무엇을 해야할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 무엇을 해야할까?</h1>\n<p>아래의 값을 엑셀 스프레드시트에 저장하자.</p>\n<ul>\n<li>Variable: 변수명</li>\n<li>Type: 변수의 타입값, 컬럼의 값들이 수치를 나타내는 'numerical'타입과, 범주형 변수를 나타내는 'categorial' 값 두개만 들어갈 수 있음</li>\n<li>Segment: 변수의 구분값. building, space, location값이 들어갈 수 있음</li>\n<li>Expectation: SalePrice에 영향을 미치는 변수들 예측, 상/중/하로 구분</li>\n<li>Conclusion : 데이터 탐색 후 예측한 데이터의 중요도. 상/중/하로 구분</li>\n<li>Comments: 일반적인 주석</li>\n</ul>\n<p>스프레드시트를 채우기 전에 변수에 대한 설명을 다 읽어보고, 이런 질문들을 해본다면 어떨까.</p>\n<ul>\n<li>이 변수는 내가 실제 집을 살 때 고려하는 부분인가?</li>\n<li>그렇다면 얼마나 중요하게 고려하는가?</li>\n<li>이와 연관된 컬럼은 무엇인가? (강한 결합요소 찾기)</li>\n</ul>\n<h1 id=\"saleprice-분석\" style=\"position:relative;\"><a href=\"#saleprice-%EB%B6%84%EC%84%9D\" aria-label=\"saleprice 분석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SalePrice 분석</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>describe<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">count      1460.000000\nmean     180921.195890\nstd       79442.502883\nmin       34900.000000\n25%      129975.000000\n50%      163000.000000\n75%      214000.000000\nmax      755000.000000\nName: SalePrice, dtype: float64</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sns<span class=\"token punctuation\">.</span>displot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;seaborn.axisgrid.FacetGrid at 0x7f78dc9ac280&gt;</code></pre></div>\n<p><img src=\"/assets/211012/output_6_1.png\" alt=\"png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Skewness: %f\"</span> <span class=\"token operator\">%</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>skew<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Kurtosis: %f\"</span> <span class=\"token operator\">%</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>kurt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Skewness: 1.882876\nKurtosis: 6.536282</code></pre></div>\n<h2 id=\"수치형데이터와의-관계를-알아보자\" style=\"position:relative;\"><a href=\"#%EC%88%98%EC%B9%98%ED%98%95%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%99%80%EC%9D%98-%EA%B4%80%EA%B3%84%EB%A5%BC-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90\" aria-label=\"수치형데이터와의 관계를 알아보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>수치형데이터와의 관계를 알아보자</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Above grade (ground) living area square feet</span>\nvar <span class=\"token operator\">=</span> <span class=\"token string\">'GrLivArea'</span>\ndata <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_train<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>var<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">,</span> ylim<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">800000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;AxesSubplot:xlabel=&#39;GrLivArea&#39;, ylabel=&#39;SalePrice&#39;&gt;</code></pre></div>\n<p><img src=\"/assets/211012/output_9_1.png\" alt=\"png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#Total square feet of basement area</span>\nvar <span class=\"token operator\">=</span> <span class=\"token string\">'TotalBsmtSF'</span> \ndata <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_train<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>var<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">,</span> ylim<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">800000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;AxesSubplot:xlabel=&#39;TotalBsmtSF&#39;, ylabel=&#39;SalePrice&#39;&gt;</code></pre></div>\n<p><img src=\"/assets/211012/output_10_1.png\" alt=\"png\"></p>\n<h2 id=\"범주형-변수와의-관계를-알아보자\" style=\"position:relative;\"><a href=\"#%EB%B2%94%EC%A3%BC%ED%98%95-%EB%B3%80%EC%88%98%EC%99%80%EC%9D%98-%EA%B4%80%EA%B3%84%EB%A5%BC-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90\" aria-label=\"범주형 변수와의 관계를 알아보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>범주형 변수와의 관계를 알아보자</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#Rates the overall material and finish of the house</span>\nvar <span class=\"token operator\">=</span> <span class=\"token string\">'OverallQual'</span>\ndata<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_train<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfig<span class=\"token operator\">=</span>sns<span class=\"token punctuation\">.</span>boxplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>var<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">\"SalePrice\"</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\nfig<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span>ymin<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ymax<span class=\"token operator\">=</span><span class=\"token number\">800000</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(-0.5, 9.5, 0.0, 800000.0)</code></pre></div>\n<p><img src=\"/assets/211012/output_12_1.png\" alt=\"png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">var <span class=\"token operator\">=</span> <span class=\"token string\">'YearBuilt'</span>\ndata <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_train<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfig <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>boxplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>var<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">\"SalePrice\"</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\nfig<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span>ymin<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ymax<span class=\"token operator\">=</span><span class=\"token number\">800000</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xticks<span class=\"token punctuation\">(</span>rotation<span class=\"token operator\">=</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"/assets/211012/output_13_0.png\" alt=\"png\"></p>\n<p>4개의 변수들에 대한 상관관계를 알아보았다. 모두 양의 상관관계를 나타내고 있으며, OverallQual같은 경우, 강한 양의 상관관계를 나타냈다.</p>\n<h2 id=\"work-smart\" style=\"position:relative;\"><a href=\"#work-smart\" aria-label=\"work smart permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Work smart</h2>\n<p>위 방식들은 우리의 직감을 통해 연관있는 피쳐들을 뽑아내는 과정이었지만, 우리가 알아내야하는 정보는 이에 그치지 않는다</p>\n<p>전체를 탐험하기 위해 아래 과정을 거쳐야한다</p>\n<ul>\n<li>히트맵 스타일의 상관관계 행렬</li>\n<li>Zoon heatmap 스타일의 'SalePrice' 상관관계 행렬</li>\n<li>연관된 변수들 사이의 산점도 그래프</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">corrmat <span class=\"token operator\">=</span> df_train<span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span>heatmap<span class=\"token punctuation\">(</span>corrmat<span class=\"token punctuation\">,</span> vmax<span class=\"token operator\">=</span><span class=\"token number\">.8</span><span class=\"token punctuation\">,</span> square<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;AxesSubplot:&gt;</code></pre></div>\n<p><img src=\"/assets/211012/output_16_1.png\" alt=\"png\"></p>\n<p>SalePrice와 연관된 변수와의 산점도행렬</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sns<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncorr <span class=\"token operator\">=</span> df_train<span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmycols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>col <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> corr <span class=\"token keyword\">if</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>corr<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">]</span>\ncols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'OverallQual'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GrLivArea'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GarageCars'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'FullBath'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'YearBuilt'</span><span class=\"token punctuation\">]</span>\n\nsns<span class=\"token punctuation\">.</span>pairplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span>mycols<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>size<span class=\"token operator\">=</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"/assets/211012/output_18_0.png\" alt=\"png\"></p>\n<h2 id=\"4-결측치\" style=\"position:relative;\"><a href=\"#4-%EA%B2%B0%EC%B8%A1%EC%B9%98\" aria-label=\"4 결측치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 결측치</h2>\n<ul>\n<li>얼마나 많은 결측치가 있는지?</li>\n<li>결측데이터에 관계가 있는지? 무작위성인지</li>\n</ul>\n<p>결측치는, 표본크기가 줄어든다는 의미이기 때문에, 위 질문에 대한 대답은 중요한 의미를 갖는다.\n또한 15% 이상의 결측률을 보이는 변수는 이를 채우기 위한 어떤 방법도 사용하지 않고 지운다. (집을 구매하는데 큰 영향을 미치는 변수가 아닌 경우가 대부분이므로)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">total <span class=\"token operator\">=</span> df_train<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\npercent <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>df_train<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nmissing_data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>total<span class=\"token punctuation\">,</span> percent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> keys<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Total'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Percent'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nmissing_data<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}</code></pre></div>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Total</th>\n      <th>Percent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>PoolQC</th>\n      <td>1453</td>\n      <td>0.995205</td>\n    </tr>\n    <tr>\n      <th>MiscFeature</th>\n      <td>1406</td>\n      <td>0.963014</td>\n    </tr>\n    <tr>\n      <th>Alley</th>\n      <td>1369</td>\n      <td>0.937671</td>\n    </tr>\n    <tr>\n      <th>Fence</th>\n      <td>1179</td>\n      <td>0.807534</td>\n    </tr>\n    <tr>\n      <th>FireplaceQu</th>\n      <td>690</td>\n      <td>0.472603</td>\n    </tr>\n    <tr>\n      <th>LotFrontage</th>\n      <td>259</td>\n      <td>0.177397</td>\n    </tr>\n    <tr>\n      <th>GarageYrBlt</th>\n      <td>81</td>\n      <td>0.055479</td>\n    </tr>\n    <tr>\n      <th>GarageCond</th>\n      <td>81</td>\n      <td>0.055479</td>\n    </tr>\n    <tr>\n      <th>GarageType</th>\n      <td>81</td>\n      <td>0.055479</td>\n    </tr>\n    <tr>\n      <th>GarageFinish</th>\n      <td>81</td>\n      <td>0.055479</td>\n    </tr>\n    <tr>\n      <th>GarageQual</th>\n      <td>81</td>\n      <td>0.055479</td>\n    </tr>\n    <tr>\n      <th>BsmtFinType2</th>\n      <td>38</td>\n      <td>0.026027</td>\n    </tr>\n    <tr>\n      <th>BsmtExposure</th>\n      <td>38</td>\n      <td>0.026027</td>\n    </tr>\n    <tr>\n      <th>BsmtQual</th>\n      <td>37</td>\n      <td>0.025342</td>\n    </tr>\n    <tr>\n      <th>BsmtCond</th>\n      <td>37</td>\n      <td>0.025342</td>\n    </tr>\n    <tr>\n      <th>BsmtFinType1</th>\n      <td>37</td>\n      <td>0.025342</td>\n    </tr>\n    <tr>\n      <th>MasVnrArea</th>\n      <td>8</td>\n      <td>0.005479</td>\n    </tr>\n    <tr>\n      <th>MasVnrType</th>\n      <td>8</td>\n      <td>0.005479</td>\n    </tr>\n    <tr>\n      <th>Electrical</th>\n      <td>1</td>\n      <td>0.000685</td>\n    </tr>\n    <tr>\n      <th>Id</th>\n      <td>0</td>\n      <td>0.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#dealing with missing data</span>\ndf_train <span class=\"token operator\">=</span> df_train<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>missing_data<span class=\"token punctuation\">[</span>missing_data<span class=\"token punctuation\">[</span><span class=\"token string\">'Total'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndf_train <span class=\"token operator\">=</span> df_train<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'Electrical'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\ndf_train<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#just checking that there's no missing data missing...</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0</code></pre></div>\n<h2 id=\"이상치\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%83%81%EC%B9%98\" aria-label=\"이상치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이상치</h2>\n<h3 id=\"일변량-분석\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%B3%80%EB%9F%89-%EB%B6%84%EC%84%9D\" aria-label=\"일변량 분석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일변량 분석</h3>\n<p>이상치의 임계점을 찾는게 가장 근본적인 문제이다. 이를 위해 데이터를 표준화한다. 여기서 표준화란, 평균을 0, 표준편차를 1로 만드는 작업이다</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">saleprice_scaled <span class=\"token operator\">=</span> StandardScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>np<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nlow_range <span class=\"token operator\">=</span> saleprice_scaled<span class=\"token punctuation\">[</span>saleprice_scaled<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>argsort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\nhigh_range <span class=\"token operator\">=</span> saleprice_scaled<span class=\"token punctuation\">[</span>saleprice_scaled<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>argsort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'outer range (low) of the distribution: '</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>low_range<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nouter range (high) of the distribution'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>high_range<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">outer range (low) of the distribution: \n[[-1.83820775]\n [-1.83303414]\n [-1.80044422]\n [-1.78282123]\n [-1.77400974]\n [-1.62295562]\n [-1.6166617 ]\n [-1.58519209]\n [-1.58519209]\n [-1.57269236]]\n\nouter range (high) of the distribution\n[[3.82758058]\n [4.0395221 ]\n [4.49473628]\n [4.70872962]\n [4.728631  ]\n [5.06034585]\n [5.42191907]\n [5.58987866]\n [7.10041987]\n [7.22629831]]</code></pre></div>\n<h2 id=\"이변량분석\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B3%80%EB%9F%89%EB%B6%84%EC%84%9D\" aria-label=\"이변량분석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이변량분석</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">var <span class=\"token operator\">=</span> <span class=\"token string\">'GrLivArea'</span>\ndata <span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_train<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>var<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">,</span> ylim<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">800000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* &amp; *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n\n\n\n\n\n&lt;AxesSubplot:xlabel=&#39;GrLivArea&#39;, ylabel=&#39;SalePrice&#39;&gt;</code></pre></div>\n<p><img src=\"/assets/211012/output_25_2.png\" alt=\"png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>by <span class=\"token operator\">=</span> <span class=\"token string\">'GrLivArea'</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># result: [1298, 523]</span>\ndf_train<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'Id'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">1299</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\ndf_train<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'Id'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">524</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}\n\n.dataframe td {\n  padding: 0;\n}</code></pre></div>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>LotConfig</th>\n      <th>LandSlope</th>\n      <th>...</th>\n      <th>EnclosedPorch</th>\n      <th>3SsnPorch</th>\n      <th>ScreenPorch</th>\n      <th>PoolArea</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>8450</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Inside</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>208500</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>9600</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>FR2</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>181500</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>11250</td>\n      <td>Pave</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Inside</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>223500</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>70</td>\n      <td>RL</td>\n      <td>9550</td>\n      <td>Pave</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Corner</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>272</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2006</td>\n      <td>WD</td>\n      <td>Abnorml</td>\n      <td>140000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>14260</td>\n      <td>Pave</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>FR2</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>12</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>250000</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1455</th>\n      <td>1456</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>7917</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Inside</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>8</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>175000</td>\n    </tr>\n    <tr>\n      <th>1456</th>\n      <td>1457</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>13175</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Inside</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2010</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>210000</td>\n    </tr>\n    <tr>\n      <th>1457</th>\n      <td>1458</td>\n      <td>70</td>\n      <td>RL</td>\n      <td>9042</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Inside</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2500</td>\n      <td>5</td>\n      <td>2010</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>266500</td>\n    </tr>\n    <tr>\n      <th>1458</th>\n      <td>1459</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>9717</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Inside</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>112</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>4</td>\n      <td>2010</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>142125</td>\n    </tr>\n    <tr>\n      <th>1459</th>\n      <td>1460</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>9937</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Inside</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>147500</td>\n    </tr>\n  </tbody>\n</table>\n<p>1458 rows × 63 columns</p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">var <span class=\"token operator\">=</span> <span class=\"token string\">'TotalBsmtSF'</span>\ndata <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_train<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>var<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">,</span> ylim<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">800000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* &amp; *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n\n\n\n\n\n&lt;AxesSubplot:xlabel=&#39;TotalBsmtSF&#39;, ylabel=&#39;SalePrice&#39;&gt;</code></pre></div>\n<p><img src=\"/assets/211012/output_27_2.png\" alt=\"png\"></p>\n<h2 id=\"더-세부적인-내용들\" style=\"position:relative;\"><a href=\"#%EB%8D%94-%EC%84%B8%EB%B6%80%EC%A0%81%EC%9D%B8-%EB%82%B4%EC%9A%A9%EB%93%A4\" aria-label=\"더 세부적인 내용들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>더 세부적인 내용들.</h2>\n<p>SalePrice가 어떤 값인지 이해하기 위해선다변량 분석에 대한 통계적인 기초 아래의 추정이 필요하다.이미 SalePrice에 관한 몇몇 데이터를 정리하고 탐색해보았으니, 다변량 분석을 가능하게하는 통계적 추정이 어떻게 SalePrice를 경정하는지 알아보아야 한다.</p>\n<p>4개의 통계적 추정값을 살표보자. </p>\n<ul>\n<li>\n<p>Normality - 정규성\n정규분포를 따르는지에 대한 특성. 하나의 변수에서 Saleprice가 정규한지를 체크할 것이다.\n하나의 변수에서의 정규성이 다변수에서의 정규성을 띄도록 도와주지만, 다변수에서의 정규성을 보장하지는 않는다는것을 기억하자.  </p>\n<p>하나 더 고려해야할 것은, 보통 200개 이상의 큰 샘플에 대해서는 정규성이 그다지 큰 이슈가 아니지만 정규성 문제를 해결하면 heteroscedacity를 포함한 많은 문제를 우회할 수 있다. </p>\n</li>\n<li>Homoscedasticity - 등분산성\n등분산성은 '종속 변수가 예측 변수 범위에 걸쳐 동일한 수준의 분산을 나타낸다는 가정'을 나타낸다.\n등분산성은 독립 변수의 모든 값에서 오차 항이 동일하기를 원하기 때문에 바람직하다. </li>\n<li>Linearlity - 선형성\n선형성을 평가하는 가장 쉬운 방법은 산점도가 선형성을 나타내는지 체크하는것이다. 만약 선형적이지 않은 패턴이라면 데이터를 변환하는게 바람직하다. </li>\n<li>Absence of correlated errors - 상관오류의 부재\n상관오류라는 정의가 보여주듯, 하나의 오류가 다른 부분에 상관될 때 발생한다. 예를들어 긍정 오류가 대칭적으로 부정 오류를 만든다면, 이 변수들 사이에는 상관관계가 있는 것이며 이는 시계열 데이터가 시간과 관련있는 패턴일때 종종 발생한다. </li>\n</ul>\n<h2 id=\"정규성-찾기\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EA%B7%9C%EC%84%B1-%EC%B0%BE%EA%B8%B0\" aria-label=\"정규성 찾기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정규성 찾기</h2>\n<p>SalePrice 에 대한 정규성을 깔끔한 방법으로 찾아보자</p>\n<ul>\n<li>히스토그램을 통해 첨도와 왜도 구하기</li>\n<li>정규확률분포: 데이터 분포가 정규 분포를 의미하는 대각선에 근사하는지 찾기.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sns<span class=\"token punctuation\">.</span>distplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fit<span class=\"token operator\">=</span>norm<span class=\"token punctuation\">)</span>\nfig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nres <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>probplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> plot<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"/assets/211012/output_30_0.png\" alt=\"png\"></p>\n<p><img src=\"/assets/211012/output_30_1.png\" alt=\"png\"></p>\n<p>SalePrice는 정규성을 따르지 않는다. 그래프가 너무 뾰족하고 확률분포가 대각선을 따르지 않는다.  </p>\n<p>그러나 간단한 데이터 변환으로 문제를 해결할 수 있다. 통계학 책에서 배울 수 있는 신기한 방법은 <strong>로그</strong>를 취해서 양의 왜도를 조정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sns<span class=\"token punctuation\">.</span>distplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>fit<span class=\"token operator\">=</span>norm<span class=\"token punctuation\">)</span>\nfig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nres <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>probplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> plot<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"/assets/211012/output_33_0.png\" alt=\"png\"></p>\n<p><img src=\"/assets/211012/output_33_1.png\" alt=\"png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'GrLivArea'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'GrLivArea'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#histogram and normal probability plot</span>\nsns<span class=\"token punctuation\">.</span>distplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'GrLivArea'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fit<span class=\"token operator\">=</span>norm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nres <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>probplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'GrLivArea'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> plot<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"/assets/211012/output_35_0.png\" alt=\"png\"></p>\n<p><img src=\"/assets/211012/output_35_1.png\" alt=\"png\"></p>\n<p>다음으로 아래 변수에 대한 정규화를 해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sns<span class=\"token punctuation\">.</span>distplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>fit<span class=\"token operator\">=</span>norm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nres<span class=\"token operator\">=</span>stats<span class=\"token punctuation\">.</span>probplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> plot<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"/assets/211012/output_37_0.png\" alt=\"png\"></p>\n<p><img src=\"/assets/211012/output_37_1.png\" alt=\"png\"></p>\n<p>위 그래프에서 얻을 수 있는 것들?</p>\n<ul>\n<li>왜도</li>\n<li>값이 0인 많은 수의 관측치</li>\n<li>0값은 로그변환으로 근사시킬 수 없다는점</li>\n</ul>\n<p>로그 변환을 적용시키기 위해  basement(?)를 가지는지 아닌지를 나타내는 변수를 하나 만들어, 0이 아닌관측치에 대한 로그 변환을 할 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'HasBsmt'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span>df_train<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\ndf_train<span class=\"token punctuation\">[</span><span class=\"token string\">'HasBsmt'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token number\">0</span>\ndf_train<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'HasBsmt'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'HasBsmt'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sns<span class=\"token punctuation\">.</span>distplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fit<span class=\"token operator\">=</span>norm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfig<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nres <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>probplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> plot<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"/assets/211012/output_41_0.png\" alt=\"png\"></p>\n<p><img src=\"/assets/211012/output_41_1.png\" alt=\"png\"></p>\n<h2 id=\"한번의-시도로-공분산성-찾기\" style=\"position:relative;\"><a href=\"#%ED%95%9C%EB%B2%88%EC%9D%98-%EC%8B%9C%EB%8F%84%EB%A1%9C-%EA%B3%B5%EB%B6%84%EC%82%B0%EC%84%B1-%EC%B0%BE%EA%B8%B0\" aria-label=\"한번의 시도로 공분산성 찾기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한번의 시도로 공분산성 찾기</h2>\n<p>그래프를 통해 두 변수의 공분산성을 검증하는 방법은 그래프이다. 콘 또는 다이아몬드 형태의 모양은 두 변수가 등분산성을 나타내는 시작입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'GrLivArea'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;matplotlib.collections.PathCollection at 0x7f78cbf04cd0&gt;</code></pre></div>\n<p><img src=\"/assets/211012/output_43_1.png\" alt=\"png\"></p>\n<p>이전버전의 GrLivArea는 원뿔모양이지만 더이상 그렇지 않다.\n(원뿔모양 산점도가 동질성을 떨어뜨린다는 말이었을까? 헷갈린다)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_train<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"/assets/211012/output_45_0.png\" alt=\"png\"></p>\n<h2 id=\"마지막으로-중요한-dummy-variables\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%A7%80%EB%A7%89%EC%9C%BC%EB%A1%9C-%EC%A4%91%EC%9A%94%ED%95%9C-dummy-variables\" aria-label=\"마지막으로 중요한 dummy variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마지막으로 중요한 dummy variables</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>get_dummies<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}</code></pre></div>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>LotArea</th>\n      <th>OverallQual</th>\n      <th>OverallCond</th>\n      <th>YearBuilt</th>\n      <th>YearRemodAdd</th>\n      <th>BsmtFinSF1</th>\n      <th>BsmtFinSF2</th>\n      <th>BsmtUnfSF</th>\n      <th>...</th>\n      <th>SaleType_ConLw</th>\n      <th>SaleType_New</th>\n      <th>SaleType_Oth</th>\n      <th>SaleType_WD</th>\n      <th>SaleCondition_Abnorml</th>\n      <th>SaleCondition_AdjLand</th>\n      <th>SaleCondition_Alloca</th>\n      <th>SaleCondition_Family</th>\n      <th>SaleCondition_Normal</th>\n      <th>SaleCondition_Partial</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>60</td>\n      <td>8450</td>\n      <td>7</td>\n      <td>5</td>\n      <td>2003</td>\n      <td>2003</td>\n      <td>706</td>\n      <td>0</td>\n      <td>150</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>20</td>\n      <td>9600</td>\n      <td>6</td>\n      <td>8</td>\n      <td>1976</td>\n      <td>1976</td>\n      <td>978</td>\n      <td>0</td>\n      <td>284</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>60</td>\n      <td>11250</td>\n      <td>7</td>\n      <td>5</td>\n      <td>2001</td>\n      <td>2002</td>\n      <td>486</td>\n      <td>0</td>\n      <td>434</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>70</td>\n      <td>9550</td>\n      <td>7</td>\n      <td>5</td>\n      <td>1915</td>\n      <td>1970</td>\n      <td>216</td>\n      <td>0</td>\n      <td>540</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>60</td>\n      <td>14260</td>\n      <td>8</td>\n      <td>5</td>\n      <td>2000</td>\n      <td>2000</td>\n      <td>655</td>\n      <td>0</td>\n      <td>490</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>6</td>\n      <td>50</td>\n      <td>14115</td>\n      <td>5</td>\n      <td>5</td>\n      <td>1993</td>\n      <td>1995</td>\n      <td>732</td>\n      <td>0</td>\n      <td>64</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7</td>\n      <td>20</td>\n      <td>10084</td>\n      <td>8</td>\n      <td>5</td>\n      <td>2004</td>\n      <td>2005</td>\n      <td>1369</td>\n      <td>0</td>\n      <td>317</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>8</td>\n      <td>60</td>\n      <td>10382</td>\n      <td>7</td>\n      <td>6</td>\n      <td>1973</td>\n      <td>1973</td>\n      <td>859</td>\n      <td>32</td>\n      <td>216</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>9</td>\n      <td>50</td>\n      <td>6120</td>\n      <td>7</td>\n      <td>5</td>\n      <td>1931</td>\n      <td>1950</td>\n      <td>0</td>\n      <td>0</td>\n      <td>952</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>10</td>\n      <td>190</td>\n      <td>7420</td>\n      <td>5</td>\n      <td>6</td>\n      <td>1939</td>\n      <td>1950</td>\n      <td>851</td>\n      <td>0</td>\n      <td>140</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>10 rows × 223 columns</p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"></code></pre></div>","id":"d5f697d9-44af-51bf-932e-e9a329a1aefa","fields":{"slug":"kaggle-커널분석-notebook-house-price-prediction-2"},"frontmatter":{"date":"2021-10-12","title":"[Kaggle 커널분석 notebook] House price prediction -2","category":"datascience","tags":["datascience","machinelearning"],"banner":"/assets/bg/2.jpg"},"timeToRead":17},"next":{"excerpt":"pytorch에서는 in/output 모델에서 커널 사이즈나 이미지 크기등을 조정할 때 \"할당\"만 해주면 끝났지만, 케라스에서는 아래와 같은 과정이 필요하다. https://keras.io/examples/vision/keypoint_detection/#model-building","html":"<p>pytorch에서는 in/output 모델에서 커널 사이즈나 이미지 크기등을 조정할 때 \"할당\"만 해주면 끝났지만, 케라스에서는 아래와 같은 과정이 필요하다.</p>\n<p><a href=\"https://keras.io/examples/vision/keypoint_detection/#model-building\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://keras.io/examples/vision/keypoint_detection/#model-building</a></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">get_model</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># Load the pre-trained weights of MobileNetV2 and freeze the weights</span>\n    backbone <span class=\"token operator\">=</span> keras<span class=\"token punctuation\">.</span>applications<span class=\"token punctuation\">.</span>MobileNetV2<span class=\"token punctuation\">(</span>\n        weights<span class=\"token operator\">=</span><span class=\"token string\">\"imagenet\"</span><span class=\"token punctuation\">,</span> include_top<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> input_shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>IMG_SIZE<span class=\"token punctuation\">,</span> IMG_SIZE<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n    backbone<span class=\"token punctuation\">.</span>trainable <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n    inputs <span class=\"token operator\">=</span> layers<span class=\"token punctuation\">.</span>Input<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>IMG_SIZE<span class=\"token punctuation\">,</span> IMG_SIZE<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    x <span class=\"token operator\">=</span> keras<span class=\"token punctuation\">.</span>applications<span class=\"token punctuation\">.</span>mobilenet_v2<span class=\"token punctuation\">.</span>preprocess_input<span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">)</span>\n    x <span class=\"token operator\">=</span> backbone<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n    x <span class=\"token operator\">=</span> layers<span class=\"token punctuation\">.</span>Dropout<span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n    x <span class=\"token operator\">=</span> layers<span class=\"token punctuation\">.</span>SeparableConv2D<span class=\"token punctuation\">(</span>\n        NUM_KEYPOINTS<span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> strides<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span><span class=\"token string\">\"relu\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n    outputs <span class=\"token operator\">=</span> layers<span class=\"token punctuation\">.</span>SeparableConv2D<span class=\"token punctuation\">(</span>\n        NUM_KEYPOINTS<span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> strides<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span><span class=\"token string\">\"sigmoid\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> keras<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">,</span> outputs<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"keypoint_detector\"</span><span class=\"token punctuation\">)</span></code></pre></div>","id":"b2557adf-b9a4-5683-bb7d-d2c713f3ef11","fields":{"slug":"keras에서-model-input-output-layer를-커스텀하는-방법"},"frontmatter":{"date":"2021-11-24","title":"Keras에서 model input/output layer를 커스텀하는 방법","category":"deeplearning","tags":null,"banner":null},"timeToRead":1}}},"staticQueryHashes":["3824141623"]}