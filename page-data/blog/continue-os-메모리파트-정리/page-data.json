{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/continue-os-메모리파트-정리","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>주제 : 운영체제 메모리 관리: 물리메모리 할당 방식!</p>\n</blockquote>\n<ul>\n<li>목차</li>\n<li>\n<p>연속 메모리 할당</p>\n<ul>\n<li>고정 분할 방식 Fixed Allocation </li>\n<li>가변 분할 방식 Variable Allocation</li>\n</ul>\n</li>\n<li>\n<p>비연속 메모리 할당 </p>\n<ul>\n<li>세그멘테이션 Segmentation</li>\n<li>페이징 Paging</li>\n</ul>\n<p>---continue---</p>\n<ul>\n<li>페이징/세그멘테이션 혼합</li>\n<li>페이지 요구 Demand Paging </li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1 id=\"연속-할당-방식\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EC%86%8D-%ED%95%A0%EB%8B%B9-%EB%B0%A9%EC%8B%9D\" aria-label=\"연속 할당 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연속 할당 방식</h1>\n<p>하나의 프로그램이 실행되는 메모리 순서를 연속적으로 물리 메모리에 할당하는 방법</p>\n<h3 id=\"고정-분할-방식\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EC%A0%95-%EB%B6%84%ED%95%A0-%EB%B0%A9%EC%8B%9D\" aria-label=\"고정 분할 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고정 분할 방식</h3>\n<p>물리적 메모리를 몇 개의 영구적인 분할로 나누어 각각의 영역에 프로그램을 적재시킨다. </p>\n<p>심각한 내부 단편화가 발생할 수 있다.<br>\n예를 들어 256MB의 메모리를 32MB씩 분할한다면, 2MB의 메모리만이 필요한 프로그램이 실행되는 경우 30MB의 내부 단편화가 발생한다.<br>\n(보통은 다양한 크기의 프로그램을 실행하기 위해 메모리를 다양한 크기로 분할한다.)</p>\n<h3 id=\"가변-분할-방식\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EB%B3%80-%EB%B6%84%ED%95%A0-%EB%B0%A9%EC%8B%9D\" aria-label=\"가변 분할 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가변 분할 방식</h3>\n<p>프로그램이 실행/종료되는 시점마다 프로그램 크기에 맞는 메모리를 할당/해제하는 방식.</p>\n<p>첫 할당 이후 메모리 위치를 재정리할 수 없으므로, 다양한 크기의 프로그램에 대해 메모리 할당/해제를 반복하다 보면 아래와 같이 외부 단편화가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">-----------------------------------------------------\n| running(120MB) | empty(20MB) | running(8MB) | ...</code></pre></div>\n<hr>\n<h1 id=\"비연속-할당-방식\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%97%B0%EC%86%8D-%ED%95%A0%EB%8B%B9-%EB%B0%A9%EC%8B%9D\" aria-label=\"비연속 할당 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비연속 할당 방식</h1>\n<p>프로그램의 메모리 할당 요청을 비연속적으로 메모리에 할당하는 방식. swap space를 사용하는 가상화 기법이 활용된다.</p>\n<h3 id=\"세그먼트-\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EA%B7%B8%EB%A8%BC%ED%8A%B8-\" aria-label=\"세그먼트  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세그먼트 :</h3>\n<p>메모리를 나누는 단위.</p>\n<p>세그먼트: 프로세스 크기에 따라 가변 크기를 갖는 <strong>물리 메모리 분할 단위</strong> </p>\n<hr>\n<h3 id=\"페이지--프레임\" style=\"position:relative;\"><a href=\"#%ED%8E%98%EC%9D%B4%EC%A7%80--%ED%94%84%EB%A0%88%EC%9E%84\" aria-label=\"페이지  프레임 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>페이지 / 프레임</h3>\n<p>페이지 : 고정 크기로 <strong>가상 메모리를 분할하는 단위</strong>  </p>\n<p>프레임 : 페이지와 1:1로 매핑되는 <strong>물리 메모리 분할 단위</strong>  </p>\n<p>페이지와 프레임은 페이지 테이블을 매개로 연결된다. </p>\n<p>따라서, 프로세스가 page(N)을 가지고있을 경우, OS는 가상주소 N에 데이터를 요청하고, 가상주소 N은 페이지 테이블의 정보를 통해 물리 주소인 frame(K)에 접근한다. 이 때, frame(k)주소가 존재하지 않을 경우, swap space(주로 보조 기억장치)에서 데이터를 가져온다. 이는 page fault라고 불리며, 이는 성능 저하를 일으키기도 하며 segmentation-paging 기법에서 Thrashing 등을 일으켜 심각한 성능 저하를 내기도 한다.</p>\n<hr>\n<h3 id=\"페이지-테이블--페이징-기법\" style=\"position:relative;\"><a href=\"#%ED%8E%98%EC%9D%B4%EC%A7%80-%ED%85%8C%EC%9D%B4%EB%B8%94--%ED%8E%98%EC%9D%B4%EC%A7%95-%EA%B8%B0%EB%B2%95\" aria-label=\"페이지 테이블  페이징 기법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>페이지 테이블 / 페이징 기법</h3>\n<p><strong>페이징 기법</strong> : 가상 메모리를 <strong>고정 크기</strong>로 분할한 페이지를 통해 메모리를 관리하는 방식.<br>\n만약 프로세스가 페이지의 크기보다 적은 메모리를 필요로 하는 경우, <strong>내부 단편화((페이지)내부의 메모리 일부가 사용되지 않아 낭비되는 현상)</strong>가 발생한다.</p>\n<p>(페이지의 크기 :프로세스의 크키가 커지면서 4KB > 4MB까지 크기가 커짐.)</p>\n<p>LRU, FIFO, LFU, NUR등의 페이지 교체 알고리즘을 통해 물리 메모리를 관리.</p>\n<p><strong>페이지 테이블</strong> : 페이지와 프레임의 매칭 정보를 담고있는 테이블.</p>\n<p>프로세스가 가상 메모리(page)의 정보를 hit할때 실제 물리 메모리 주소(frame)로 변환하는 역할을 수행한다.</p>\n<p>페이지의 크기가 커지면 아래와 같은 변화가 생긴다.</p>\n<ul>\n<li>내부 단편화가 증가한다.</li>\n<li>Page fault(페이지 요청 실패)가 감소한다.</li>\n<li>\n<p>페이지 테이블의 크기가 감소한다. </p>\n<ul>\n<li>(TMI)페이지 테이블 비례 : 전체 메모리 사이즈 /  페이지 크기</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"세그멘테이션-테이블-세그멘테이션-기법\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EA%B7%B8%EB%A9%98%ED%85%8C%EC%9D%B4%EC%85%98-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%84%B8%EA%B7%B8%EB%A9%98%ED%85%8C%EC%9D%B4%EC%85%98-%EA%B8%B0%EB%B2%95\" aria-label=\"세그멘테이션 테이블 세그멘테이션 기법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세그멘테이션 테이블 /세그멘테이션 기법</h3>\n<p><strong>세그멘테이션 기법</strong> : 하나의 프로세스가 사용하는 메모리의 크기 단위로 가상 주소를 관리하는 기법.</p>\n<p>프로세스별로 요구하는 메모리가 다르므로, 세그먼트의 크기는 가변적이다.</p>\n<p>세그멘테이션 테이블 : </p>\n<ul>\n<li>물리 메모리에서 세그먼트의 <strong>start address</strong></li>\n<li>가변적인 세그먼트의 크기를 나타내는 <strong>limit</strong></li>\n</ul>\n<p>위 두 가지를 보관하고 있는 자료구조이다.</p>\n<hr>\n<h3 id=\"세그멘테이션-페이징-혼합-기법\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EA%B7%B8%EB%A9%98%ED%85%8C%EC%9D%B4%EC%85%98-%ED%8E%98%EC%9D%B4%EC%A7%95-%ED%98%BC%ED%95%A9-%EA%B8%B0%EB%B2%95\" aria-label=\"세그멘테이션 페이징 혼합 기법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세그멘테이션-페이징 혼합 기법</h3>\n<p>.</p>\n<h3 id=\"pcb-process-control-block\" style=\"position:relative;\"><a href=\"#pcb-process-control-block\" aria-label=\"pcb process control block permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PCB: Process Control Block</h3>\n<p>프로세스 생성 시 커널 스택만들어지는 자료구조 : Status / Pointer(addr)/ Identifier / PC / Priority 등을 저장한다.\n<img src=\"https://t1.daumcdn.net/cfile/tistory/995A6E395A5E0DAF18\" alt=\"PCB\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">/</th>\n<th align=\"center\">연속 메모리 할당</th>\n<th align=\"center\">가상화(swap)</th>\n<th align=\"center\">관리 테이블</th>\n<th align=\"center\">단편화</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">고정 분할 방식</td>\n<td align=\"center\">X</td>\n<td align=\"center\">X</td>\n<td align=\"center\">-</td>\n<td align=\"center\">내부 단편화</td>\n</tr>\n<tr>\n<td align=\"left\">가변 분할 방식</td>\n<td align=\"center\">X</td>\n<td align=\"center\">X</td>\n<td align=\"center\">-</td>\n<td align=\"center\">외부 단편화</td>\n</tr>\n<tr>\n<td align=\"left\">페이징 기법</td>\n<td align=\"center\">O</td>\n<td align=\"center\">O</td>\n<td align=\"center\">페이지테이블</td>\n<td align=\"center\">페이지 내부 단편화</td>\n</tr>\n<tr>\n<td align=\"left\">세그멘테이션 기법</td>\n<td align=\"center\">O</td>\n<td align=\"center\">O</td>\n<td align=\"center\">세그먼테이션 테이블</td>\n<td align=\"center\">세그멘테이션 외부 단편화</td>\n</tr>\n</tbody>\n</table>","fields":{"slug":"continue-os-메모리파트-정리"},"frontmatter":{"title":"[Continue,OS] 메모리파트 정리","date":"24.05.2020","category":"OS","tags":null,"banner":null},"timeToRead":4}},"pageContext":{"slug":"continue-os-메모리파트-정리","prev":{"excerpt":"Intro 오늘 소개할 주제는 webhook 입니다. 서비스를 배포하거나 관련 공부를 해보셨다면, github과 Jenkins같은 CI도구를 연동하며 github에서 푸쉬를 비롯한 특정 이벤트를 jenkins로 전달해주기 위해 연동해본 경험이 있습니다. 이때 github서버는 Jenkins가 별다른 요청을 하지 않아도 서버 내에서 특정 이벤트가 일어났을 때 Jenkins…","html":"<h1 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h1>\n<p>오늘 소개할 주제는 <strong>webhook</strong> 입니다.</p>\n<p>서비스를 배포하거나 관련 공부를 해보셨다면,<br>\ngithub과 Jenkins같은 CI도구를 연동하며 github에서 푸쉬를 비롯한 특정 이벤트를 jenkins로 전달해주기 위해 연동해본 경험이 있습니다.</p>\n<p>이때 github서버는 Jenkins가 별다른 요청을 하지 않아도 서버 내에서 특정 이벤트가 일어났을 때 Jenkins로 관련 정보들을 보내줍니다.<br>\n이것은 \"웹훅\"이라고 불리는 과정인데요, 일반적으로 클라이언트가 서버에게 정보 또는 행위를 요청하는 방식과는 다릅니다.</p>\n<p>오늘은 위에서 설명한 웹훅이 어떻게 가능한지 간단하게 공부하려합니다.</p>\n<hr>\n<p>클라이언트에서 서버의 자원을 이용하기 위해, 또는 서버를 동작하기 위한 인터페이스로 Web API를 사용합니다.</p>\n<p>이와 반대로 <strong>역방향 API, 서버에서 발생하는 이벤트를 처리하기 위해 Webhook을 사용한다는 것을 알게되었습니다.</strong></p>\n<p>웹 API를 통해 클라이언트의 요청을 처리하는 방식은 일상적인 방법이기에 무리없이 관련 동작을 이해하고 개발에 사용했지만,<br>\n서버에서 발생하는 이벤트를 클라이언트로 전달하는 과정은 쉽사리 이해되지 않았습니다.<br>\n또한 순수하게 이것이 어떤 원리로 가능한지 궁금하기도 했습니다.</p>\n<h1 id=\"principle\" style=\"position:relative;\"><a href=\"#principle\" aria-label=\"principle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Principle</h1>\n<p>핵심적인 원리에 접근하는것은 어렵지 않았습니다.</p>\n<p>webhook은 언제부턴가 익숙한 개념이 되어있었고, RFC문서가 존재할것이라 생각해서 <a href=\"https://tools.ietf.org/html/rfc8030\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">rfc webhook</a>으로 검색한 결과 HTTP/2.0 부터 지원하는 <strong>Web push</strong>스펙을 확인할수 있었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">    +-------+           +--------------+       +-------------+\n    <span class=\"token operator\">|</span>  UA   <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> Push Service <span class=\"token operator\">|</span>       <span class=\"token operator\">|</span> Application <span class=\"token operator\">|</span>\n    +-------+           +--------------+       <span class=\"token operator\">|</span>   Server    <span class=\"token operator\">|</span>\n        <span class=\"token operator\">|</span>                      <span class=\"token operator\">|</span>               +-------------+\n        <span class=\"token operator\">|</span>      Subscribe       <span class=\"token operator\">|</span>                      <span class=\"token operator\">|</span>\n        <span class=\"token operator\">|</span>---------------------<span class=\"token operator\">>|</span>                      <span class=\"token operator\">|</span>\n        <span class=\"token operator\">|</span>       Monitor        <span class=\"token operator\">|</span>                      <span class=\"token operator\">|</span>\n        <span class=\"token operator\">|</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">>|</span>                      <span class=\"token operator\">|</span>\n        <span class=\"token operator\">|</span>                      <span class=\"token operator\">|</span>                      <span class=\"token operator\">|</span>\n        <span class=\"token operator\">|</span>          Distribute Push Resource           <span class=\"token operator\">|</span>\n        <span class=\"token operator\">|</span>--------------------------------------------<span class=\"token operator\">>|</span>\n        <span class=\"token operator\">|</span>                      <span class=\"token operator\">|</span>                      <span class=\"token operator\">|</span>\n        <span class=\"token builtin class-name\">:</span>                      <span class=\"token builtin class-name\">:</span>                      <span class=\"token builtin class-name\">:</span>\n        <span class=\"token operator\">|</span>                      <span class=\"token operator\">|</span>     Push Message     <span class=\"token operator\">|</span>\n        <span class=\"token operator\">|</span>    Push Message      <span class=\"token operator\">|</span><span class=\"token operator\">&lt;</span>---------------------<span class=\"token operator\">|</span>\n        <span class=\"token operator\">|</span><span class=\"token operator\">&lt;</span>---------------------<span class=\"token operator\">|</span>                      <span class=\"token operator\">|</span>\n        <span class=\"token operator\">|</span>                      <span class=\"token operator\">|</span>                      <span class=\"token operator\">|</span>\n\n                      Figure <span class=\"token number\">1</span>: WebPush Architecture</code></pre></div>\n<p>RFC 8030에 소개된 overview에 소개된 webpush의 구조입니다. (UA: user agent)</p>\n<p>사실 이 그림을 보자마자 웹훅을 위한 Push service가 따로 존재하는구나! Push sevice가 메시지 브로커 역할을 하는군! 이라고 이해하시면 웹훅을 사용할때 큰 문제가 없습니다.</p>\n<p>발행/구독 구조에서 확인할 수 있는 push, monitor, message를 이해하신다면</p>\n<p>Subscriber : UA (user agent)<br>\nPublisher : Application Server<br>\nBroker : <strong>Push Service</strong></p>\n<p>라고 생각하시면 됩니다.</p>\n<p>이는 아래와 같이 동작합니다.</p>\n<ol>\n<li>UA가 Application Server의 push service를 구독하고, push service를 모니터링합니다.</li>\n<li>이후 Application Server에서 UA가 원하는 동작이 발생하고 trigger를 통해 이벤트 메서드를 호출합니다.</li>\n<li>Application server는 발생한 Action에 대한 정보를 담은 메시지를 Push service에 전달하고,</li>\n<li>Push service는 구독 정보를 참조해 관련있는 Subscripbers에게 메시지들을 전달합니다.</li>\n</ol>\n<img src=\"https://www.researchgate.net/profile/Ashwin_Makwana/publication/301350598/figure/fig1/AS:352171422961666@1460975618330/Publish-Subscribe-Model.png\"/>\n<p>&#x3C;그림: 발행/구독 모델></p>\n<hr>\n<h3 id=\"features\" style=\"position:relative;\"><a href=\"#features\" aria-label=\"features permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Features</h3>\n<p>발행/구독구조의 특징과 함께 Webpush에 존재하는 몇가지 특징이 있습니다.</p>\n<p>User Agent(이하 UA)가 구독을 시작하며 Webpush 시나리오가 시작됩니다.<br>\n구독은 UA와 Push server, Application server간 연결을 뜻하며, HTTPS(port:443)위에서만 동작합니다.</p>\n<p>구독과 관련된 정보는 push service에 저장되며, 이 정보를 UA와 Application server가 각각 사용합니다.</p>\n<hr>\n<p><em>실제 API 문서와 RFC의 overview에 소개된 내용을 위주로 특징들을 리스트해보았습니다.</em></p>\n<ul>\n<li>UA는 모든 incomming messages를 모니터링하기 위해 구독정보를 사용합니다.</li>\n<li>Application server는 trigger가 발생한 Action 관련 정보들을 push service에게 던지는 과정을 위해 구독 정보를 사용합니다.</li>\n<li>\n<p>Push API는 클라이언트와 서버 간 비동기적 통신을 지원합니다</p>\n<ul>\n<li>Push service는 UA가 비활성 상태이더라도 메시지를 전달하기 위해 활성상태가 될때까지 메시지를 저장합니다.</li>\n<li>마찬가지로 Push service는 Application Server가 비활성 상태이더라도 저장된 Push message를 UA에게 전달합니다</li>\n<li>(WebPush API의 이러한 특징과 Notification API를 이용해 Chrome에서는 알림 API를 지원합니다!)</li>\n</ul>\n</li>\n<li>UA와 Application server가 통신중일때도 push service는 동작합니다.<br>\n하지만 fetch, websocket등의 직접통신 API들에 비해 리소스가 많이 소요되고 지연현상이 많아 UA와 Application server가 활성연결 상태가 아닐 때 사용하는것을 권장하고 있습니다.</li>\n</ul>\n<h1 id=\"ending\" style=\"position:relative;\"><a href=\"#ending\" aria-label=\"ending permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ending</h1>\n<p>W3C의 API 스펙과 RFC8030의 Overview탭을 위주로 작성했습니다.</p>\n<p>설명한 특징 이외에도 다양한 동작 시나리오 / 특징들이 있습니다.<br>\n아래 그림에서는 User Agent를 webpage와 service worker까지 추가해서 설명하고있습니다.</p>\n<p>저처럼 WebPush에 대한 호기심이 생기셨다면, 추가로 읽어보시는것도 추천드립니다..!</p>\n<img src=\"https://www.w3.org/TR/push-api/sequence_diagram.png\" />\n<p>&#x3C;그림 Webpush API 메서드 동작 시나리오 (WC3)></p>\n<h1 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h1>\n<p><a href=\"https://medium.com/@shlee1353/http1-1-vs-http2-0-%EC%B0%A8%EC%9D%B4%EC%A0%90-%EA%B0%84%EB%8B%A8%ED%9E%88-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0-5727b7499b78\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http1,2 차이점</a></p>\n<p><a href=\"https://tools.ietf.org/html/rfc8030\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RFC8030 Web push</a></p>\n<p><a href=\"https://www.w3.org/TR/push-api/#application-server\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">W3C Webpush API spec</a></p>","id":"88e0f9d3-3d0f-51b3-b74c-15c05d23c3d4","fields":{"slug":"웹훅-webhook-이-뭐야-http-2-0-webpush-스펙-요약"},"frontmatter":{"date":"2020-05-10","title":"웹훅 (webhook)이 뭐야?, HTTP/2.0 Webpush 스펙 요약","category":"http","tags":null,"banner":null},"timeToRead":3},"next":{"excerpt":"회고는 항상 연말에 쓰거나 월말에 혼자 끄적였던 것 같다. 고민해야 할 중요한 문제가 많았으면 최대한 그 느낌이 날아가기 전에 쓰는게 좋은 것 같다. 이번 회고에서는 어떤 갈림길이 있었고 나는 여기서 어떤 선택을 했었는지만 간단히 돌아보려 한다. 즉, 어떤 일이 있었고, 원하는 것은 꾸준히 했는지, 뭐 하고싶은지 끄적이려 한다. 어떤 일들이 있었나? 1~…","html":"<p>회고는 항상 연말에 쓰거나 월말에 혼자 끄적였던 것 같다.<br>\n고민해야 할 중요한 문제가 많았으면 최대한 그 느낌이 날아가기 전에 쓰는게 좋은 것 같다.</p>\n<p>이번 회고에서는 어떤 갈림길이 있었고 나는 여기서 어떤 선택을 했었는지만 간단히 돌아보려 한다.</p>\n<p>즉, 어떤 일이 있었고, 원하는 것은 꾸준히 했는지, 뭐 하고싶은지 끄적이려 한다.</p>\n<h2 id=\"어떤-일들이-있었나\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%96%A4-%EC%9D%BC%EB%93%A4%EC%9D%B4-%EC%9E%88%EC%97%88%EB%82%98\" aria-label=\"어떤 일들이 있었나 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어떤 일들이 있었나?</h2>\n<p>1~ 2월<br>\n연구실에서 잠깐 나와 경기도 성남 소재 기업에서 개발자로 인턴을 시작했다.<br>\n피아노를 시작했고 글또라는 글쓰기 모임에 조인했다.</p>\n<p>3월<br>\nNode를 처음 시작했고 React에서는 Redux/saga 등 처음 사용하는 라이브러리를 많이 익혔다.<br>\n개발병 TO배정이 불안정해져 군대 문제가 다시 큰 비중을 차지했다.</p>\n<p>5월<br>\n정보처리기사를 준비하기 시작했다.<br>\n공모전을 준비하고있고, 회사로부터 정직원 제의를 받았다.</p>\n<h2 id=\"인턴생활-시작\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B4%EC%83%9D%ED%99%9C-%EC%8B%9C%EC%9E%91\" aria-label=\"인턴생활 시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인턴생활 시작</h2>\n<p>채울 학점이 얼마 남지 않아 편하게 다닐 계획이었던 4학년 1학기에 개발팀 인턴이라는 좋은 기회가 생겼다.</p>\n<p>새로운 환경에 적응하면서 새로운 기술을 공부하는것은 당연히 힘든 일이지만, 코로나로 인해 어수선한 학교를 보니 잠깐 떠나서 다른 세상에서 살아가는 것도 좋은 선택이었던 것 같다.</p>\n<p>특히 팀과 회사가 어떤 프로세스로 돌아가는지 경험하는 것은 정말 귀중한 경험이었다.</p>\n<h2 id=\"작년에-배포한-vscode앱-리뉴얼---junit-testfile-generator\" style=\"position:relative;\"><a href=\"#%EC%9E%91%EB%85%84%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%9C-vscode%EC%95%B1-%EB%A6%AC%EB%89%B4%EC%96%BC---junit-testfile-generator\" aria-label=\"작년에 배포한 vscode앱 리뉴얼   junit testfile generator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>작년에 배포한 vscode앱 리뉴얼 - Junit Testfile Generator</h2>\n<img src=\"/assets/img/etc/junitgen.JPG\">\n<p>내가 불편해서 만든 앱인데, 사용자가 1000명이 넘었다. (재설치, 업데이트를 제외하고 순수한 1000회 설치!)<br>\nJava 개발자들이 조금씩 인텔리제이나 이클립스 대신 VSCode를 사용하게 되면서, VSCode에 없는 인텔리제이,이클립스 기능을 찾기 시작했다. (나도 그랬고..)</p>\n<p>특히 나는 테스트파일을 만들기 위해 src아래의 tree level을 똑같이 test 아래에 만들어야 하는게 불편했다.<br>\n어쨋든 이런 기류에 편승해서 1000명이나 되는 사용자가 생긴게 아닌가 싶다.</p>\n<p>만들고 1~2달정도 사용한 뒤로 정작 나는 자바 개발이 뜸해져 내 맘속에선 잊혀졌는데,<br>\n다른 개발자분들이 내가 만든 앱을 사용하면서 Issue/email을 통해 불편한점이나 개선사항을 알려주셔서 나도 이 앱에 대한 책임감(?)이 계속 리마인드됐다.</p>\n<p>여기서 Junit 뿐만 아니라 다양한 테스트 프레임워크/라이브러리들의 test stub을 편리하게 만들어주면 좋을것같다는 생각이 들어 리뉴얼을 결심했다.<br>\n같은 VSCode Extension gitignore generator에 영감을 받았다.</p>\n<p>그래서 4월 말 경 앱을 다시 만들어야겠다고 결심하고, 5월에는 못했고, 6월에는 시간이 날때마다 진행할 생각이다.</p>\n<h2 id=\"정보처리기사필기-후기\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC%ED%95%84%EA%B8%B0-%ED%9B%84%EA%B8%B0\" aria-label=\"정보처리기사필기 후기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정보처리기사(필기) 후기</h2>\n<p>두번 미뤄지고 우여곡절 끝에 정처기 필기시험에 응시했다. 코로나로 인해 1,2회차가 통합 시행돼 이번년도에 기회가 한번 줄었다는 생각이 들었다.</p>\n<p>사실 컴공에서 기사시험(필기)의 위상은 리눅스마스터 2급정도 되는데, 2020년 1회차부터 전면 개편된다 했고,<br>\n난이도가 높을것이라는 이야기가 돌았다.<br>\n필기는 공부 안하고, 실기는 2주정도 하는 형들이 많았는데,<br>\n이번 시험은 필기를 한달 전부터 공부하는분들도 보였다.</p>\n<p>나는 회사에 다니면서 하느라 1주일정도 출/퇴근시간 지하철에서, 퇴근후 시간에, 시험 전날에 반차내고 열심히 공부했다.<br>\n열심히라는 단어를 쓰긴 했는데, \"1주일\"과 \"열심히\"라는 단어가 같이있는게 참 어색하다.</p>\n<p>난이도가 높을거라는 얘기때문에 합격하기 힘들것같다는 생각을 하고, 합격하면 실기 공부 진짜 열심히할거라고 기도하면서 봤는데 막상 시험이 그렇게 어렵지는 않았다.</p>\n<p>1회차라 난이도 조절을 해준것 같았고, 가채점 결과 매우 여유롭게 합격했다. 실기 진짜 열심히 공부해야지..</p>\n<h2 id=\"병역문제가-다시-걱정의-많은-비중을-차지했다\" style=\"position:relative;\"><a href=\"#%EB%B3%91%EC%97%AD%EB%AC%B8%EC%A0%9C%EA%B0%80-%EB%8B%A4%EC%8B%9C-%EA%B1%B1%EC%A0%95%EC%9D%98-%EB%A7%8E%EC%9D%80-%EB%B9%84%EC%A4%91%EC%9D%84-%EC%B0%A8%EC%A7%80%ED%96%88%EB%8B%A4\" aria-label=\"병역문제가 다시 걱정의 많은 비중을 차지했다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>병역문제가 다시 걱정의 많은 비중을 차지했다.</h2>\n<ul>\n<li>개발병을 준비하려했으나, 모집 TO가 전국 1명, 절망적으로 감소해 전의를 상실했다.</li>\n<li>산업기능요원을 준비해야한다. 하지만 마찬가지로 TO가 절망적이다.</li>\n<li>대학원 진학이 진로 후보에 올라왔지만, 적극적으로 알아보고있지 않다.</li>\n</ul>\n<p>아....모르겠다....</p>\n<h3 id=\"대학원\" style=\"position:relative;\"><a href=\"#%EB%8C%80%ED%95%99%EC%9B%90\" aria-label=\"대학원 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대학원?</h3>\n<p>연구실에서는 항상 적극적인 스탠스를 취해왔다. 연구가 재능에 맞을지는 모르지만, 관심이 있었던것은 사실이다.<br>\n하지만 병역이라는 커다란 일정이 뒤로 더 미뤄지면서, 도피성으로 올라온 선택지인지 자연스레 생각난 길인지 나도 헷갈린다.</p>\n<p>도피성으로 올라온 선택지라면 서울권 괜찮은 연구실에서 적당히 열심히 하면 되겠지만, 그러기에는 내 돈,시간이나 기회비용에 아쉬운 기분이 든다.</p>\n<h3 id=\"대학원-하니까-생각났는데\" style=\"position:relative;\"><a href=\"#%EB%8C%80%ED%95%99%EC%9B%90-%ED%95%98%EB%8B%88%EA%B9%8C-%EC%83%9D%EA%B0%81%EB%82%AC%EB%8A%94%EB%8D%B0\" aria-label=\"대학원 하니까 생각났는데 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대학원 하니까 생각났는데...</h3>\n<p>작년 여름에 교수님께서 작성하는 연구 논문의 아이디어를 구현했는데, 이제야 그 논문이 억셉되어 곧 출판된다고 한다. 저자는 아니고 컨트리뷰터로 이름이 올라갔지만 정말 뿌듯하고 신기했다.</p>\n<p>한편으론 10개월 전에 작업한것이 이제야 올라갔다는걸 듣고, 나는 작업 결과물이 바로바로 나와야 동기를 얻는 스타일인데, 연구하는게 과연 내 적성에 맞을까도 생각해봤다.</p>\n<h3 id=\"계획을-돌아보면서\" style=\"position:relative;\"><a href=\"#%EA%B3%84%ED%9A%8D%EC%9D%84-%EB%8F%8C%EC%95%84%EB%B3%B4%EB%A9%B4%EC%84%9C\" aria-label=\"계획을 돌아보면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계획을 돌아보면서..</h3>\n<p>2019년 하반기에는 목표가 불분명했지만, 앞에 놓여진 일을 열심히 해서인지 몇가지 일에 대해서는 꽤 만족스러운 결과를 만들어낸 시기였다.<br>\n하지만 그것과 별개로 진로에 대해 막연하게 생각했던 부분이 지금와서 발목을 세게 잡고있는듯 하다.</p>\n<p>2020년 상반기는 작년에 계획한것들에서 많이 엇나갔지만, 전혀 상상도 못한 일상을 보내고 있다.<br>\n미래의 계획을 세우는것은 그 때의 상황이나 기분을 파악하지 않은 계획이기때문에 오래전에 세운 게획대로 살아가는건 힘들다.<br>\n앞으로 회고에서는 과거의 행적을 돌아보고 행적에 대한 계획보다는 방향, 단기간 목표를 설정해야겠다.</p>\n<h3 id=\"계획은-힘들지만-진로는-설정해야하는데\" style=\"position:relative;\"><a href=\"#%EA%B3%84%ED%9A%8D%EC%9D%80-%ED%9E%98%EB%93%A4%EC%A7%80%EB%A7%8C-%EC%A7%84%EB%A1%9C%EB%8A%94-%EC%84%A4%EC%A0%95%ED%95%B4%EC%95%BC%ED%95%98%EB%8A%94%EB%8D%B0\" aria-label=\"계획은 힘들지만 진로는 설정해야하는데 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계획은 힘들지만 진로는 설정해야하는데..</h3>\n<p>사실 대학원도 매력적인 선택이다. 회사에 남아서 깊이와 넓은 시야를 갖는것도 매력적인 선택이다. 군대만 아니면 행복한 고민을 했겠지만, 고민을 하는 내내 군대 문제가 내 옆구리를 가시처럼 쿡쿡 찔러댔다.</p>\n<p>대학원에 바로 지원할 수도 있지만 그렇게 하기 싫었다.<br>\n기본적으로는 정보가 없고, 적성에 대한 확신도 없었고, 무엇보다 도피성이 아닌가 하는 생각이 강하게 들어서였다.</p>\n<p>일단 회사에 남아 일을 더 해보려고 한다.</p>\n<p>하지만 이대로 퇴근 후 널브려져있는 내 모습은 참기 힘들다..</p>\n<p>최대 7개월동안 내 목표를 설정해봤다.</p>\n<ul>\n<li>Apache TLP 컨트리뷰션</li>\n<li>피아노 레슨 꾸준히 받기</li>\n<li>영어책 1권 익숙해지기</li>\n</ul>\n<p>요새 매일 출근해서 퇴근할때까지 일하는만큼은 학교에서도 하고싶다.</p>","id":"964e86bc-333f-528f-b84a-1680c98c4978","fields":{"slug":"2020-상반기-회고"},"frontmatter":{"date":"2020-06-07","title":"2020 상반기 회고","category":"회고","tags":null,"banner":null},"timeToRead":5}}},"staticQueryHashes":["3824141623"]}