{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/spring-boot-토막글-spring-boot-프로젝트에서-여러개의-설정파일-추가/","result":{"data":{"markdownRemark":{"html":"<p>스프링에서 API Key 또는 비밀스러운 정보를 따로 관리해야 할 때(에를 들어 public git 시스템에 푸쉬), 역할에 따른 설정파일이 필요할 때는 application.yml 이외의 설정파일을 추가해야합니다.</p>\n<p>이 떄, 스프링 부트에서 설정파일을 나누는 방법으로, 별도의 설정 없이 ***.yml파일 추가 후, 아래 코드와 같이 실행파일의 경로를 등록해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootApplication</span>\r\n<span class=\"token annotation punctuation\">@EnableGlobalMethodSecurity</span><span class=\"token punctuation\">(</span>securedEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JclipProtoApplication</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">APPLICATION</span><span class=\"token operator\">=</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"token string\">\"spring.config.location=\"</span><span class=\"token operator\">+</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"token string\">\"classpath:/application.yml,\"</span><span class=\"token operator\">+</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"token string\">\"classpath:/private.yml\"</span><span class=\"token punctuation\">;</span>\r\n\r\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">SpringApplicationBuilder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JclipProtoApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">properties</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APPLICATION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\r\n<span class=\"token comment\">//\t\tSpringApplication.run(JclipProtoApplication.class, args);</span>\r\n\t<span class=\"token punctuation\">}</span></code></pre></div>","fields":{"slug":"spring-boot-토막글-spring-boot-프로젝트에서-여러개의-설정파일-추가"},"frontmatter":{"title":"[Spring Boot,토막글] Spring boot 프로젝트에서 여러개의 설정파일 추가","date":"13.11.2019","category":"spring","tags":null,"banner":null},"timeToRead":1}},"pageContext":{"slug":"spring-boot-토막글-spring-boot-프로젝트에서-여러개의-설정파일-추가","prev":{"excerpt":"간단한 기록용 포스트 공통적으로, Route - path와 component 속성으로 설명해보자. exact path와 일치하는 component를 보여준다. 즉, 위의 경우 url상에서 루트 경로일 때, Home 컴포넌트를 보여주는 것. 즉, Route는 의미적(Semantic)인 컴포넌트이고, URL의 정보를 참조해서 뷰를 보여주는 역할을 수행한다. (이 때, exact path가 아니라 path만을 사용한다면, path=\"/about…","html":"<blockquote>\n<p>간단한 기록용 포스트</p>\n</blockquote>\n<p>공통적으로,</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Router<span class=\"token punctuation\">,</span> Link <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"route---path와-component-속성으로-설명해보자\" style=\"position:relative;\"><a href=\"#route---path%EC%99%80-component-%EC%86%8D%EC%84%B1%EC%9C%BC%EB%A1%9C-%EC%84%A4%EB%AA%85%ED%95%B4%EB%B3%B4%EC%9E%90\" aria-label=\"route   path와 component 속성으로 설명해보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Route - path와 component 속성으로 설명해보자.</h3>\n<p>exact path와 일치하는 component를 보여준다. 즉,</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Route</span> <span class=\"token attr-name\">exact</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{Home}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>위의 경우 url상에서 루트 경로일 때, Home 컴포넌트를 보여주는 것.</p>\n<p>즉, Route는 의미적(Semantic)인 컴포넌트이고, URL의 정보를 참조해서 뷰를 보여주는 역할을 수행한다.</p>\n<p>(이 때, exact path가 아니라 path만을 사용한다면, path=\"/about\" 인 설정의 경우, path=\"/\" 과 path=\"/about\"의 라우트까지 모두 보여준다.<br>\n즉, exact하지 않는 매칭을 한다)</p>\n<h3 id=\"parameter\" style=\"position:relative;\"><a href=\"#parameter\" aria-label=\"parameter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parameter</h3>\n<p>parameter는 url path 뒤에 콜론(:)을 붙여 입력받는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">import {Router} from 'react-router-dom'; ...\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Route</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/about/:name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{About}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>(전달예시)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://localhost:3000/about/mklee</code></pre></div>\n<p>위의 경우, 'mklee'가 About 컴포넌트에 파라미터로 사용한다.</p>\n<p>이 때, About의 컴포넌트는 <strong>const name=match.params.name</strong> 과 같이 해당 값을 사용한다</p>\n<h3 id=\"link-컴포넌트를-통해-새로고침-없는-router이동\" style=\"position:relative;\"><a href=\"#link-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-%ED%86%B5%ED%95%B4-%EC%83%88%EB%A1%9C%EA%B3%A0%EC%B9%A8-%EC%97%86%EB%8A%94-router%EC%9D%B4%EB%8F%99\" aria-label=\"link 컴포넌트를 통해 새로고침 없는 router이동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Link 컴포넌트를 통해 새로고침 없는 Router이동</h3>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">import {Link} from 'react-router-dom'\r\n...\r\n\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/about<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> About <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Link</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>a 태그를 통해 URL을 변경시키고 이동할 수도 있지만, 새로고침 없이 Link 컴포넌트를 통해 새로고침 없는 페이지전환이 가능하다.</p>","id":"62df6e67-9f73-5fae-be02-c9482e6e68be","fields":{"slug":"react-react-라우트-기초-사용법"},"frontmatter":{"date":"2019-09-12","title":"[React] React 라우트 기초 사용법","category":"howto","tags":["howto"],"banner":null},"timeToRead":1},"next":{"excerpt":"젠킨스 서버에서 CI된 결과물을 원격 서버에 CD하기. 선결조건 젠킨스 구동 중 CI(빌드) 세팅 완료 원리 publish over ssh 플러그인 사용 scp를 통해 배포파일 (spring의 경우는 **.jar) 전송 ssh를 통해 배포파일 실행(서버 가동스크립트) Jenkins on use -1 : 사전  설정 (원격지 등록) Jenkins > Jenkins관리 > 시스템 설정화면 아래쪽 publish over ssh 탭 작성 Key…","html":"<p>젠킨스 서버에서 CI된 결과물을 원격 서버에 CD하기.</p>\n<p>선결조건</p>\n<ul>\n<li>젠킨스 구동 중</li>\n<li>CI(빌드) 세팅 완료</li>\n</ul>\n<p>원리</p>\n<ul>\n<li>publish over ssh 플러그인 사용</li>\n<li>scp를 통해 배포파일 (spring의 경우는 **.jar) 전송</li>\n<li>ssh를 통해 배포파일 실행(서버 가동스크립트)</li>\n</ul>\n<h3 id=\"jenkins-on-use--1--사전--설정-원격지-등록\" style=\"position:relative;\"><a href=\"#jenkins-on-use--1--%EC%82%AC%EC%A0%84--%EC%84%A4%EC%A0%95-%EC%9B%90%EA%B2%A9%EC%A7%80-%EB%93%B1%EB%A1%9D\" aria-label=\"jenkins on use  1  사전  설정 원격지 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins on use -1 : 사전  설정 (원격지 등록)</h3>\n<ul>\n<li><strong>Jenkins > Jenkins관리 > 시스템 설정화면</strong></li>\n</ul>\n<img src=\"/assets/img/jenkins/jenkins_001.PNG\">\n<p><em>아래쪽 publish over ssh 탭 작성</em></p>\n<p>Key 탭 - 원격지에 접근하기 위한 키 작성</p>\n<p>SSH Servers탭 - 배포파일을 전송할 원격지</p>\n<ul>\n<li>Name - 구분을 위한 이름</li>\n<li>hostname - 호스트 주소</li>\n<li>username - 연결을 위한 유저 이름</li>\n</ul>\n<p>왼쪽 아래 저장버튼을 눌러 원격지 등록 완료!</p>\n<h3 id=\"jenkins-on-use--2--프로젝트-빌드ci-이후-원격지로-실제-배포하기\" style=\"position:relative;\"><a href=\"#jenkins-on-use--2--%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B9%8C%EB%93%9Cci-%EC%9D%B4%ED%9B%84-%EC%9B%90%EA%B2%A9%EC%A7%80%EB%A1%9C-%EC%8B%A4%EC%A0%9C-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\" aria-label=\"jenkins on use  2  프로젝트 빌드ci 이후 원격지로 실제 배포하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins on use -2 : 프로젝트 빌드(CI) 이후 원격지로 실제 배포하기</h3>\n<ul>\n<li><strong>각자 프로젝트  선택 > 구성 > Build탭의 add build step > send files or execute commands over SSH</strong></li>\n</ul>\n<img src=\"/assets/img/jenkins/jenkins_002.PNG\">\n<ul>\n<li><strong>접속 이후 수행동작 작성하기</strong></li>\n</ul>\n<img src=\"/assets/img/jenkins/jenkins_003.PNG\">\n<h3 id=\"항목들--설명\" style=\"position:relative;\"><a href=\"#%ED%95%AD%EB%AA%A9%EB%93%A4--%EC%84%A4%EB%AA%85\" aria-label=\"항목들  설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>항목들  설명</h3>\n<ul>\n<li>SSH Server - Name - 사전 설정과정에서 등록한 서버의 이름</li>\n<li>Transfes\n<ul>\n<li>Source files : 젠킨스 서버에서 빌드 완료된 배포파일(전송할 배포파일)</li>\n<li>Exec command : 배포파일 실행 명령</li>\n</ul>\n</li>\n</ul>\n<p>저장을 눌러 배포 설정 완료하고,</p>\n<p>빌드 수행!</p>","id":"48dbd2d6-26e0-5f71-b3b9-dfd8e46f04d7","fields":{"slug":"jenkins-젠킨스-원격-배포-cd-수행하기"},"frontmatter":{"date":"2019-12-03","title":"[Jenkins] 젠킨스 원격 배포 (CD) 수행하기","category":"howto","tags":null,"banner":null},"timeToRead":1}}},"staticQueryHashes":[],"slicesMap":{}}