{"componentChunkName":"component---src-templates-category-tsx","path":"/categories/deeplearning","result":{"pageContext":{"posts":[{"excerpt":"pytorch에서는 in/output 모델에서 커널 사이즈나 이미지 크기등을 조정할 때 \"할당\"만 해주면 끝났지만, 케라스에서는 아래와 같은 과정이 필요하다. https://keras.io/examples/vision/keypoint_detection/#model-building","html":"<p>pytorch에서는 in/output 모델에서 커널 사이즈나 이미지 크기등을 조정할 때 \"할당\"만 해주면 끝났지만, 케라스에서는 아래와 같은 과정이 필요하다.</p>\n<p><a href=\"https://keras.io/examples/vision/keypoint_detection/#model-building\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://keras.io/examples/vision/keypoint_detection/#model-building</a></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">get_model</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># Load the pre-trained weights of MobileNetV2 and freeze the weights</span>\n    backbone <span class=\"token operator\">=</span> keras<span class=\"token punctuation\">.</span>applications<span class=\"token punctuation\">.</span>MobileNetV2<span class=\"token punctuation\">(</span>\n        weights<span class=\"token operator\">=</span><span class=\"token string\">\"imagenet\"</span><span class=\"token punctuation\">,</span> include_top<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> input_shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>IMG_SIZE<span class=\"token punctuation\">,</span> IMG_SIZE<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n    backbone<span class=\"token punctuation\">.</span>trainable <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n    inputs <span class=\"token operator\">=</span> layers<span class=\"token punctuation\">.</span>Input<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>IMG_SIZE<span class=\"token punctuation\">,</span> IMG_SIZE<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    x <span class=\"token operator\">=</span> keras<span class=\"token punctuation\">.</span>applications<span class=\"token punctuation\">.</span>mobilenet_v2<span class=\"token punctuation\">.</span>preprocess_input<span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">)</span>\n    x <span class=\"token operator\">=</span> backbone<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n    x <span class=\"token operator\">=</span> layers<span class=\"token punctuation\">.</span>Dropout<span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n    x <span class=\"token operator\">=</span> layers<span class=\"token punctuation\">.</span>SeparableConv2D<span class=\"token punctuation\">(</span>\n        NUM_KEYPOINTS<span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> strides<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span><span class=\"token string\">\"relu\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n    outputs <span class=\"token operator\">=</span> layers<span class=\"token punctuation\">.</span>SeparableConv2D<span class=\"token punctuation\">(</span>\n        NUM_KEYPOINTS<span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> strides<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span><span class=\"token string\">\"sigmoid\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> keras<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">,</span> outputs<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"keypoint_detector\"</span><span class=\"token punctuation\">)</span></code></pre></div>","id":"b2557adf-b9a4-5683-bb7d-d2c713f3ef11","fields":{"slug":"keras에서-model-input-output-layer를-커스텀하는-방법"},"frontmatter":{"date":"2021-11-24","title":"Keras에서 model input/output layer를 커스텀하는 방법","category":"deeplearning","tags":null,"banner":null},"timeToRead":1}],"categoryName":"deeplearning"}},"staticQueryHashes":["3824141623"]}