{"componentChunkName":"component---src-templates-category-tsx","path":"/categories/tdd/","result":{"pageContext":{"posts":[{"excerpt":"박재성님 Junit 강좌 정리 Junit 기본 사용법 (setup) STS에 Junit 라이브러리가 추가되어 있어야 함. build path에서 추가. Junit Test 버튼 클릭으로 테스트 클래스 생성 Test Annotation을 추가한 메서드 내에서 단위테스트 진행 (using) 하나의 메서드만 테스트를 원할경우, 메서드 이름에 커서를 올린 상태로, Ctrl + f11 결과값 확인은, assertEquals(기댓값,결과값), assert…","html":"<p><a href=\"https://www.youtube.com/watch?v=tyZMdwT3rIY\">박재성님 Junit 강좌</a> 정리</p>\n<h1 id=\"junit-기본-사용법\" style=\"position:relative;\"><a href=\"#junit-%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"junit 기본 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Junit 기본 사용법</h1>\n<hr>\n<p>(setup)</p>\n<ul>\n<li>STS에 J<strong>unit 라이브러리가 추가되어 있어야 함</strong>. build path에서 추가.</li>\n<li>Junit Test 버튼 클릭으로 테스트 클래스 생성</li>\n<li>Test Annotation을 추가한 메서드 내에서 단위테스트 진행</li>\n</ul>\n<p>(using)</p>\n<ul>\n<li>하나의 메서드만 테스트를 원할경우, 메서드 이름에 커서를 올린 상태로, Ctrl + f11</li>\n<li>결과값 확인은, assertEquals(기댓값,결과값), assert류 메서드를 사용해 확인한다. 이 메서드가 false를 반환하면, testcase가 실패하게 된다.</li>\n<li>인스턴스의 테스트간 독립성을 보장하기 위해 @Before 애너테이션을 통해 초기화 진행하자. 테스트케이스별로 인스턴스 초기화 작업 수행</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n\r\n <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span> \r\n\r\n    <span class=\"token annotation punctuation\">@Before</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        cal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//후에 수행되는 모든 TestCase에 대해 해당 초기화작업 진행</span>\r\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>자원 반납과 같은 후처리 작업의 경우, @After 애너테이션을 사용한다</li>\n</ul>","id":"18746cf0-09b3-5f18-99cd-2563b0a8708b","fields":{"slug":"junit-기초-사용법"},"frontmatter":{"date":"2019-08-30","title":"Junit 기초 사용법","category":"TDD","tags":null,"banner":null},"timeToRead":1}],"categoryName":"TDD"}},"staticQueryHashes":[],"slicesMap":{}}