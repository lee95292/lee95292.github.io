{"componentChunkName":"component---src-templates-category-tsx","path":"/categories/kafka","result":{"pageContext":{"posts":[{"excerpt":"T 아카데미 아파치 카프카 세미나 강의자 : 최원영 (SK planet), DEV원영님 개요 여러 Appication node들이 생성되면서 node별로 파이프라인 연결, 코드 복잡성이 증가함 데이터 연동의 복잡성 증가 중추 신경처럼 하나의 노드에 집중하자! 모든 데이터를 브로커로 집중킴.. >> 처리량 중요 , 스케일아웃, 클러스터링, 고가용성 보장 Broker…","html":"<h2 id=\"t-아카데미-아파치-카프카-세미나\" style=\"position:relative;\"><a href=\"#t-%EC%95%84%EC%B9%B4%EB%8D%B0%EB%AF%B8-%EC%95%84%ED%8C%8C%EC%B9%98-%EC%B9%B4%ED%94%84%EC%B9%B4-%EC%84%B8%EB%AF%B8%EB%82%98\" aria-label=\"t 아카데미 아파치 카프카 세미나 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>T 아카데미 아파치 카프카 세미나</h2>\n<p>강의자 : 최원영 (SK planet), DEV원영님</p>\n<h2 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<ul>\n<li>여러 Appication node들이 생성되면서 node별로 파이프라인 연결, 코드 복잡성이 증가함</li>\n<li>데이터 연동의 복잡성 증가</li>\n</ul>\n<blockquote>\n<blockquote>\n<p>중추 신경처럼 하나의 노드에 집중하자!</p>\n</blockquote>\n</blockquote>\n<p>모든 데이터를 브로커로 집중킴.. >> 처리량 중요 , 스케일아웃, 클러스터링, 고가용성 보장</p>\n<ul>\n<li>Broker? 메타데이터를 저장하는 주키퍼와 연동, 컨슈머와 프로듀서 사이의 데이터 중재</li>\n<li>Record? 정제된 토픽 데이터. 직렬/역직렬화해 컨슈머로 전달됨</li>\n<li>POJO > 커스텀 오브젝트로 역/직렬화 사용</li>\n<li>기본제공 직렬화 : StringSerializer</li>\n<li>Topic? 1개 이상 존재, 1개 이상의 파티션으로 구성, 파티션 내에서는 오프셋이 붙고, 숫자가 높을수록 최신</li>\n<li>Producer?</li>\n</ul>\n<h3 id=\"저장-방법\" style=\"position:relative;\"><a href=\"#%EC%A0%80%EC%9E%A5-%EB%B0%A9%EB%B2%95\" aria-label=\"저장 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>저장 방법</h3>\n<ul>\n<li>파일시스템 단위로 저장, 메시지가 저장될땐 세그먼트파일이 열려있음</li>\n</ul>\n<p>컨슈머 > 파티션인 경우, 컨슈머 하나가 놀게됨, 이렇게는 사용 X</p>\n<p>2개 이상의 컨슈머 그룹을 사용하는 경우도 있음</p>\n<ul>\n<li>1개 컨슈머의 장애에 대응</li>\n</ul>\n<p>브로커같은 경우, <strong>레플리카</strong>를 통해 이슈에 대응.</p>\n<p>브로커 버전 / 클라이언트 버전 맞추기!</p>\n<p>에러가 나진 않지만 성능상 ㅁ누제</p>\n<h1 id=\"producer-acks-매우매우-중요한-옵션\" style=\"position:relative;\"><a href=\"#producer-acks-%EB%A7%A4%EC%9A%B0%EB%A7%A4%EC%9A%B0-%EC%A4%91%EC%9A%94%ED%95%9C-%EC%98%B5%EC%85%98\" aria-label=\"producer acks 매우매우 중요한 옵션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Producer acks **매우매우 중요한 옵션</h1>\n<p>ack: 속도와 유실에 관한 설정 (브로커 여러개일 때 의미 가짐: ppt 83)</p>\n<p>ack 0 : 연결된 즉시 성공으로 간주 속도 빠름</p>\n<p>ack 1: reader 파티션에 저장되었는지 확인하면 성공</p>\n<p>ack all : 리더 , 팔로워, 파티션에 저장되었는지 확인. 유실가능성 없음. 팔로워 파티션이 여러개 일수록 성능 저하, 신뢰도 상승</p>\n<p>리밸런스 리스너 : 파티션 새로 할당 / 끊어졌을 때 신호 받기, 컨슈머가 많을 때 참고 위해 컨슈머 모니터링</p>\n<p>200801 기준 우선순위에 밀려 Pending.</p>\n<p><a href=\"https://github.com/AndersonChoi/tacademy-kafka\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">최원영님 카프카 repo</a> 와 카프카 강의에서 학습한 내용 정리할 예정입니다.</p>","id":"5ed42d9c-a919-5f31-85cb-a24b1290bceb","fields":{"slug":"카프가-개요-실습-세미나-정리-pending"},"frontmatter":{"date":"2020-06-19","title":"카프가 개요 & 실습(세미나 정리, Pending)","category":"kafka","tags":null,"banner":null},"timeToRead":2}],"categoryName":"kafka"}},"staticQueryHashes":["3824141623"]}