{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/data-science","result":{"pageContext":{"posts":[{"excerpt":"Pandas DataFrame.select_dtypes() dtype이 맞는 컬럼만 골라낸다. p.s 아래와 같이 구현할수도 있다. read_csv() csv파일을 Pandas.DataFrame으로 읽어들인다.  index_col : index로 사용할 컬럼을 지정한다 DataFrame.copy 기존 데이터프레임을 새로 만들어 반환한다. Series.unique 컬럼의 유니크 요소 반환  결과 DataFrame.nunique, Series…","html":"<h1 id=\"pandas\" style=\"position:relative;\"><a href=\"#pandas\" aria-label=\"pandas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pandas</h1>\n<h2 id=\"dataframeselect_dtypes\" style=\"position:relative;\"><a href=\"#dataframeselect_dtypes\" aria-label=\"dataframeselect_dtypes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DataFrame.select_dtypes()</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">train<span class=\"token punctuation\">.</span>select_dtypes<span class=\"token punctuation\">(</span>exclude<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'object'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># or</span>\ntrain<span class=\"token punctuation\">.</span>select_dtypes<span class=\"token punctuation\">(</span>include<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'object'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>dtype이 맞는 컬럼만 골라낸다.</p>\n</blockquote>\n<p>p.s 아래와 같이 구현할수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>col <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> train <span class=\"token keyword\">if</span> train<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dtypes <span class=\"token operator\">==</span><span class=\"token string\">'object'</span> <span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"read_csv\" style=\"position:relative;\"><a href=\"#read_csv\" aria-label=\"read_csv permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>read_csv()</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">X_full <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'../input/train.csv'</span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token string\">'Id'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>csv파일을 Pandas.DataFrame으로 읽어들인다. </p>\n</blockquote>\n<ul>\n<li>index_col : index로 사용할 컬럼을 지정한다</li>\n</ul>\n<h2 id=\"dataframecopy\" style=\"position:relative;\"><a href=\"#dataframecopy\" aria-label=\"dataframecopy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DataFrame.copy</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">X <span class=\"token operator\">=</span> X_full<span class=\"token punctuation\">[</span>features<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>기존 데이터프레임을 새로 만들어 반환한다.</p>\n</blockquote>\n<h2 id=\"seriesunique\" style=\"position:relative;\"><a href=\"#seriesunique\" aria-label=\"seriesunique permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Series.unique</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">[</span><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span>col <span class=\"token punctuation\">:</span> train<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">'\\n\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> cat_cols<span class=\"token punctuation\">]</span></code></pre></div>\n<blockquote>\n<p>컬럼의 유니크 요소 반환 </p>\n</blockquote>\n<p>결과</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{&#39;MSZoning&#39;: array([&#39;RL&#39;, &#39;RM&#39;, &#39;C (all)&#39;, &#39;FV&#39;, &#39;RH&#39;], dtype=object)}\n\n{&#39;Street&#39;: array([&#39;Pave&#39;, &#39;Grvl&#39;], dtype=object)}\n\n{&#39;Alley&#39;: array([nan, &#39;Grvl&#39;, &#39;Pave&#39;], dtype=object)}\n\n{&#39;LotShape&#39;: array([&#39;Reg&#39;, &#39;IR1&#39;, &#39;IR2&#39;, &#39;IR3&#39;], dtype=object)}\n\n{&#39;LandContour&#39;: array([&#39;Lvl&#39;, &#39;Bnk&#39;, &#39;Low&#39;, &#39;HLS&#39;], dtype=object)}\n\n{&#39;Utilities&#39;: array([&#39;AllPub&#39;, &#39;NoSeWa&#39;], dtype=object)}\n\n{&#39;LotConfig&#39;: array([&#39;Inside&#39;, &#39;FR2&#39;, &#39;Corner&#39;, &#39;CulDSac&#39;, &#39;FR3&#39;], dtype=object)}\n\n{&#39;LandSlope&#39;: array([&#39;Gtl&#39;, &#39;Mod&#39;, &#39;Sev&#39;], dtype=object)}</code></pre></div>\n<h2 id=\"dataframenunique-seriesnunique\" style=\"position:relative;\"><a href=\"#dataframenunique-seriesnunique\" aria-label=\"dataframenunique seriesnunique permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DataFrame.nunique, Series.nunique</h2>\n<h1 id=\"sklearn\" style=\"position:relative;\"><a href=\"#sklearn\" aria-label=\"sklearn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sklearn</h1>\n<h2 id=\"randomforestregressor\" style=\"position:relative;\"><a href=\"#randomforestregressor\" aria-label=\"randomforestregressor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RandomForestRegressor</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">model <span class=\"token operator\">=</span> RandomForestRegressor<span class=\"token punctuation\">(</span>n_estimators<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> criterion<span class=\"token operator\">=</span><span class=\"token string\">'mae'</span><span class=\"token punctuation\">,</span> random_state<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>RandomForest 회귀 모델을 생성한다. 자주 사용하는 파라미터는  아래와 같다.</p>\n</blockquote>\n<p>랜덤포레스트 모델은 여러 머신러닝 모델을 ensemble(결합)하여 만드는 모델이다.\n각 모델의 결합을 통해 오버피팅을 방지하는 효과를 가지고있으며,\n데이터를 sampling해서 만든 Decision tree 평가 결과치의 평균을 통해 계산한다.</p>\n<ul>\n<li>n_estimators: 생성할 트리 개수 </li>\n<li>max_features: 최대로 선택할 특징의 수</li>\n<li>max<em>depth: 트리의 최대 깊이 (max</em>features랑 비례)</li>\n<li>criterion: Error 산정 기준(mae, mse, mse 등등)</li>\n<li>random_state: 난수 시드</li>\n</ul>\n<h2 id=\"from-sklearnmodel_selection\" style=\"position:relative;\"><a href=\"#from-sklearnmodel_selection\" aria-label=\"from sklearnmodel_selection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(from sklearn.model_selection)</h2>\n<h3 id=\"traintestsplit\" style=\"position:relative;\"><a href=\"#traintestsplit\" aria-label=\"traintestsplit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>train<em>test</em>split</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">X_train<span class=\"token punctuation\">,</span> X_valid<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_valid <span class=\"token operator\">=</span> train_test_split<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> train_size<span class=\"token operator\">=</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> random_state<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>X,Y 값에 대한 train/test셋을 일정 비율로 나눈다. train: 모델 학습에 사용, test: 모델 검증에 사용</p>\n</blockquote>\n<ul>\n<li>X,Y:  각각 feature와 result data 셋을 넘긴다.</li>\n<li>train/test_size: 각각 train/test 비율을 넘겨야 하며, 합한 값은 1이 되어야 한다.</li>\n</ul>\n<h2 id=\"from-sklearnmetrics-meanabsoluteerror\" style=\"position:relative;\"><a href=\"#from-sklearnmetrics-meanabsoluteerror\" aria-label=\"from sklearnmetrics meanabsoluteerror permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(from sklearn.metrics) mean<em>absolute</em>error</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mean_absolute_error<span class=\"token punctuation\">(</span>y_v<span class=\"token punctuation\">,</span> preds<span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p> y_validation dataframe에 대한 pred의 mae를 리턴한다.</p>\n</blockquote>\n<h2 id=\"from-sklearnimputer\" style=\"position:relative;\"><a href=\"#from-sklearnimputer\" aria-label=\"from sklearnimputer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(from sklearn.imputer)</h2>\n<h3 id=\"simpleimputer\" style=\"position:relative;\"><a href=\"#simpleimputer\" aria-label=\"simpleimputer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SimpleImputer</h3>\n<blockquote>\n<p>결측치를 대체하기 위한 transformer 객체를 생성한다.</p>\n</blockquote>\n<ul>\n<li>strategy: mean | median | most<em>frequent | constant 등이 있고, constant는 fill</em>value 파라미터를 지정해 상수로 대체한다.</li>\n<li>\n<p>copy: default:  true. false인 경우, 파라미터로 들어온 dataframe을 복제하지 않고 해당 dataframe에서 실행한다..</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">my_imputer <span class=\"token operator\">=</span> SimpleImputer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nimputed_X_train <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>my_imputer<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>X_train<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nimputed_X_valid <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>my_imputer<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>X_valid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"from-sklearnpipeline-pipeline\" style=\"position:relative;\"><a href=\"#from-sklearnpipeline-pipeline\" aria-label=\"from sklearnpipeline pipeline permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(from sklearn.Pipeline) Pipeline</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">cat_transformer <span class=\"token operator\">=</span> Pipeline<span class=\"token punctuation\">(</span>steps<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">'impute'</span><span class=\"token punctuation\">,</span> SimpleImputer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">'ohe'</span><span class=\"token punctuation\">,</span> OneHotEncoder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"from-sklearncolumntransformer-columntransformer\" style=\"position:relative;\"><a href=\"#from-sklearncolumntransformer-columntransformer\" aria-label=\"from sklearncolumntransformer columntransformer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(from sklearn.ColumnTransformer) ColumnTransformer</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">preprocessor <span class=\"token operator\">=</span> ColumnTransformer<span class=\"token punctuation\">(</span>transformers<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">'num'</span><span class=\"token punctuation\">,</span> SimpleImputer<span class=\"token punctuation\">(</span>strategy<span class=\"token operator\">=</span><span class=\"token string\">'constant'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> numerical_cols<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> cat_transformer<span class=\"token punctuation\">,</span> catagorial_cols<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"pytorch\" style=\"position:relative;\"><a href=\"#pytorch\" aria-label=\"pytorch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pytorch</h1>\n<h1 id=\"xgboost\" style=\"position:relative;\"><a href=\"#xgboost\" aria-label=\"xgboost permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>XGboost</h1>","id":"12b8e0c1-c7d0-55a8-ad1d-9a06f8442535","fields":{"slug":"datascience-패키지-메서드-사용법-정리"},"frontmatter":{"date":"2021-09-20","title":"Datascience 패키지 메서드  사용법 정리","category":"data scrience","tags":["data science"],"banner":"/assets/bg/2.jpg"},"timeToRead":3}],"tagName":"data science"}},"staticQueryHashes":["3824141623"]}