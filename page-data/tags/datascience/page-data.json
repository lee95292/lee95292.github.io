{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/datascience","result":{"pageContext":{"posts":[{"excerpt":"kaggle house price prediction EDA 필사. 1. 무엇을 해야할까? 아래의 값을 엑셀 스프레드시트에 저장하자. Variable: 변수명 Type: 변수의 타입값, 컬럼의 값들이 수치를 나타내는 'numerical'타입과, 범주형 변수를 나타내는 'categorial' 값 두개만 들어갈 수 있음 Segment: 변수의 구분값. building, space, location값이 들어갈 수 있음 Expectation…","html":"<p><a href=\"https://www.kaggle.com/pmarcelino/comprehensive-data-exploration-with-python\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">kaggle house price prediction EDA</a> 필사.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">from</span> scipy<span class=\"token punctuation\">.</span>stats <span class=\"token keyword\">import</span> norm\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> StandardScaler\n<span class=\"token keyword\">from</span> scipy <span class=\"token keyword\">import</span> stats\n<span class=\"token keyword\">import</span> warnings\nwarnings<span class=\"token punctuation\">.</span>filterwarnings<span class=\"token punctuation\">(</span><span class=\"token string\">'ignore'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">%</span>matplotlib inline</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'../data/train.csv'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">.</span>columns</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Index([&#39;Id&#39;, &#39;MSSubClass&#39;, &#39;MSZoning&#39;, &#39;LotFrontage&#39;, &#39;LotArea&#39;, &#39;Street&#39;,\n       &#39;Alley&#39;, &#39;LotShape&#39;, &#39;LandContour&#39;, &#39;Utilities&#39;, &#39;LotConfig&#39;,\n       &#39;LandSlope&#39;, &#39;Neighborhood&#39;, &#39;Condition1&#39;, &#39;Condition2&#39;, &#39;BldgType&#39;,\n       &#39;HouseStyle&#39;, &#39;OverallQual&#39;, &#39;OverallCond&#39;, &#39;YearBuilt&#39;, &#39;YearRemodAdd&#39;,\n       &#39;RoofStyle&#39;, &#39;RoofMatl&#39;, &#39;Exterior1st&#39;, &#39;Exterior2nd&#39;, &#39;MasVnrType&#39;,\n       &#39;MasVnrArea&#39;, &#39;ExterQual&#39;, &#39;ExterCond&#39;, &#39;Foundation&#39;, &#39;BsmtQual&#39;,\n       &#39;BsmtCond&#39;, &#39;BsmtExposure&#39;, &#39;BsmtFinType1&#39;, &#39;BsmtFinSF1&#39;,\n       &#39;BsmtFinType2&#39;, &#39;BsmtFinSF2&#39;, &#39;BsmtUnfSF&#39;, &#39;TotalBsmtSF&#39;, &#39;Heating&#39;,\n       &#39;HeatingQC&#39;, &#39;CentralAir&#39;, &#39;Electrical&#39;, &#39;1stFlrSF&#39;, &#39;2ndFlrSF&#39;,\n       &#39;LowQualFinSF&#39;, &#39;GrLivArea&#39;, &#39;BsmtFullBath&#39;, &#39;BsmtHalfBath&#39;, &#39;FullBath&#39;,\n       &#39;HalfBath&#39;, &#39;BedroomAbvGr&#39;, &#39;KitchenAbvGr&#39;, &#39;KitchenQual&#39;,\n       &#39;TotRmsAbvGrd&#39;, &#39;Functional&#39;, &#39;Fireplaces&#39;, &#39;FireplaceQu&#39;, &#39;GarageType&#39;,\n       &#39;GarageYrBlt&#39;, &#39;GarageFinish&#39;, &#39;GarageCars&#39;, &#39;GarageArea&#39;, &#39;GarageQual&#39;,\n       &#39;GarageCond&#39;, &#39;PavedDrive&#39;, &#39;WoodDeckSF&#39;, &#39;OpenPorchSF&#39;,\n       &#39;EnclosedPorch&#39;, &#39;3SsnPorch&#39;, &#39;ScreenPorch&#39;, &#39;PoolArea&#39;, &#39;PoolQC&#39;,\n       &#39;Fence&#39;, &#39;MiscFeature&#39;, &#39;MiscVal&#39;, &#39;MoSold&#39;, &#39;YrSold&#39;, &#39;SaleType&#39;,\n       &#39;SaleCondition&#39;, &#39;SalePrice&#39;],\n      dtype=&#39;object&#39;)</code></pre></div>\n<h1 id=\"1-무엇을-해야할까\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B4%EC%97%87%EC%9D%84-%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C\" aria-label=\"1 무엇을 해야할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 무엇을 해야할까?</h1>\n<p>아래의 값을 엑셀 스프레드시트에 저장하자.</p>\n<ul>\n<li>Variable: 변수명</li>\n<li>Type: 변수의 타입값, 컬럼의 값들이 수치를 나타내는 'numerical'타입과, 범주형 변수를 나타내는 'categorial' 값 두개만 들어갈 수 있음</li>\n<li>Segment: 변수의 구분값. building, space, location값이 들어갈 수 있음</li>\n<li>Expectation: SalePrice에 영향을 미치는 변수들 예측, 상/중/하로 구분</li>\n<li>Conclusion : 데이터 탐색 후 예측한 데이터의 중요도. 상/중/하로 구분</li>\n<li>Comments: 일반적인 주석</li>\n</ul>\n<p>스프레드시트를 채우기 전에 변수에 대한 설명을 다 읽어보고, 이런 질문들을 해본다면 어떨까.</p>\n<ul>\n<li>이 변수는 내가 실제 집을 살 때 고려하는 부분인가?</li>\n<li>그렇다면 얼마나 중요하게 고려하는가?</li>\n<li>이와 연관된 컬럼은 무엇인가? (강한 결합요소 찾기)</li>\n</ul>\n<h1 id=\"saleprice-분석\" style=\"position:relative;\"><a href=\"#saleprice-%EB%B6%84%EC%84%9D\" aria-label=\"saleprice 분석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SalePrice 분석</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>describe<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">count      1460.000000\nmean     180921.195890\nstd       79442.502883\nmin       34900.000000\n25%      129975.000000\n50%      163000.000000\n75%      214000.000000\nmax      755000.000000\nName: SalePrice, dtype: float64</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sns<span class=\"token punctuation\">.</span>displot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;seaborn.axisgrid.FacetGrid at 0x7f78dc9ac280&gt;</code></pre></div>\n<p><img src=\"/assets/211012/output_6_1.png\" alt=\"png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Skewness: %f\"</span> <span class=\"token operator\">%</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>skew<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Kurtosis: %f\"</span> <span class=\"token operator\">%</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>kurt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Skewness: 1.882876\nKurtosis: 6.536282</code></pre></div>\n<h2 id=\"수치형데이터와의-관계를-알아보자\" style=\"position:relative;\"><a href=\"#%EC%88%98%EC%B9%98%ED%98%95%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%99%80%EC%9D%98-%EA%B4%80%EA%B3%84%EB%A5%BC-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90\" aria-label=\"수치형데이터와의 관계를 알아보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>수치형데이터와의 관계를 알아보자</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Above grade (ground) living area square feet</span>\nvar <span class=\"token operator\">=</span> <span class=\"token string\">'GrLivArea'</span>\ndata <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_train<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>var<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">,</span> ylim<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">800000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;AxesSubplot:xlabel=&#39;GrLivArea&#39;, ylabel=&#39;SalePrice&#39;&gt;</code></pre></div>\n<p><img src=\"/assets/211012/output_9_1.png\" alt=\"png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#Total square feet of basement area</span>\nvar <span class=\"token operator\">=</span> <span class=\"token string\">'TotalBsmtSF'</span> \ndata <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_train<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>var<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">,</span> ylim<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">800000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;AxesSubplot:xlabel=&#39;TotalBsmtSF&#39;, ylabel=&#39;SalePrice&#39;&gt;</code></pre></div>\n<p><img src=\"/assets/211012/output_10_1.png\" alt=\"png\"></p>\n<h2 id=\"범주형-변수와의-관계를-알아보자\" style=\"position:relative;\"><a href=\"#%EB%B2%94%EC%A3%BC%ED%98%95-%EB%B3%80%EC%88%98%EC%99%80%EC%9D%98-%EA%B4%80%EA%B3%84%EB%A5%BC-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90\" aria-label=\"범주형 변수와의 관계를 알아보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>범주형 변수와의 관계를 알아보자</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#Rates the overall material and finish of the house</span>\nvar <span class=\"token operator\">=</span> <span class=\"token string\">'OverallQual'</span>\ndata<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_train<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfig<span class=\"token operator\">=</span>sns<span class=\"token punctuation\">.</span>boxplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>var<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">\"SalePrice\"</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\nfig<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span>ymin<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ymax<span class=\"token operator\">=</span><span class=\"token number\">800000</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(-0.5, 9.5, 0.0, 800000.0)</code></pre></div>\n<p><img src=\"/assets/211012/output_12_1.png\" alt=\"png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">var <span class=\"token operator\">=</span> <span class=\"token string\">'YearBuilt'</span>\ndata <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_train<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfig <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>boxplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>var<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">\"SalePrice\"</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\nfig<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span>ymin<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ymax<span class=\"token operator\">=</span><span class=\"token number\">800000</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xticks<span class=\"token punctuation\">(</span>rotation<span class=\"token operator\">=</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"/assets/211012/output_13_0.png\" alt=\"png\"></p>\n<p>4개의 변수들에 대한 상관관계를 알아보았다. 모두 양의 상관관계를 나타내고 있으며, OverallQual같은 경우, 강한 양의 상관관계를 나타냈다.</p>\n<h2 id=\"work-smart\" style=\"position:relative;\"><a href=\"#work-smart\" aria-label=\"work smart permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Work smart</h2>\n<p>위 방식들은 우리의 직감을 통해 연관있는 피쳐들을 뽑아내는 과정이었지만, 우리가 알아내야하는 정보는 이에 그치지 않는다</p>\n<p>전체를 탐험하기 위해 아래 과정을 거쳐야한다</p>\n<ul>\n<li>히트맵 스타일의 상관관계 행렬</li>\n<li>Zoon heatmap 스타일의 'SalePrice' 상관관계 행렬</li>\n<li>연관된 변수들 사이의 산점도 그래프</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">corrmat <span class=\"token operator\">=</span> df_train<span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span>heatmap<span class=\"token punctuation\">(</span>corrmat<span class=\"token punctuation\">,</span> vmax<span class=\"token operator\">=</span><span class=\"token number\">.8</span><span class=\"token punctuation\">,</span> square<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;AxesSubplot:&gt;</code></pre></div>\n<p><img src=\"/assets/211012/output_16_1.png\" alt=\"png\"></p>\n<p>SalePrice와 연관된 변수와의 산점도행렬</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sns<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncorr <span class=\"token operator\">=</span> df_train<span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmycols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>col <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> corr <span class=\"token keyword\">if</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>corr<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">]</span>\ncols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'OverallQual'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GrLivArea'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GarageCars'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'FullBath'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'YearBuilt'</span><span class=\"token punctuation\">]</span>\n\nsns<span class=\"token punctuation\">.</span>pairplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span>mycols<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>size<span class=\"token operator\">=</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"/assets/211012/output_18_0.png\" alt=\"png\"></p>\n<h2 id=\"4-결측치\" style=\"position:relative;\"><a href=\"#4-%EA%B2%B0%EC%B8%A1%EC%B9%98\" aria-label=\"4 결측치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 결측치</h2>\n<ul>\n<li>얼마나 많은 결측치가 있는지?</li>\n<li>결측데이터에 관계가 있는지? 무작위성인지</li>\n</ul>\n<p>결측치는, 표본크기가 줄어든다는 의미이기 때문에, 위 질문에 대한 대답은 중요한 의미를 갖는다.\n또한 15% 이상의 결측률을 보이는 변수는 이를 채우기 위한 어떤 방법도 사용하지 않고 지운다. (집을 구매하는데 큰 영향을 미치는 변수가 아닌 경우가 대부분이므로)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">total <span class=\"token operator\">=</span> df_train<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\npercent <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>df_train<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nmissing_data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>total<span class=\"token punctuation\">,</span> percent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> keys<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Total'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Percent'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nmissing_data<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}</code></pre></div>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Total</th>\n      <th>Percent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>PoolQC</th>\n      <td>1453</td>\n      <td>0.995205</td>\n    </tr>\n    <tr>\n      <th>MiscFeature</th>\n      <td>1406</td>\n      <td>0.963014</td>\n    </tr>\n    <tr>\n      <th>Alley</th>\n      <td>1369</td>\n      <td>0.937671</td>\n    </tr>\n    <tr>\n      <th>Fence</th>\n      <td>1179</td>\n      <td>0.807534</td>\n    </tr>\n    <tr>\n      <th>FireplaceQu</th>\n      <td>690</td>\n      <td>0.472603</td>\n    </tr>\n    <tr>\n      <th>LotFrontage</th>\n      <td>259</td>\n      <td>0.177397</td>\n    </tr>\n    <tr>\n      <th>GarageYrBlt</th>\n      <td>81</td>\n      <td>0.055479</td>\n    </tr>\n    <tr>\n      <th>GarageCond</th>\n      <td>81</td>\n      <td>0.055479</td>\n    </tr>\n    <tr>\n      <th>GarageType</th>\n      <td>81</td>\n      <td>0.055479</td>\n    </tr>\n    <tr>\n      <th>GarageFinish</th>\n      <td>81</td>\n      <td>0.055479</td>\n    </tr>\n    <tr>\n      <th>GarageQual</th>\n      <td>81</td>\n      <td>0.055479</td>\n    </tr>\n    <tr>\n      <th>BsmtFinType2</th>\n      <td>38</td>\n      <td>0.026027</td>\n    </tr>\n    <tr>\n      <th>BsmtExposure</th>\n      <td>38</td>\n      <td>0.026027</td>\n    </tr>\n    <tr>\n      <th>BsmtQual</th>\n      <td>37</td>\n      <td>0.025342</td>\n    </tr>\n    <tr>\n      <th>BsmtCond</th>\n      <td>37</td>\n      <td>0.025342</td>\n    </tr>\n    <tr>\n      <th>BsmtFinType1</th>\n      <td>37</td>\n      <td>0.025342</td>\n    </tr>\n    <tr>\n      <th>MasVnrArea</th>\n      <td>8</td>\n      <td>0.005479</td>\n    </tr>\n    <tr>\n      <th>MasVnrType</th>\n      <td>8</td>\n      <td>0.005479</td>\n    </tr>\n    <tr>\n      <th>Electrical</th>\n      <td>1</td>\n      <td>0.000685</td>\n    </tr>\n    <tr>\n      <th>Id</th>\n      <td>0</td>\n      <td>0.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#dealing with missing data</span>\ndf_train <span class=\"token operator\">=</span> df_train<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>missing_data<span class=\"token punctuation\">[</span>missing_data<span class=\"token punctuation\">[</span><span class=\"token string\">'Total'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndf_train <span class=\"token operator\">=</span> df_train<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'Electrical'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\ndf_train<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#just checking that there's no missing data missing...</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0</code></pre></div>\n<h2 id=\"이상치\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%83%81%EC%B9%98\" aria-label=\"이상치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이상치</h2>\n<h3 id=\"일변량-분석\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%B3%80%EB%9F%89-%EB%B6%84%EC%84%9D\" aria-label=\"일변량 분석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일변량 분석</h3>\n<p>이상치의 임계점을 찾는게 가장 근본적인 문제이다. 이를 위해 데이터를 표준화한다. 여기서 표준화란, 평균을 0, 표준편차를 1로 만드는 작업이다</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">saleprice_scaled <span class=\"token operator\">=</span> StandardScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>np<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nlow_range <span class=\"token operator\">=</span> saleprice_scaled<span class=\"token punctuation\">[</span>saleprice_scaled<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>argsort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\nhigh_range <span class=\"token operator\">=</span> saleprice_scaled<span class=\"token punctuation\">[</span>saleprice_scaled<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>argsort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'outer range (low) of the distribution: '</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>low_range<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nouter range (high) of the distribution'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>high_range<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">outer range (low) of the distribution: \n[[-1.83820775]\n [-1.83303414]\n [-1.80044422]\n [-1.78282123]\n [-1.77400974]\n [-1.62295562]\n [-1.6166617 ]\n [-1.58519209]\n [-1.58519209]\n [-1.57269236]]\n\nouter range (high) of the distribution\n[[3.82758058]\n [4.0395221 ]\n [4.49473628]\n [4.70872962]\n [4.728631  ]\n [5.06034585]\n [5.42191907]\n [5.58987866]\n [7.10041987]\n [7.22629831]]</code></pre></div>\n<h2 id=\"이변량분석\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B3%80%EB%9F%89%EB%B6%84%EC%84%9D\" aria-label=\"이변량분석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이변량분석</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">var <span class=\"token operator\">=</span> <span class=\"token string\">'GrLivArea'</span>\ndata <span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_train<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>var<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">,</span> ylim<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">800000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* &amp; *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n\n\n\n\n\n&lt;AxesSubplot:xlabel=&#39;GrLivArea&#39;, ylabel=&#39;SalePrice&#39;&gt;</code></pre></div>\n<p><img src=\"/assets/211012/output_25_2.png\" alt=\"png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>by <span class=\"token operator\">=</span> <span class=\"token string\">'GrLivArea'</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># result: [1298, 523]</span>\ndf_train<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'Id'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">1299</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\ndf_train<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'Id'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">524</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}</code></pre></div>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>MSZoning</th>\n      <th>LotArea</th>\n      <th>Street</th>\n      <th>LotShape</th>\n      <th>LandContour</th>\n      <th>Utilities</th>\n      <th>LotConfig</th>\n      <th>LandSlope</th>\n      <th>...</th>\n      <th>EnclosedPorch</th>\n      <th>3SsnPorch</th>\n      <th>ScreenPorch</th>\n      <th>PoolArea</th>\n      <th>MiscVal</th>\n      <th>MoSold</th>\n      <th>YrSold</th>\n      <th>SaleType</th>\n      <th>SaleCondition</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>8450</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Inside</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>208500</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>9600</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>FR2</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>181500</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>11250</td>\n      <td>Pave</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Inside</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>223500</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>70</td>\n      <td>RL</td>\n      <td>9550</td>\n      <td>Pave</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Corner</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>272</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2006</td>\n      <td>WD</td>\n      <td>Abnorml</td>\n      <td>140000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>14260</td>\n      <td>Pave</td>\n      <td>IR1</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>FR2</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>12</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>250000</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1455</th>\n      <td>1456</td>\n      <td>60</td>\n      <td>RL</td>\n      <td>7917</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Inside</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>8</td>\n      <td>2007</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>175000</td>\n    </tr>\n    <tr>\n      <th>1456</th>\n      <td>1457</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>13175</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Inside</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2010</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>210000</td>\n    </tr>\n    <tr>\n      <th>1457</th>\n      <td>1458</td>\n      <td>70</td>\n      <td>RL</td>\n      <td>9042</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Inside</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2500</td>\n      <td>5</td>\n      <td>2010</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>266500</td>\n    </tr>\n    <tr>\n      <th>1458</th>\n      <td>1459</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>9717</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Inside</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>112</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>4</td>\n      <td>2010</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>142125</td>\n    </tr>\n    <tr>\n      <th>1459</th>\n      <td>1460</td>\n      <td>20</td>\n      <td>RL</td>\n      <td>9937</td>\n      <td>Pave</td>\n      <td>Reg</td>\n      <td>Lvl</td>\n      <td>AllPub</td>\n      <td>Inside</td>\n      <td>Gtl</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2008</td>\n      <td>WD</td>\n      <td>Normal</td>\n      <td>147500</td>\n    </tr>\n  </tbody>\n</table>\n<p>1458 rows × 63 columns</p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">var <span class=\"token operator\">=</span> <span class=\"token string\">'TotalBsmtSF'</span>\ndata <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_train<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>var<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">,</span> ylim<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">800000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">*c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* &amp; *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n\n\n\n\n\n&lt;AxesSubplot:xlabel=&#39;TotalBsmtSF&#39;, ylabel=&#39;SalePrice&#39;&gt;</code></pre></div>\n<p><img src=\"/assets/211012/output_27_2.png\" alt=\"png\"></p>\n<h2 id=\"더-세부적인-내용들\" style=\"position:relative;\"><a href=\"#%EB%8D%94-%EC%84%B8%EB%B6%80%EC%A0%81%EC%9D%B8-%EB%82%B4%EC%9A%A9%EB%93%A4\" aria-label=\"더 세부적인 내용들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>더 세부적인 내용들.</h2>\n<p>SalePrice가 어떤 값인지 이해하기 위해선다변량 분석에 대한 통계적인 기초 아래의 추정이 필요하다.이미 SalePrice에 관한 몇몇 데이터를 정리하고 탐색해보았으니, 다변량 분석을 가능하게하는 통계적 추정이 어떻게 SalePrice를 경정하는지 알아보아야 한다.</p>\n<p>4개의 통계적 추정값을 살표보자. </p>\n<ul>\n<li>\n<p>Normality - 정규성\n정규분포를 따르는지에 대한 특성. 하나의 변수에서 Saleprice가 정규한지를 체크할 것이다.\n하나의 변수에서의 정규성이 다변수에서의 정규성을 띄도록 도와주지만, 다변수에서의 정규성을 보장하지는 않는다는것을 기억하자.  </p>\n<p>하나 더 고려해야할 것은, 보통 200개 이상의 큰 샘플에 대해서는 정규성이 그다지 큰 이슈가 아니지만 정규성 문제를 해결하면 heteroscedacity를 포함한 많은 문제를 우회할 수 있다. </p>\n</li>\n<li>Homoscedasticity - 등분산성\n등분산성은 '종속 변수가 예측 변수 범위에 걸쳐 동일한 수준의 분산을 나타낸다는 가정'을 나타낸다.\n등분산성은 독립 변수의 모든 값에서 오차 항이 동일하기를 원하기 때문에 바람직하다. </li>\n<li>Linearlity - 선형성\n선형성을 평가하는 가장 쉬운 방법은 산점도가 선형성을 나타내는지 체크하는것이다. 만약 선형적이지 않은 패턴이라면 데이터를 변환하는게 바람직하다. </li>\n<li>Absence of correlated errors - 상관오류의 부재\n상관오류라는 정의가 보여주듯, 하나의 오류가 다른 부분에 상관될 때 발생한다. 예를들어 긍정 오류가 대칭적으로 부정 오류를 만든다면, 이 변수들 사이에는 상관관계가 있는 것이며 이는 시계열 데이터가 시간과 관련있는 패턴일때 종종 발생한다. </li>\n</ul>\n<h2 id=\"정규성-찾기\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EA%B7%9C%EC%84%B1-%EC%B0%BE%EA%B8%B0\" aria-label=\"정규성 찾기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정규성 찾기</h2>\n<p>SalePrice 에 대한 정규성을 깔끔한 방법으로 찾아보자</p>\n<ul>\n<li>히스토그램을 통해 첨도와 왜도 구하기</li>\n<li>정규확률분포: 데이터 분포가 정규 분포를 의미하는 대각선에 근사하는지 찾기.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sns<span class=\"token punctuation\">.</span>distplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fit<span class=\"token operator\">=</span>norm<span class=\"token punctuation\">)</span>\nfig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nres <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>probplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> plot<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"/assets/211012/output_30_0.png\" alt=\"png\"></p>\n<p><img src=\"/assets/211012/output_30_1.png\" alt=\"png\"></p>\n<p>SalePrice는 정규성을 따르지 않는다. 그래프가 너무 뾰족하고 확률분포가 대각선을 따르지 않는다.  </p>\n<p>그러나 간단한 데이터 변환으로 문제를 해결할 수 있다. 통계학 책에서 배울 수 있는 신기한 방법은 <strong>로그</strong>를 취해서 양의 왜도를 조정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sns<span class=\"token punctuation\">.</span>distplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>fit<span class=\"token operator\">=</span>norm<span class=\"token punctuation\">)</span>\nfig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nres <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>probplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> plot<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"/assets/211012/output_33_0.png\" alt=\"png\"></p>\n<p><img src=\"/assets/211012/output_33_1.png\" alt=\"png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'GrLivArea'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'GrLivArea'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#histogram and normal probability plot</span>\nsns<span class=\"token punctuation\">.</span>distplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'GrLivArea'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fit<span class=\"token operator\">=</span>norm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nres <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>probplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'GrLivArea'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> plot<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"/assets/211012/output_35_0.png\" alt=\"png\"></p>\n<p><img src=\"/assets/211012/output_35_1.png\" alt=\"png\"></p>\n<p>다음으로 아래 변수에 대한 정규화를 해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sns<span class=\"token punctuation\">.</span>distplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>fit<span class=\"token operator\">=</span>norm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nres<span class=\"token operator\">=</span>stats<span class=\"token punctuation\">.</span>probplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> plot<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"/assets/211012/output_37_0.png\" alt=\"png\"></p>\n<p><img src=\"/assets/211012/output_37_1.png\" alt=\"png\"></p>\n<p>위 그래프에서 얻을 수 있는 것들?</p>\n<ul>\n<li>왜도</li>\n<li>값이 0인 많은 수의 관측치</li>\n<li>0값은 로그변환으로 근사시킬 수 없다는점</li>\n</ul>\n<p>로그 변환을 적용시키기 위해  basement(?)를 가지는지 아닌지를 나타내는 변수를 하나 만들어, 0이 아닌관측치에 대한 로그 변환을 할 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'HasBsmt'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span>df_train<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\ndf_train<span class=\"token punctuation\">[</span><span class=\"token string\">'HasBsmt'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token number\">0</span>\ndf_train<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'HasBsmt'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'HasBsmt'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sns<span class=\"token punctuation\">.</span>distplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fit<span class=\"token operator\">=</span>norm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfig<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nres <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>probplot<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> plot<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"/assets/211012/output_41_0.png\" alt=\"png\"></p>\n<p><img src=\"/assets/211012/output_41_1.png\" alt=\"png\"></p>\n<h2 id=\"한번의-시도로-공분산성-찾기\" style=\"position:relative;\"><a href=\"#%ED%95%9C%EB%B2%88%EC%9D%98-%EC%8B%9C%EB%8F%84%EB%A1%9C-%EA%B3%B5%EB%B6%84%EC%82%B0%EC%84%B1-%EC%B0%BE%EA%B8%B0\" aria-label=\"한번의 시도로 공분산성 찾기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한번의 시도로 공분산성 찾기</h2>\n<p>그래프를 통해 두 변수의 공분산성을 검증하는 방법은 그래프이다. 콘 또는 다이아몬드 형태의 모양은 두 변수가 등분산성을 나타내는 시작입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'GrLivArea'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;matplotlib.collections.PathCollection at 0x7f78cbf04cd0&gt;</code></pre></div>\n<p><img src=\"/assets/211012/output_43_1.png\" alt=\"png\"></p>\n<p>이전버전의 GrLivArea는 원뿔모양이지만 더이상 그렇지 않다.\n(원뿔모양 산점도가 동질성을 떨어뜨린다는 말이었을까? 헷갈린다)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_train<span class=\"token punctuation\">[</span>df_train<span class=\"token punctuation\">[</span><span class=\"token string\">'TotalBsmtSF'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"/assets/211012/output_45_0.png\" alt=\"png\"></p>\n<h2 id=\"마지막으로-중요한-dummy-variables\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%A7%80%EB%A7%89%EC%9C%BC%EB%A1%9C-%EC%A4%91%EC%9A%94%ED%95%9C-dummy-variables\" aria-label=\"마지막으로 중요한 dummy variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마지막으로 중요한 dummy variables</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>get_dummies<span class=\"token punctuation\">(</span>df_train<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">df_train<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}</code></pre></div>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>MSSubClass</th>\n      <th>LotArea</th>\n      <th>OverallQual</th>\n      <th>OverallCond</th>\n      <th>YearBuilt</th>\n      <th>YearRemodAdd</th>\n      <th>BsmtFinSF1</th>\n      <th>BsmtFinSF2</th>\n      <th>BsmtUnfSF</th>\n      <th>...</th>\n      <th>SaleType_ConLw</th>\n      <th>SaleType_New</th>\n      <th>SaleType_Oth</th>\n      <th>SaleType_WD</th>\n      <th>SaleCondition_Abnorml</th>\n      <th>SaleCondition_AdjLand</th>\n      <th>SaleCondition_Alloca</th>\n      <th>SaleCondition_Family</th>\n      <th>SaleCondition_Normal</th>\n      <th>SaleCondition_Partial</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>60</td>\n      <td>8450</td>\n      <td>7</td>\n      <td>5</td>\n      <td>2003</td>\n      <td>2003</td>\n      <td>706</td>\n      <td>0</td>\n      <td>150</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>20</td>\n      <td>9600</td>\n      <td>6</td>\n      <td>8</td>\n      <td>1976</td>\n      <td>1976</td>\n      <td>978</td>\n      <td>0</td>\n      <td>284</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>60</td>\n      <td>11250</td>\n      <td>7</td>\n      <td>5</td>\n      <td>2001</td>\n      <td>2002</td>\n      <td>486</td>\n      <td>0</td>\n      <td>434</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>70</td>\n      <td>9550</td>\n      <td>7</td>\n      <td>5</td>\n      <td>1915</td>\n      <td>1970</td>\n      <td>216</td>\n      <td>0</td>\n      <td>540</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>60</td>\n      <td>14260</td>\n      <td>8</td>\n      <td>5</td>\n      <td>2000</td>\n      <td>2000</td>\n      <td>655</td>\n      <td>0</td>\n      <td>490</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>6</td>\n      <td>50</td>\n      <td>14115</td>\n      <td>5</td>\n      <td>5</td>\n      <td>1993</td>\n      <td>1995</td>\n      <td>732</td>\n      <td>0</td>\n      <td>64</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7</td>\n      <td>20</td>\n      <td>10084</td>\n      <td>8</td>\n      <td>5</td>\n      <td>2004</td>\n      <td>2005</td>\n      <td>1369</td>\n      <td>0</td>\n      <td>317</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>8</td>\n      <td>60</td>\n      <td>10382</td>\n      <td>7</td>\n      <td>6</td>\n      <td>1973</td>\n      <td>1973</td>\n      <td>859</td>\n      <td>32</td>\n      <td>216</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>9</td>\n      <td>50</td>\n      <td>6120</td>\n      <td>7</td>\n      <td>5</td>\n      <td>1931</td>\n      <td>1950</td>\n      <td>0</td>\n      <td>0</td>\n      <td>952</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>10</td>\n      <td>190</td>\n      <td>7420</td>\n      <td>5</td>\n      <td>6</td>\n      <td>1939</td>\n      <td>1950</td>\n      <td>851</td>\n      <td>0</td>\n      <td>140</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>10 rows × 223 columns</p>\n</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"></code></pre></div>","id":"d5f697d9-44af-51bf-932e-e9a329a1aefa","fields":{"slug":"kaggle-커널분석-notebook-house-price-prediction-2"},"frontmatter":{"date":"2021-10-12","title":"[Kaggle 커널분석 notebook] House price prediction -2","category":"datascience","tags":["datascience","machinelearning"],"banner":"/assets/bg/2.jpg"},"timeToRead":17},{"excerpt":"House price prediction (top4% kernel) 필사. House price prediction 분석 아래는 캐글 집값예측 샘플데회에 대한 나의 코드이다. 보시다시피 EDA도 안하고 무작정 전처리 / 모델링이 끝이며, 스코어도 발산하는 코드이다. House price prediction 분석 -2 부터는 나의 기본코드를 개선할 것이다. House price prediction (top4% kernel…","html":"<p><a href=\"https://www.kaggle.com/serigne/stacked-regressions-top-4-on-leaderboard\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">House price prediction (top4% kernel)</a> 필사.</p>\n<h2 id=\"house-price-prediction-분석\" style=\"position:relative;\"><a href=\"#house-price-prediction-%EB%B6%84%EC%84%9D\" aria-label=\"house price prediction 분석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>House price prediction 분석</h2>\n<p>아래는 캐글 집값예측 샘플데회에 대한 나의 코드이다. 보시다시피 EDA도 안하고 무작정 전처리 / 모델링이 끝이며, 스코어도 발산하는 코드이다.</p>\n<p>House price prediction 분석 -2 부터는 나의 기본코드를 개선할 것이다.</p>\n<p><a href=\"https://www.kaggle.com/serigne/stacked-regressions-top-4-on-leaderboard\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">House price prediction (top4% kernel)</a> 에서는 정규화, 대체, 인코딩 등의 전처리 과정을 사전 학습하고 상위 4%의 모델을 만드는 과정이 담긴 커널이다. </p>\n<p><a href=\"https://github.com/lee95292/houseprice-prediction-improve\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">집값예측문제 개선과정</a>을 git commit을 통해 남길 예정이니, 어떤 과정을 통해 개선했는지 궁금한 캐글러들은 확인해봐도 좋을듯 하다.</p>\n<p>아래는 나의 베이스라인 커널이다.</p>\n<h2 id=\"house-price-prediction-my_kernelipynb\" style=\"position:relative;\"><a href=\"#house-price-prediction-my_kernelipynb\" aria-label=\"house price prediction my_kernelipynb permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>House price prediction [My_kernel.ipynb]</h2>\n<p>House Pr</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">%</span>matplotlib inline</code></pre></div>\n<h2 id=\"house-price-prediction-exercise-1\" style=\"position:relative;\"><a href=\"#house-price-prediction-exercise-1\" aria-label=\"house price prediction exercise 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>House price prediction, exercise #1</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> xgboost\n<span class=\"token keyword\">import</span> sklearn\n<span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sb\n<span class=\"token keyword\">import</span> math\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plot\n\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>pipeline <span class=\"token keyword\">import</span> Pipeline\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>compose <span class=\"token keyword\">import</span> ColumnTransformer\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>impute <span class=\"token keyword\">import</span> SimpleImputer\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> OneHotEncoder<span class=\"token punctuation\">,</span> OrdinalEncoder<span class=\"token punctuation\">,</span> LabelEncoder\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> cross_val_score<span class=\"token punctuation\">,</span> train_test_split<span class=\"token punctuation\">,</span> GridSearchCV<span class=\"token punctuation\">,</span> KFold\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> mean_absolute_error<span class=\"token punctuation\">,</span> mean_squared_error\n<span class=\"token keyword\">from</span> xgboost <span class=\"token keyword\">import</span> XGBRegressor\n\ntrain <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'./data/train.csv'</span><span class=\"token punctuation\">)</span>\ntest <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'./data/test.csv'</span><span class=\"token punctuation\">)</span>\n\ntrain_y <span class=\"token operator\">=</span> train<span class=\"token punctuation\">[</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">]</span>\ntrain<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'SalePrice'</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"exploratory-data-analysis\" style=\"position:relative;\"><a href=\"#exploratory-data-analysis\" aria-label=\"exploratory data analysis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exploratory Data Analysis</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"></code></pre></div>\n<h2 id=\"preprocessing\" style=\"position:relative;\"><a href=\"#preprocessing\" aria-label=\"preprocessing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Preprocessing</h2>\n<ul>\n<li>(1) 1460개 행 중에서 1000개 이상의 결측값을 가진 열 삭제 </li>\n<li>(2) 수치형 변수와 범주형 변수로 나누어서 결측치 대체</li>\n<li>(3) 범주형 데이터는 카디널리티 10 기준으로 나누어서 각각 Oridinal, OneHot으로 인코딩</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># (1)</span>\nloss_cols  <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>col <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> train <span class=\"token keyword\">if</span> train<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1000</span><span class=\"token punctuation\">]</span>\ntrain_f <span class=\"token operator\">=</span> train<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>loss_cols<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># (2)</span>\ntrain_num_cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>col <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> train_f <span class=\"token keyword\">if</span> train_f<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dtypes <span class=\"token operator\">!=</span><span class=\"token string\">'object'</span> <span class=\"token punctuation\">]</span>\nsim <span class=\"token operator\">=</span> SimpleImputer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ntrain_num <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>sim<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>train_f<span class=\"token punctuation\">[</span>train_num_cols<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span>train_num_cols<span class=\"token punctuation\">)</span>\n\ntrain_cat <span class=\"token operator\">=</span> train_f<span class=\"token punctuation\">.</span>select_dtypes<span class=\"token punctuation\">(</span>include<span class=\"token operator\">=</span><span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span>\ncat_sim <span class=\"token operator\">=</span> SimpleImputer<span class=\"token punctuation\">(</span>strategy<span class=\"token operator\">=</span><span class=\"token string\">'most_frequent'</span><span class=\"token punctuation\">)</span>\ntrain_cat <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>cat_sim<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>train_cat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span>train_cat<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># (3)</span>\nhigh_cardinal_cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>col <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> train_cat<span class=\"token punctuation\">.</span>columns <span class=\"token keyword\">if</span> train_cat<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nunique<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\nlow_cardinal_cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>col <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> train_cat<span class=\"token punctuation\">.</span>columns <span class=\"token keyword\">if</span> train_cat<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nunique<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\n\nore <span class=\"token operator\">=</span> OrdinalEncoder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ntrain_ohe <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>get_dummies<span class=\"token punctuation\">(</span>train_cat<span class=\"token punctuation\">[</span>low_cardinal_cols<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  prefix<span class=\"token operator\">=</span>low_cardinal_cols<span class=\"token punctuation\">,</span> prefix_sep<span class=\"token operator\">=</span><span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#pd.DataFrame(ohe.fit_transform(train_cat[low_cardinal_cols]))</span>\ntrain_ore <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>ore<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>train_cat<span class=\"token punctuation\">[</span>high_cardinal_cols<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> columns <span class=\"token operator\">=</span> high_cardinal_cols<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># # of joined dataframe's col is 223</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'====Validation===='</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_cat<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_num<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_ohe<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_ore<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_num<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Valid : \"</span> <span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_ohe<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_ore<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_num<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">223</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># concatenation</span>\ntrain_f<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>train_cat<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\ntrain_f<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>train_num<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\ntrain_f <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>train_num<span class=\"token punctuation\">,</span> train_ohe<span class=\"token punctuation\">,</span> train_ore<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">====Validation====\n39 37\n183 3 37\nValid :  True</code></pre></div>\n<h2 id=\"modeling\" style=\"position:relative;\"><a href=\"#modeling\" aria-label=\"modeling permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Modeling</h2>\n<ul>\n<li>\n<h1 id=\"1-traintestsplit\" style=\"position:relative;\"><a href=\"#1-traintestsplit\" aria-label=\"1 traintestsplit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. train<em>test</em>split</h1>\n</li>\n<li>\n<h1 id=\"2-crossvalscore\" style=\"position:relative;\"><a href=\"#2-crossvalscore\" aria-label=\"2 crossvalscore permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Cross<em>val</em>score</h1>\n</li>\n<li>\n<h1 id=\"3-kfold\" style=\"position:relative;\"><a href=\"#3-kfold\" aria-label=\"3 kfold permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Kfold</h1>\n</li>\n<li>\n<h1 id=\"3-kfold--hyperparameter-tuninggcv\" style=\"position:relative;\"><a href=\"#3-kfold--hyperparameter-tuninggcv\" aria-label=\"3 kfold  hyperparameter tuninggcv permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. KFold + hyperparameter tuning(GCV)</h1>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> flag <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># error : </span>\n    train_x<span class=\"token punctuation\">,</span> valid_x<span class=\"token punctuation\">,</span> train_y<span class=\"token punctuation\">,</span> valid_y <span class=\"token operator\">=</span> train_test_split<span class=\"token punctuation\">(</span>train_f<span class=\"token punctuation\">,</span>train_y<span class=\"token punctuation\">,</span> train_size<span class=\"token operator\">=</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span>\n\n    model <span class=\"token operator\">=</span> XGBRegressor<span class=\"token punctuation\">(</span>eta<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> colsample_bytree<span class=\"token operator\">=</span><span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> max_depth<span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> min_child_weight<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>train_x<span class=\"token punctuation\">,</span>train_y<span class=\"token punctuation\">)</span>\n\n    pred <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>valid_x<span class=\"token punctuation\">)</span>\n\n    score <span class=\"token operator\">=</span> mean_squared_error<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> valid_y<span class=\"token punctuation\">,</span> squared<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mean_squared_error: \"</span><span class=\"token punctuation\">,</span>score<span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">elif</span> flag <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>  \n    model <span class=\"token operator\">=</span> XGBRegressor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    scores <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">*</span>cross_val_score<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> train_f<span class=\"token punctuation\">,</span> train_y<span class=\"token punctuation\">,</span> cv<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> scoring<span class=\"token operator\">=</span><span class=\"token string\">'neg_mean_squared_error'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mean_squared_error mean: \"</span><span class=\"token punctuation\">,</span>scores<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> flag <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n<span class=\"token keyword\">elif</span> flag <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span>\n    train_x<span class=\"token punctuation\">,</span> valid_x<span class=\"token punctuation\">,</span> train_y<span class=\"token punctuation\">,</span> valid_y <span class=\"token operator\">=</span> train_test_split<span class=\"token punctuation\">(</span>train_f<span class=\"token punctuation\">,</span> train_y<span class=\"token punctuation\">,</span> train_size<span class=\"token operator\">=</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> test_size <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span>\n    \n    model <span class=\"token operator\">=</span> XGBRegressor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    kf <span class=\"token operator\">=</span> KFold<span class=\"token punctuation\">(</span>random_state<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> n_splits<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    params <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'eta'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">'max_depth'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'min_child_weight'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'colsample_bytree'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.75</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n    \n    gcv <span class=\"token operator\">=</span> GridSearchCV<span class=\"token punctuation\">(</span>estimator<span class=\"token operator\">=</span>model<span class=\"token punctuation\">,</span> cv<span class=\"token operator\">=</span>kf<span class=\"token punctuation\">,</span> n_jobs<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> scoring<span class=\"token operator\">=</span><span class=\"token string\">'neg_mean_squared_error'</span><span class=\"token punctuation\">,</span> verbose<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> param_grid<span class=\"token operator\">=</span>params<span class=\"token punctuation\">)</span>\n    \n    \n    gcv<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>train_x<span class=\"token punctuation\">,</span> train_y<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>gcv<span class=\"token punctuation\">.</span>best_params_<span class=\"token punctuation\">)</span>\n    \n    best_model <span class=\"token operator\">=</span> gcv<span class=\"token punctuation\">.</span>best_estimator_\n    pred <span class=\"token operator\">=</span> best_model<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>valid_x<span class=\"token punctuation\">)</span>\n    score <span class=\"token operator\">=</span> mean_squared_error<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> valid_y<span class=\"token punctuation\">,</span> squared<span class=\"token operator\">=</span>Fasle<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mean_squared_error: \"</span><span class=\"token punctuation\">,</span>score<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#     Fitting 10 folds for each of 8 candidates, totalling 80 fits</span>\n<span class=\"token comment\">#     {'colsample_bytree': 0.75, 'max_depth': 5, 'min_child_weight': 3}</span>\n<span class=\"token comment\">#     Mean_absolute_error:  17648.85913420377</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mean_squared_error:  25757.824396836273</code></pre></div>","id":"81fff683-1ff7-5f96-980b-dd25b647f656","fields":{"slug":"kaggle-커널분석-notebook-house-price-prediction"},"frontmatter":{"date":"2021-08-25","title":"[Kaggle 커널분석 notebook] House price prediction","category":"datascience","tags":["datascience","machinelearning"],"banner":"/assets/bg/2.jpg"},"timeToRead":4},{"excerpt":"Machine Learning XGBoost 파라미터 설명_kaggle XGBoost 파라미터 설명 정규화된 선형회귀(ratsgo님 블로그) XGBoost 파라미터 설명_kaggle 번역 및 정리 General params 2.1.1 booster 부스터 파라미터는  어떤 부스터를 사용할것인지에 대한 파라미터  각각의 iteration에 어떤 부스터를 사용할지 지정할 수 있도록 함  gbtree, gblinear, dart…","html":"<ul>\n<li>\n<p>Machine Learning</p>\n<ul>\n<li><a href=\"https://www.kaggle.com/prashant111/a-guide-on-xgboost-hyperparameters-tuning\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">XGBoost 파라미터 설명_kaggle</a></li>\n<li><a href=\"https://xgboost.readthedocs.io/en/latest/parameter.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">XGBoost 파라미터 설명</a></li>\n<li><a href=\"https://ratsgo.github.io/machine%20learning/2017/05/22/RLR/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">정규화된 선형회귀(ratsgo님 블로그)</a></li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p><a href=\"https://www.kaggle.com/prashant111/a-guide-on-xgboost-hyperparameters-tuning\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">XGBoost 파라미터 설명_kaggle</a> 번역 및 정리</p>\n<h2 id=\"general-params\" style=\"position:relative;\"><a href=\"#general-params\" aria-label=\"general params permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>General params</h2>\n<h3 id=\"211-booster\" style=\"position:relative;\"><a href=\"#211-booster\" aria-label=\"211 booster permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1.1 booster</h3>\n<ul>\n<li>부스터 파라미터는  어떤 부스터를 사용할것인지에 대한 파라미터 </li>\n<li>각각의 iteration에 어떤 부스터를 사용할지 지정할 수 있도록 함 </li>\n<li>\n<p><strong>gbtree, gblinear, dart</strong>  세개의 옵션이 있다.</p>\n<ul>\n<li>\n<p>gbtree, dart는 트리기반 모델이고, gblinear는 선형 모델이다</p>\n<h3 id=\"212-verbosity\" style=\"position:relative;\"><a href=\"#212-verbosity\" aria-label=\"212 verbosity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1.2 verbosity</h3>\n<p>기본값: 1</p>\n</li>\n</ul>\n</li>\n<li>결과값을 출력하는지에 대한 파라미터 (0: 메시지없음, 1:경고메시지, 2:정보, 3:디버그)</li>\n</ul>\n<h3 id=\"213-nthread\" style=\"position:relative;\"><a href=\"#213-nthread\" aria-label=\"213 nthread permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1.3 nthread</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">기본값: OS 설정값, 없다면 가용한 최대한의 스레드 수</code></pre></div>\n<ul>\n<li>XGBoost에서 사용하는 병렬 스레드의 개수</li>\n<li>시스템에서 사용할 코어와 스레드의 개수</li>\n<li>모든 코어를 사용하고싶다면, 기본값을 사용하기</li>\n</ul>\n<p><strong>disable<em>default</em>eval<em>metric[기본값 0], num</em>pbuffer[자동설정값], num_feature[자동설정값]</strong> 과 같은 여러 전역 파라미터들이 있다. 하지만, 이는 대부분 XGBoost가 자동으로 설정해주니 더이상 논의하지 않는다.</p>\n<h2 id=\"booster-parameters\" style=\"position:relative;\"><a href=\"#booster-parameters\" aria-label=\"booster parameters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Booster Parameters</h2>\n<ul>\n<li>선형 부스터와 트리 부스터가 있다.</li>\n<li>선형 부스터에 비해 트리 부스터가 월등히 성능이 좋고 자주 쓰이므로, 트리 부스터에 대해서만 정리한다</li>\n</ul>\n<h3 id=\"221-eta\" style=\"position:relative;\"><a href=\"#221-eta\" aria-label=\"221 eta permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.1 eta</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">기본값 0.3, learning_rate와 같은 의미의 파라미터</code></pre></div>\n<ul>\n<li>GBM에서의 learning_rate와 유사한 파라미터이다.</li>\n<li>과적합 방지를 위한 스텝 크기를 축소하는 방식이다.</li>\n<li>각 부스팅 단계 후에 새로운 특징에 대한 가중치를 직접 가져올 수 있고, eta 변수는 부스팅 과정을 더 안전하게 만들기 위해 특징의 가중치를 축소시킬 수 있다.</li>\n<li>이는 각 스텝에서의 가중치를 줄여 모델이 조금 더 robust(무뎌지게)한다</li>\n<li>[0~1] 범위의 값이고, 보통 0.01~2사이의 값을 지정한다.</li>\n</ul>\n<h3 id=\"222-gamma\" style=\"position:relative;\"><a href=\"#222-gamma\" aria-label=\"222 gamma permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.2 gamma</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">기본값 0, min_split_loss와 비슷함</code></pre></div>\n<ul>\n<li>트리의 노드가 분할했을 경우, 손실함수에서 양의 감소가 있을경우에만 분할한다.</li>\n<li>Gamma는 노드가 분리되기 위한 최소의 감소값을 나타낸다</li>\n<li>큰 값일수록 알고리즘이 더 보수적으로 동작하도록 한다. 이는 손실함수에 다양하게 의존하기 때문에 그에 맞게 조절해야 한다.</li>\n<li>[0~무한대]의 값을 갖는다</li>\n</ul>\n<h3 id=\"223-max_depth\" style=\"position:relative;\"><a href=\"#223-max_depth\" aria-label=\"223 max_depth permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.3 max_depth</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">기본값 6, GBM에서와 같이 tree 깊이의 최댓값을 나타낸다</code></pre></div>\n<ul>\n<li>높은 값이 표본의 특정 값과의 관계까지 학습하게 하는것처럼, 과적합을 컨트롤할 수 있다.</li>\n<li>이 값을 올리는것은 모델을 복잡하고, 과적합의 가능성을 높힌다.</li>\n<li>The value 0 is only accepted in lossguided growing policy when tree_method is set as hist and it indicates no limit on depth.(손실유도정책에 관한 내용. 이해 X)</li>\n<li>이 값을 높게 설정하면, XGBoost가 깊은 레벨의 트리를 학습하기 위해 많은 메모리를 사용하므로, 주의해햐 함.</li>\n<li>0~무한의 범위</li>\n<li>CV를 사용해 튜닝하는것이 좋음</li>\n<li>통상적으로 3-10의 값을 갖는다</li>\n</ul>\n<h3 id=\"224-minchildweight\" style=\"position:relative;\"><a href=\"#224-minchildweight\" aria-label=\"224 minchildweight permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.4 min<em>child</em>weight</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">기본값 1, 자식노드에 필요한 모든 노드 가중치의 최소 합을 지정.</code></pre></div>\n<ul>\n<li>GBM에서의 min<em>child</em>leaf와 유사하지만, 관측치의 개수가 아닌 관측치 합의 최솟값이라는것에서 차이가 있다.</li>\n<li>과적합을 막기 위해 사용한다</li>\n<li>높은 값을 설정해 트리를 위해 지나치게 특정지어진 값과의 관계를 학습하는것을 방지한다.</li>\n<li>너무 높은 값은 under-fitting(과소적합)을 일으킨다. 그러므로, CV를 통해 조절하자.</li>\n<li>min<em>child</em>weight값이 커질수록 보수적인 알고리즘이 된다.</li>\n<li>0~무한 값을 갖는다</li>\n</ul>\n<h3 id=\"225-maxdeltastep\" style=\"position:relative;\"><a href=\"#225-maxdeltastep\" aria-label=\"225 maxdeltastep permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.5 max<em>delta</em>step</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">기본값 0, </code></pre></div>\n<h3 id=\"226-subsample\" style=\"position:relative;\"><a href=\"#226-subsample\" aria-label=\"226 subsample permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.6 subsample</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">기본값 1, 각 트리에서 임의로 샘플을 추출하기 위한 관측치의 비율을 나타낸다.</code></pre></div>\n<ul>\n<li>훈련 인스턴스의 하위표본의 비율.</li>\n<li>0.5로 설정하면 트리를 훈련시키기 이전에 훈련데이터의 절반을 랜덤하게 표본으로 추출한다. 이를 통해 과적합을 방지한다.</li>\n<li><strong>subsampling</strong>은 부스팅 과정에서 매 반복외 1회 시행한다.</li>\n<li>낮은 값을 통해 알고리즘이 과적합을 막고, 보수적으로 동작할 수 있도록 하지만, 너무 적은 값은 과소추정을 발생시킨다.</li>\n<li>(0~1] 값을 가질 수 있으며, 보통 0.5~1의 값을 지정한다</li>\n</ul>\n<h3 id=\"227-colsamplebytree-colsamplebylevel-colsample_bynode\" style=\"position:relative;\"><a href=\"#227-colsamplebytree-colsamplebylevel-colsample_bynode\" aria-label=\"227 colsamplebytree colsamplebylevel colsample_bynode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.7 colsample<em>bytree, colsample</em>bylevel, colsample_bynode</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">기본값: 1, 열(colums)의 subsampling을 하기 위한 파라미터 모음</code></pre></div>\n<ul>\n<li>모든 colsample_by 파라미터는 (0,1] 값을 가질 수 있고, 1의 기본값을 가지며,  subsampling될 열의 비율을 결정한다.</li>\n<li><strong>colsample_bytree</strong> 는 각 트리가 생성될 때 이에 대해  subsampling할 열의 비율을 나타낸다.  subsampling은 트리가 생성될 때 한번 수행된다.</li>\n<li><strong>colsample_bylevel</strong> 은 각 레벨에서 열의 하위표본 비율이다.  subsampling은 트리에서 새로운 깊이 단계에 도달했을때마다 발생한다.</li>\n<li><strong>colsample_bynode</strong> 는 각 노드에서 열을  subsampling하는 비율이다.  subsampling은 분할이 일어날때마다 발생한다. </li>\n<li>각각 현재 트리,레벨,노드에 선택된 열 집합을  subsampling한다</li>\n<li>각 파라미터는 누산되는 방식으로 동작하며, 각각을 0.5로 지정한 상태에서 64개의 특징을 부여하면, 각 분할에서 8개의 특징만이 남게된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">파라미터 lambda와 alpha는 정규화항에 대한 파라미터이므로, 정규화에 관한 이해가 필수적이다.  \nhttps://ratsgo.github.io/machine%20learning/2017/05/22/RLR/ 를 통해 간단하게 정규화를 이해해보자.</code></pre></div>\n<h3 id=\"228-lambda\" style=\"position:relative;\"><a href=\"#228-lambda\" aria-label=\"228 lambda permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.8 lambda</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">기본값 1, 가중치에 대한 L2정규화 항( Ridge regression과 유사함)</code></pre></div>\n<ul>\n<li>XGBoost에서 정규화 파트를 담당</li>\n<li>이 값을 증가시키면, 모델을 보수적으로 만들 수 있음</li>\n</ul>\n<h3 id=\"229-alpha\" style=\"position:relative;\"><a href=\"#229-alpha\" aria-label=\"229 alpha permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.9 alpha</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">기본값 0, 가중치에 대한 L1 정규화 항 (Lasso regression과 유사함)</code></pre></div>\n<ul>\n<li>매우 높은 차원의 경우, 알고리즘이 더 빨리 동작하도록 구현할 수 있다.</li>\n<li>이 값을 증가시키면 모델을 보수적으로 만들 수 있음</li>\n</ul>\n<h3 id=\"2210-tree_method\" style=\"position:relative;\"><a href=\"#2210-tree_method\" aria-label=\"2210 tree_method permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.10 tree_method</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">기본값 auto(문자열), XGBoost에서 사용할 트리 생성 알고리즘.</code></pre></div>\n<ul>\n<li>XGBoost는 분산 훈련을 위한 approx, hist, gpu<em>hist 트리 메서드와, approx, gpu</em>hist를 통해 외부 메모리를 사용할 수 있도록 실험적으로 지원한다.</li>\n<li>[auto,exact,approx, hist,gpu_hist]를 사용할 수 있음</li>\n<li>\n<p>auto: 휴리스틱 방법을 통해 가장 빠른 메서드를 사용함.</p>\n<ul>\n<li>적가나 중간정도 크기의 데이셋은 exact greedy 메서드(exact)가 사용됨.</li>\n<li>매우 큰 데이터셋에는 approximate 알고리즘(approx)가 사용됨</li>\n<li>고전적인 방법으로, 단일 기기에서는 항상 exact greedy가 사용되기에, approximate 방법이 선택될 때 알림을 받게 된다.</li>\n</ul>\n</li>\n<li>exact: exact greedy algorithm</li>\n<li>approx: 대략적인 분위수와 기울기 히스토그램을 통한 approximate greedy algorithm</li>\n<li>hist: approximate greedy algorithm을 최적화한 빠른 히스토그램. bins caching과 같이 일부의 성능 개선방법을 사용함.</li>\n<li>gpu_hist: hist알고리즘에 대한 GPU버전 구현</li>\n</ul>\n<h3 id=\"2211-scalepostweight\" style=\"position:relative;\"><a href=\"#2211-scalepostweight\" aria-label=\"2211 scalepostweight permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.11 scale<em>post</em>weight</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">기본값 1, 양과 음의 가중치 값의 균형을 조절한다</code></pre></div>\n<ul>\n<li>불균형한 클래스들이 있는 경우 유용하다.</li>\n<li>높은 클래스의 불균형이 있는경우, 0보다 큰 값을 사용해 빠르게 수렴하도록 해야한다.</li>\n<li>일반적으로 고려해야 하는 값 : <strong>sum(negative instances) / sum(positive instances)</strong></li>\n</ul>\n<h3 id=\"2212-max_leaves\" style=\"position:relative;\"><a href=\"#2212-max_leaves\" aria-label=\"2212 max_leaves permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.12 max_leaves</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">기본값 0, 추가하는 노드의 최댓값</code></pre></div>\n<ul>\n<li>grow_policy=lossguide일때만 유효하게 동작</li>\n</ul>\n<p>sketch<em>eps,updater, refresh</em>leaf, process<em>type, grow</em>policy, max<em>bin, predictor and num</em>parallel_tree 와 같은 다른 파라미터들이 있지만, <a href=\"https://xgboost.readthedocs.io/en/latest/parameter.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">XGBoost 공식문서(파라미터 설명)</a>을 참고하자.</p>\n<hr>\n</li>\n</ul>\n<h2 id=\"learning-task-parameters\" style=\"position:relative;\"><a href=\"#learning-task-parameters\" aria-label=\"learning task parameters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Learning Task Parameters</h2>\n<ul>\n<li>이러한 파라미터들은각 단계에서 계산할 최적 목적함수 검증방법을  정의하는데 사용한다.</li>\n<li>이 파라미터들은 학습과정과 그에 상응하는 학습 목적함수를 구체화하는데 사용한다. </li>\n</ul>\n<h3 id=\"231-objective\" style=\"position:relative;\"><a href=\"#231-objective\" aria-label=\"231 objective permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3.1 objective</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">objective, 기본값: &quot;reg:squerederror, 손실함수가 최소화해야하는 함수를 정의한다.</code></pre></div>\n<ul>\n<li>reg:squarederror: 손실값의 제곱으로 회귀</li>\n<li>reg:squaredlogerror: 로그 손실인 1/2[log(pred)+1 - log(label+1)] 값의 제곱으로 회귀. 모든 입력값은 -1보다 커야하는 조건이 있음.</li>\n<li>reg:logistic: 로지스틱 회귀.</li>\n<li>binary:logistic: 이진 분류를 위한 로지스틱 회귀. 확률값(0~1)을 결과로 가짐.</li>\n<li>binary:logitraw: 이진 분류를 위한 로지스틱 회귀, 로지스틱 변환 이전의 점수를 결과로 가짐.</li>\n<li>binary:hinge: 이진 분류를 위한 hinge 손실. 확률값을 만들지 않고, 0또는 1의 예측결과를 가짐.</li>\n<li>multi:softmax: 다중분류를 위한 softmax 손실. softmax를 통해 XGBoost가 다중 분류를 하고자 한다면, num_class값을 지정해야 한다.</li>\n<li>multi:softprob: 위의 softmax와 같이, ndata nclass 행렬로 변환할 수 있는 벡터를 결과로 가진다. 각 class에 속하는 데이터의 예측확률값을 포함한다.</li>\n</ul>\n<h3 id=\"232-eval_metric\" style=\"position:relative;\"><a href=\"#232-eval_metric\" aria-label=\"232 eval_metric permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3.2 eval_metric</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">eval_metric, 목적함수에 따라 기본값이 정해짐.</code></pre></div>\n<ul>\n<li>데이터를 검증하기 위해 사용되는 지표.</li>\n<li>회귀에는 rmse, 분류에는 error, ranking에는 MAP(mean average prediction)이 기본값으로 지정된다.</li>\n<li>여러개의 검증 지표를 추가할 수 있다.</li>\n<li>파이썬 사용자는 지표들을 map이 아니라 list형태로 전달해야 한다.</li>\n<li>\n<p>가장 보편적으로 사용되는 지표들이다.</p>\n<ul>\n<li>rmse: <a href=\"https://en.wikipedia.org/wiki/Root-mean-square_deviation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">root mean square error</a>, 제곱 평균의 루트값 </li>\n<li>mae: <a href=\"https://en.wikipedia.org/wiki/Mean_absolute_error\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">mean absolute error</a>: 절댓값의 평균  </li>\n<li>logloss: <a href=\"https://en.wikipedia.org/wiki/Likelihood_function#Log-likelihood\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">negative log-liklihood</a></li>\n<li>error: 이진 분류에서 오차 비율( &#x3C;= 0.5 ) #wrong cases / all cases 로 계산된다. 0.5보다 큰 인스턴스를 positive로 고려하고, 나머지를 negative instance로 고려할것이다.</li>\n<li>merror: 다중 분류에서 오차 비율이다. #wrong cases/ all cases로 계산된다.</li>\n<li>mlogloss: <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.metrics.log_loss.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Multiclass logloss</a> </li>\n<li>auc: <a href=\"https://en.wikipedia.org/wiki/Receiver_operating_characteristic#Area_under_curve\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Area under the curve</a></li>\n<li>aucpr: <a href=\"https://en.wikipedia.org/wiki/Precision_and_recall\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Aread under the PR curve</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"233-seed\" style=\"position:relative;\"><a href=\"#233-seed\" aria-label=\"233 seed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3.3 seed</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">seed, 기본값 0.</code></pre></div>\n<ul>\n<li>난수 시드값.</li>\n<li>R 패키지에서는 무시되어 set.seed()가 대신 사용된다.</li>\n<li>재생산 가능한 결과를 만들거나 파라미터를 튜닝할때 사용된다.</li>\n</ul>","id":"be1dd9f0-96d2-5024-8b40-8b709cb674a1","fields":{"slug":"데이터사이언스-링크-모음"},"frontmatter":{"date":"2021-08-22","title":"데이터사이언스 링크 모음","category":"datascience","tags":["datascience","machinelearning"],"banner":"/assets/bg/2.jpg"},"timeToRead":7},{"excerpt":"공통코드 loc: label이나 쿼리를 통해 선택하는 방법 label orientied : inclusive of end Location iloc: 행번호로 선택하는 방법 position oriented : exclusive of end Index location","html":"<h1 id=\"공통코드\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%ED%86%B5%EC%BD%94%EB%93%9C\" aria-label=\"공통코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공통코드</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\ndata <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'mglee'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'python'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'pandas'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'datadog'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 아래와 같이 선언할수도 있음</span>\ndata <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"mglee\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"python\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pandas\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"datadog\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"loc-label이나-쿼리를-통해-선택하는-방법\" style=\"position:relative;\"><a href=\"#loc-label%EC%9D%B4%EB%82%98-%EC%BF%BC%EB%A6%AC%EB%A5%BC-%ED%86%B5%ED%95%B4-%EC%84%A0%ED%83%9D%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"loc label이나 쿼리를 통해 선택하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>loc: label이나 쿼리를 통해 선택하는 방법</h3>\n<p>label orientied : inclusive of end</p>\n<blockquote>\n<p>Location</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"></code></pre></div>\n<h3 id=\"iloc-행번호로-선택하는-방법\" style=\"position:relative;\"><a href=\"#iloc-%ED%96%89%EB%B2%88%ED%98%B8%EB%A1%9C-%EC%84%A0%ED%83%9D%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"iloc 행번호로 선택하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>iloc: 행번호로 선택하는 방법</h3>\n<p>position oriented : exclusive of end</p>\n<blockquote>\n<p>Index location</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#    name   age</span>\n<span class=\"token comment\"># 0  mglee  23</span></code></pre></div>","id":"ced72052-a0db-5ded-91a4-0a7d5a8e9314","fields":{"slug":"pandas-기초-사용법"},"frontmatter":{"date":"2021-05-15","title":"Pandas 기초 사용법","category":"DataScience","tags":["datascience","pandas"],"banner":"/assets/bg/2.jpg"},"timeToRead":1}],"tagName":"datascience"}},"staticQueryHashes":["3824141623"]}